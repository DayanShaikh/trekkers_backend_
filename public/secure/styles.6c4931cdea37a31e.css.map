{"version":3,"file":"styles.6c4931cdea37a31e.css","mappings":"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ACE;AzB2VN;AyBxVI;EACE;EACA,mBAT8B;AzBmWpC;AyBtVM;;EA5CJ;EAEA;AzBqYF;AyBlVM;EArDJ;EAEA;AzByYF;;A0B/YE;EACE;A1BkZJ;;A0B/YE;EACE;A1BkZJ;;A2BzXE;EACE;A3B4XJ;;A2BxXE;EACE;A3B2XJ;;A4BjdE;E1BiEA;EACA;EACA;EACA;EAEA;AFmZF;;A6BjZE;EACE;EACA;A7BoZJ;A6BlZI;;EAEE,eAjGkB;A7BqfxB;;A8BzaE;EACE;A9B4aJ;;A+BvWE;EACE;A/B0WJ;;A+BvWE;EAEI;EACA;EACA;A/ByWN;;AgC7bE;EACE;AhCgcJ;;AiC3VE;EAEI;EACA;EACA;AjC6VN;;AkCheE;EAEI;EACA;EACA;AlCkeN;;AmCneE;EACE,iDAHY;AnCyehB;;AmCneE;EACE,iDAPY;AnC6ehB;;AmCjeI;EACE;AnCoeN;AS3hBE;EARA;EACA;EACA;EAQE;EACA;AT+hBJ;AS5hBI;EACE,e0BiD0B;AnC6ehC;AmC1eI;EACE;AnC4eN;ASxiBE;EARA;EACA;EACA;EAQE;EACA;AT4iBJ;ASziBI;EACE,e0BsD0B;AnCqfhC;AmClfI;EACE;EACA;EACA;AnCofN;;AmC9eI;EACE;AnCifN;AS3jBE;EARA;EACA;EACA;EAQE;EACA;AT+jBJ;AS5jBI;EACE,e0BoE0B;AnC0fhC;AmCvfI;EACE;AnCyfN;ASxkBE;EARA;EACA;EACA;EAQE;EACA;AT4kBJ;ASzkBI;EACE,e0ByE0B;AnCkgBhC;AmC/fI;EACE,iDA1CU;EA2CV;EACA;AnCigBN;;AoCjjBE;;EAGI;EACA;ApCmjBN;;AqCvkBE;EAEI;EACA;ArCykBN;;AqCrkBE;EACE;EAEE;EACA;EACA;ArCukBN;;AsC1kBE;EACE;AtC6kBJ;;AsC1kBE;EACE;EACA;AtC6kBJ;;AsC1kBE;EACE;AtC6kBJ;;AuC5nBE;EACE;EAIA;AvC4nBJ;AuCrnBI;EACE;AvCunBN;;AuCnnBE;EACE;AvCsnBJ;;AuCnnBE;EACE;EACA;EACA;EAEA;EAIA;AvCknBJ;AwCnmBI;EDXE;AvCinBN;;AwCrpBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAGA;EAGA;EACA;EAMA;AxC4oBJ;AwC1oBI;EACE;EACA;AxC4oBN;;AyC5pBE;EAEE;EAGA;EACA;EACA;EACA;AzC4pBJ;;AyCxpBE;EACE;EACA,aA3BwB;AzCsrB5B;AyCzpBI;EAGE;AzCypBN;;AyCjpBE;EACE;EACA;EACA,aA1Cc;AzC8rBlB;;AyChpBE;EAGE;EACA;EACA;EACA,aApDc;EAwDd;EACA;EACA;AzC8oBJ;;AyC3oBE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApEuB;EAqEvB;EACA;EACA;EACA;AzC4oBJ;AyC1oBI;EACE;AzC4oBN;AyCvoBM;EAGE;AzCuoBR;;AyCloBE;EACE,+BAtFqB;AzC2tBzB;;AyCloBE;EAEE;EACA;EACA;AzCooBJ;AyC9nBI;EACE;EACA;AzCgoBN;;AyC5nBE;EACE;AzC+nBJ;;AyC1nBE;EACE;EACA,aArHc;EA0Hd;EAIA;EAGA;EACA;AzConBJ;;AyChnBE;EACE;EAKA;EAKA;AzC2mBJ;;A0C5vBE;EACE;A1C+vBJ;;A0CzvBE;EAyCA;EACA;EAxCE;EACA;A1C6vBJ;;A0CpvBE;EA6BA;EACA;EA5BE;A1CwvBJ;;A0C9uBE;AACA;AAEA;EAEE;A1C+uBJ;;A0C5uBE;EAEE;A1C8uBJ;;A2C7wBE;EACE;A3CgxBJ;A2C9wBI;ECfF;EACA;EACA;EACA;EACA;EDaI;EACA;EACA;EACA;EAYA;A3CywBN;A2CjwBI;EACE;A3CmwBN;;AwCxtBM;EG7BA;A3CyvBN;;A2CpyBE;EACE;A3CuyBJ;A2CryBI;ECfF;EACA;EACA;EACA;EACA;EDaI;EACA;EACA;EACA;EAYA;A3CgyBN;A2CxxBI;EACE;A3C0xBN;;AwC/uBM;EG7BA;A3CgxBN;;AetuBE;EAKE;EACA;AfquBJ;AevwBE;EACE;AfywBJ;AevwBE;EACE;AfywBJ;AevwBE;EACE;AfywBJ;AerwBI;EAEE;AfswBN;Aez0BE;EACE;Af20BJ;Aex0BE;EACE;Af00BJ;Aev0BE;EACE;Afy0BJ;Aet0BE;EACE;Afw0BJ;AervBI;EACE,YA1GY;EA2GZ;AfuvBN;;AenvBE;EACE;AfsvBJ;;AejvBE;EACE;AfovBJ;;AejvBE;EAEE;EACA;AfmvBJ;AehzBE;EACE;AfkzBJ;AehzBE;EACE;AfkzBJ;AehzBE;EACE;AfkzBJ;Ae9yBI;EAEE;Af+yBN;Ae5zBE;EACE;Af8zBJ;Ae5zBE;EACE;Af8zBJ;Ae5zBE;EACE;Af8zBJ;Ae1zBI;EAEE;Af2zBN;Ae71BE;EAXA,0CADmB;Af42BrB;Ae51BE;EAfA,0CADmB;Af+2BrB;Ae31BE;EAnBA,0CADmB;Afk3BrB;;A6C11BE;E3BgBE;AlB80BJ;;A6C91BE;E3BgBE;AlBk1BJ;A6Cl2BE;E3BgBE;AlBq1BJ;A6Cr2BE;E3BgBE;AlBw1BJ;;A6Cx2BE;E3BgBE;AlB41BJ;A6C52BE;E3BgBE;AlB+1BJ;A6C/2BE;E3BgBE;AlBk2BJ;;A8Cx3BM;E5BsBF;AlBs2BJ;A8Cx3BM;E5BkBF;AlBy2BJ;A8Cv3BM;E5BcF;AlB42BJ;A8Ct3BM;E5BUF;AlB+2BJ;A+Cx4BE;E7ByBE;EAAA;AlBm3BJ;A8C92BM;E5BLF;EAAA;AlBu3BJ;A8C92BM;E5BTF;EAAA;AlB23BJ;A8C92BM;E5BbF;EAAA;AlB+3BJ;A8C92BM;E5BjBF;EAAA;AlBm4BJ;A+C55BE;E7ByBE;EAAA;EAAA;EAAA;AlBy4BJ;A8Cv2BM;E5BlCF;EAAA;AlB64BJ;A8Cv2BM;E5BtCF;EAAA;AlBi5BJ;A8Cv2BM;E5B1CF;EAAA;AlBq5BJ;A8Cv2BM;E5B9CF;EAAA;AlBy5BJ;A+Cl7BE;E7ByBE;EAAA;EAAA;EAAA;EAAA;AlBg6BJ;A8Cj2BI;E5B/DA;AlBm6BJ;A8C/1BM;E5BpEF;AlBs6BJ;A8C91BM;E5BxEF;AlBy6BJ;A8C71BM;E5B5EF;AlB46BJ;A8C51BM;E5BhFF;AlB+6BJ;A+Cx8BE;E7ByBE;EAAA;EAAA;EAAA;AlBq7BJ;A8Cp1BI;ECxKF;EACA;A/C+/BF;A+Cv/BE;EACE;A/Cy/BJ;A+Cp/BI;EACE;A/Cs/BN;A+Cl/BE;EACE;A/Co/BJ;A+C/+BE;EA1BA;EACA;A/C4gCF;A+C/+BE;EA9BA;EACA;A/CghCF;A+C/+BE;EAlCA;EACA;A/CohCF;A8Cz2BI;EC5KF;EACA;A/CwhCF;A+ChhCE;EACE;A/CkhCJ;A+C7gCI;EACE;A/C+gCN;A+C3gCE;EACE;A/C6gCJ;A+CxgCE;EA1BA;EACA;A/CqiCF;A+CxgCE;EA9BA;EACA;A/CyiCF;A+CxgCE;EAlCA;EACA;A/C6iCF;AgDpiCI;EDVF;EACA;A/CijCF;A+CziCE;EACE;A/C2iCJ;A+CtiCI;EACE;A/CwiCN;A+CpiCE;EACE;A/CsiCJ;A+CjiCE;EA1BA;EACA;A/C8jCF;A+CjiCE;EA9BA;EACA;A/CkkCF;A+CjiCE;EAlCA;EACA;A/CskCF;AgD1jCM;E9B0DF;AlBmgCJ;AgDzjCM;E9BsDF;AlBsgCJ;AgDxjCM;E9BkDF;AlBygCJ;A+CliCE;E7ByBE;EAAA;AlB6gCJ;;A8Cn5BI;;;;E5B1HA;AlBohCJ;AgD7iCE;EC8FE,WAnBK;EAoBL,YApBK;EAqBL;AjDk9BJ;AiD/8BE;EAEI,gBA1BG;EA2BH,eA3BG;AjD2+BT;AiDn8BI;EAEI,WALe;EAMf,YANe;ECnCjB,eAJwB;EAKxB,kBALwB;EAuCtB,iBAJ0B;EAK1B,gBAL0B;AlDk9BlC;AiD57BI;EAEI,gBApBe;EAqBf,eArBe;AjDk9BvB;AiDx7BE;EC1HE;EACA;EACA,YDyDK;EErEL;EDkBE;EACA,WDkDG;ECjDH;AlDijCN;;AajnCE;EACE;AbonCJ;AalnCI;EAEE;AbmnCN;Aa/mCI;EACE;AbinCN;Aa9mCI;EACE;EACA;AbgnCN;Aa7mCI;EACE;Ab+mCN;;Aa3mCE;EACE;Ab8mCJ;;Aa3mCE;EACE;Ab8mCJ;;Aa3mCE;EACE;Ab8mCJ;;AclpCE;EACE;AdqpCJ;;AclpCE;EACE;AdqpCJ;;AoD1pCE;EAII;ApD0pCN;;AqDloCE;EACE,0BAXe;ArDgpCnB;AqDpoCI;EACE,cANa;ArD4oCnB;;AqD1qCI;;EACE,cAkBM;ArD4pCZ;AqD1qCI;;EAKE,mBASM;ArDgqCZ;AqD7qCM;;EACE,cAeO;ArDiqCf;;AqDvrCI;;EACE,cAmBK;ArDwqCX;AqDvrCI;;EAKE,mBAUK;ArD4qCX;AqD1rCM;;EACE,cAeO;ArD8qCf;;AqDpsCI;;EACE,cAmBK;ArDqrCX;AqDpsCI;;EAKE,mBAUK;ArDyrCX;AqDvsCM;;EACE,cAeO;ArD2rCf;;AqDjtCI;;EACE,cAoBG;ArDisCT;AqDjtCI;;EAKE,mBAWG;ArDqsCT;AqDptCM;;EACE,cAeO;ArDwsCf;;AqDlqCI;;EACE,cA/Ba;ArDqsCnB;AqDnqCI;;EACE,mBAnCa;ArDysCnB;;AsD5tCE;EAIE;EACA;AtD4tCJ;;AsDrtCI;EpCiDA;AlBwqCJ;;AsDztCI;EpCiDA;AlB4qCJ;;AsD7tCI;EpCiDA;AlBgrCJ;;AsDjuCI;EpCiDA;AlBorCJ;;AsDruCI;EpCiDA;AlBwrCJ;;AsDzuCI;EpCiDA;AlB4rCJ;;AsD7uCI;EpCiDA;AlBgsCJ;;AsDjvCI;EpCiDA;AlBosCJ;;AsDrvCI;EpCiDA;AlBwsCJ;;AsDzvCI;EpCiDA;AlB4sCJ;;AsD7vCI;EpCiDA;AlBgtCJ;;AsDjwCI;EpCiDA;AlBotCJ;;AsDrwCI;EpCiDA;AlBwtCJ;;AsDzwCI;EpCiDA;AlB4tCJ;;AsD7wCI;EpCiDA;AlBguCJ;;AsDjxCI;EpCiDA;AlBouCJ;;AsDrxCI;EpCiDA;AlBwuCJ;;AsDzxCI;EpCiDA;AlB4uCJ;;AsD7xCI;EpCiDA;AlBgvCJ;;AsDjyCI;EpCiDA;AlBovCJ;;AsDryCI;EpCiDA;AlBwvCJ;;AsDzyCI;EpCiDA;AlB4vCJ;;AsD7yCI;EpCiDA;AlBgwCJ;;AsDjzCI;EpCiDA;AlBowCJ;;AsDrzCI;EpCiDA;AlBwwCJ;;AsDlzCI;EACE;AtDqzCN;;AmB50CE;EAEE;EACA;AnB80CJ;A6CjyCE;E3BgBE;AlBoxCJ;A6CpyCE;E3BgBE;AlBuxCJ;;AmB50CE;EACE;AnB+0CJ;;AuDh1CE;EACE;AvDm1CJ;;AuDh1CE;EACE;AvDm1CJ;;AuDh1CE;EACE;AvDm1CJ;;AuD/0CI;EACE;AvDk1CN;AuD/0CI;EACE;AvDi1CN;AuD90CI;EACE;AvDg1CN;;AuD30CI;EACE;AvD80CN;AuD30CI;EACE;AvD60CN;AuD10CI;EACE;AvD40CN;;AwD73CI;EACE;AxDg4CN;AwD73CI;EACE;AxD+3CN;AwD53CI;EACE;AxD83CN;;AoB/3CE;EACE;ApBk4CJ;;AqBp4CE;EACE;ArBu4CJ;;AqBp4CE;;EAEE;ArBu4CJ;;AqBp4CE;EACE;ArBu4CJ;AyD75CE;EpCyBI;ArBu4CN;AyD55CE;EpCqBI;ArB04CN;AyD35CE;EpCiBI;ArB64CN;AyDx5CE;EpCWI;ArBg5CN;;AqB33CE;EACE;ArB83CJ;;AqB33CE;;EAEE;ArB83CJ;;AqB33CE;EACE;ArB83CJ;;AqB13CI;;EAEE;ArB63CN;;AsB95CE;EACE,yBAZA;AtB66CJ;;AsB95CE;EACE,yBAhBA;AtBi7CJ;;AsB95CE;EACE,cAnBoB;AtBo7CxB;AsB/5CI;EACE,cAhBqB;AtBi7C3B;AsB95CI;EACE,cAnBmB;AtBm7CzB;;AsB55CE;EACE,cA9BqB;AtB67CzB;;AsB55CE;EACE,qCA9BA;AtB67CJ;;AsB35CI;EACE,yBAhCsB;AtB87C5B;AsB55CM;EACE,yBArCmB;AtBm8C3B;AsB35CM;EACE,yBAxCiB;AtBq8CzB;;AsBv5CI;EACE,cA9CsB;AtBw8C5B;AsBv5CI;EACE,cApDqB;AtB68C3B;AsBt5CI;EACE,cAvDmB;AtB+8CzB;;AsBh5CI;EACE,cAhEmB;AtBm9CzB;AsBj5CM;;EAEE,cApEiB;AtBu9CzB;AsB/4CI;;EAEE,yBA1EmB;AtB29CzB;;AsB74CE;EACE,cA/EqB;AtB+9CzB;;AuB1+CI;EACE,0BANU;AvBm/ChB;AuB1+CI;EACE,0BAVU;AvBs/ChB;AuBz+CI;EACE,qCAZF;AvBu/CJ;AuBx+CI;EmC3BF;EACA;EACA;A1DsgDF;;A2D9/CI;EACE,qCAJF;A3DqgDJ;A2D9/CI;EDdF;EACA;EACA;A1D+gDF;;AwB//CI;EACE,qCATF;AxB2gDJ;AwB//CI;EACE,qCAXF;AxB4gDJ;AwB9/CI;EACE,qCAbF;AxB6gDJ;AwB5/CM;EACE,0BAjBiB;AxB+gDzB;AwB3/CM;EACE;AxB6/CR;;AyBzgDI;EACE,0BAXF;AzBuhDJ;AyBzgDI;EACE,0BAbF;AzBwhDJ;AyBvgDM;EACE,cAjBkB;AzB0hD1B;AyBtgDM;EACE,cApBiB;AzB4hDzB;AyBrgDM;EACE,cAvBe;AzB8hDvB;AyBjgDM;EACE,cA9Be;AzBiiDvB;AyB9/CM;EACE,0BA3CiB;AzB2iDzB;AyB7/CM;EACE,0BAtCJ;AzBqiDJ;;A0B/iDE;EACE;A1BkjDJ;;A0B/iDE;EACE;A1BkjDJ;;A0B/iDE;EACE;A1BkjDJ;;A0B/iDE;EACE;A1BkjDJ;;A0B/iDE;EACE;A1BkjDJ;A6CvhDE;E3BgBE;AlB0gDJ;A0BljDI;EACE;A1BojDN;;A0B9iDM;EACE;A1BijDR;A0B9iDM;EACE;A1BgjDR;A0B7iDM;EACE;A1B+iDR;A0B3iDI;EACE;A1B6iDN;A0B1iDI;EACE;A1B4iDN;;A2B/kDE;EACE;A3BklDJ;;A2B/kDE;EACE,aAdoB;A3BgmDxB;;A2B/kDE;EAGE;A3BglDJ;;A2B7kDE;EACE,yBAxBoB;A3BwmDxB;;A2B5kDI;EACE;A3B+kDN;A2B5kDI;EACE;A3B8kDN;A2B3kDI;EACE;A3B6kDN;;A2BtkDM;EACE,yBAtCW;A3B+mDnB;A2BpkDM;EACE,qBA5CW;A3BknDnB;A2BlkDI;EACE;A3BokDN;;A2B9jDE;EACE;A3BikDJ;;A2B5jDI;;EACE;A3BgkDN;A2B7jDI;;EACE;A3BgkDN;A2B7jDI;;EACE;A3BgkDN;;A4DrpDE;EAEE;EACA;A5DupDJ;A6CvmDE;E3BgBE;AlB0lDJ;A4DnpDI;EACE;A5DqpDN;A4DnpDM;EACE;A5DqpDR;;A4BhqDE;EVgEE;EU9DA;EACA;A5BmqDJ;;A6B5nDE;EA9CA,yBA2CwB;EA1CxB,0BA2CwB;A7BmoD1B;A6B5qDE;EACE,0BAwCsB;EAvCtB;A7B8qDJ;A6BjoDM;EXkBF;AlBknDJ;A6BhoDM;EACE;A7BkoDR;A6B9nDI;EACE;A7BgoDN;A6B7nDI;EACE;A7B+nDN;;A6B1nDI;EArEF,yBAyBE;EAxBF,YAuBwB;A7B4qD1B;A6BjsDE;EACE,YAoBsB;EAnBtB;A7BmsDJ;A6B7qDE;EAVA,0CADmB;A7B2rDrB;A6BloDI;EAzEF,yBAyBE;EAxBF,YAuBwB;A7BurD1B;A6B5sDE;EACE,YAoBsB;EAnBtB;A7B8sDJ;A6BxrDE;EAVA,0CADmB;A7BssDrB;A6BzoDI;EA7EF,yBAyBE;EAxBF,YAuBwB;A7BksD1B;A6BvtDE;EACE,YAoBsB;EAnBtB;A7BytDJ;A6BnsDE;EAVA,0CADmB;A7BitDrB;;A8BluDI;EACE;A9BquDN;A8BluDI;EAGE;A9BkuDN;A8B/tDI;EAGE;A9B+tDN;A8B5uDI;EACE;A9B8uDN;A8B3uDI;EAGE;A9B2uDN;A8BxuDI;EAGE;A9BwuDN;A8BrvDI;EACE;A9BuvDN;A8BpvDI;EAGE;A9BovDN;A8BjvDI;EAGE;A9BivDN;A8B1sDI;EAGE,uBAhBqB;A9B0tD3B;;A8BtsDE;EZUE;EYRA;A9BysDJ;;A8BtsDE;EACE,qCA3BoB;A9BouDxB;;AgCvvDE;EACE;AhC0vDJ;;AgCjxDE;EACE;AhCoxDJ;AgCjxDE;;EAIE;AhCixDJ;AgCzxDE;EACE;AhC2xDJ;AgCxxDE;;EAIE;AhCwxDJ;AgChyDE;EACE;AhCkyDJ;AgC/xDE;;EAIE;AhC+xDJ;AgC5vDM;;EAEE;AhC8vDR;AgC3vDM;;EAEE;AhC6vDR;AgC1vDM;EACE;AhC4vDR;AgCtvDI;EACE;AhCwvDN;;AiCvwDE;EACE,qCAbqB;AjCuxDzB;;AiCxzDE;;;EAGE;AjC2zDJ;AiCxzDE;EACE;AjC0zDJ;AiCvzDE;EAGE,wCADQ;AjCwzDZ;AiCp0DE;;;EAGE;AjCs0DJ;AiCn0DE;EACE;AjCq0DJ;AiCl0DE;EAGE,wCADQ;AjCm0DZ;AiC/0DE;;;EAGE;AjCi1DJ;AiC90DE;EACE;AjCg1DJ;AiC70DE;EAGE,wCADQ;AjC80DZ;;AiCzxDI;;EACE,qCAhC2B;AjC6zDjC;;AiCxxDI;;;EAGE,qCAvCwB;AjCk0D9B;AiCvxDM;EACE,qCA5CsB;AjCq0D9B;;AiCnxDI;EAGE,qCADQ;AjCqxDd;AiC1wDM;;EAEE,qCA/DJ;AjC20DJ;AiCxwDQ;;EAEE,qCAnEN;AjC60DJ;AiCpwDM;EACE,iCAhFiB;EAiFjB;AjCswDR;AiCjwDQ;EACE,iCAtFuB;AjCy1DjC;AiChwDQ;EACE,iCAzFoB;AjC21D9B;;AiC5vDE;EACE,gCAzFA;AjCw1DJ;;AiCtvDE;EACE;EAIA;AjCsvDJ;;AiC5uDE;EACE;AjC+uDJ;;AkCp4DE;EAEE;AlCs4DJ;A6Cx1DE;E3BgBE;AlB20DJ;;AkCt4DE;EACE;EACA;AlCy4DJ;AkCt4DM;;;EAGE;AlCw4DR;;AkCn4DE;;EAEE;AlCs4DJ;;AkC/3DI;;;;EACE;AlCq4DN;;AmCh6DI;EACE;AnCm6DN;AmCh6DI;EACE;AnCk6DN;AmC/5DI;EACE;AnCi6DN;AmC95DI;EACE;EACA;AnCg6DN;;AmCz5DI;;;;;EACE;AnCg6DN;;AmC35DI;EACE;AnC85DN;;AoC37DE;EACE;ApC87DJ;;AoC37DE;;EAEE;ApC87DJ;;AoC37DE;;EAEE;EACA;ApC87DJ;;AoC37DE;;EAEE;ApC87DJ;;AoC17DI;;;;EAIE;ApC67DN;;AoCl6DI;EACE,gBALK;ApC06DX;;A+Bx9DE;;EAEE,4CAJc;A/B+9DlB;;A+Bv9DI;;EAEE,yCAVY;EAWZ;A/B09DN;;A+Bt9DE;EACE;A/By9DJ;A+Bv9DI;EACE;A/By9DN;;A+Br9DE;EACE;A/Bw9DJ;;A+Br9DE;EACE;A/Bw9DJ;;A+Bp9DE;;EAEE;EACA;A/Bu9DJ;;A+B36DI;;;;;EAEE;A/Bi7DN;A+B/6DM;;;;;EACE;A/Bq7DR;A+Bl8DE;EACE;A/Bo8DJ;A+Br8DE;EACE;A/Bu8DJ;A+Bh8DI;;;;;EAEE;A/Bq8DN;A+Bn8DM;;;;;EACE;A/By8DR;A+Bt9DE;EACE;A/Bw9DJ;A+Bz9DE;EACE;A/B29DJ;A+Bp9DI;;;;;EAEE;A/By9DN;A+Bv9DM;;;;;EACE;A/B69DR;A+B1+DE;EACE;A/B4+DJ;A+B7+DE;EACE;A/B++DJ;A+Bx+DI;;;;;EAEE;A/B6+DN;A+B3+DM;;;;;EACE;A/Bi/DR;A+Bt+DE;EACE;A/Bw+DJ;A+Bp+DE;EACE;A/Bs+DJ;A+Bp+DI;EACE;A/Bs+DN;A+Bj+DE;;;;;;;EAIE;A/Bs+DJ;A+Bn+DE;;;EAGE;EACA;A/Bq+DJ;A+Bh+DE;;;;;EAIE;EACA;A/Bm+DJ;A+BthEI;;;;;EAEE;A/B2hEN;A+BzhEM;;;;;EACE;A/B+hER;A+BphEE;EACE;A/BshEJ;A+BlhEE;EACE;A/BohEJ;A+BlhEI;EACE;A/BohEN;A+B/gEE;;;;;;;EAIE;A/BohEJ;A+BjhEE;;;EAGE;EACA;A/BmhEJ;A+B9gEE;;;;;EAIE;EACA;A/BihEJ;A+BpkEI;;;;;EAEE;A/BykEN;A+BvkEM;;;;;EACE;A/B6kER;A+BlkEE;EACE;A/BokEJ;A+BhkEE;EACE;A/BkkEJ;A+BhkEI;EACE;A/BkkEN;A+B7jEE;;;;;;;EAIE;A/BkkEJ;A+B/jEE;;;EAGE;EACA;A/BikEJ;A+B5jEE;;;;;EAIE;EACA;A/B+jEJ;;AqCjsEE;EAGE;EACA;EnB4DA;AlBuoEJ;;AqC9rEE;EACE;ArCisEJ;;AsC7sEE;EACE;AtCgtEJ;;AsC7sEE;;;;EAIE;AtCgtEJ;;AsC7sEE;;EAEE;AtCgtEJ;;AsC7sEE;EACE;AtCgtEJ;;AsC7sEE;EACE;AtCgtEJ;;AG5oEE;EACE;AH+oEJ;;AGxoEE;EACE;AH2oEJ;;AGvoEI;EACE;AH0oEN;;AGtoEE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHyoEJ;;AGtoEE;;EAEE;AHyoEJ;;AGpoEE;EAEE;AHsoEJ;;AG3vEE;EACE,WATS;EAUT,YAVS;EAWT,iBAXS;AHywEb;AG1vEI;EACE;AH4vEN;AGvvEI;EACE;AHyvEN;AGpvEI;EACE;AHsvEN;AGjvEI;EACE;EACA;AHmvEN;AG9uEI;EACE;AHgvEN;AG3uEI;EACE;EACA;AH6uEN;AGvuEM;EACE;AHyuER;AGpuEM;EACE;EACA;AHsuER;AGjuEM;EACE;AHmuER;AG9tEM;EACE;EACA;AHguER;;AGnyEE;EACE,WAVW;EAWX,YAXW;EAYX,iBAZW;AHkzEf;AGlyEI;EACE;AHoyEN;AG/xEI;EACE;AHiyEN;AG5xEI;EACE;AH8xEN;AGzxEI;EACE;EACA;AH2xEN;AGtxEI;EACE;AHwxEN;AGnxEI;EACE;EACA;AHqxEN;AG/wEM;EACE;AHixER;AG5wEM;EACE;EACA;AH8wER;AGzwEM;EACE;AH2wER;AGtwEM;EACE;EACA;AHwwER;;AG30EE;EACE,WARS;EAST,YATS;EAUT,iBAVS;AHw1Eb;AG10EI;EACE;AH40EN;AGv0EI;EACE;AHy0EN;AGp0EI;EACE;AHs0EN;AGj0EI;EACE;EACA;AHm0EN;AG9zEI;EACE;AHg0EN;AG3zEI;EACE;EACA;AH6zEN;AGvzEM;EACE;AHyzER;AGpzEM;EACE;EACA;AHszER;AGjzEM;EACE;AHmzER;AG9yEM;EACE;EACA;AHgzER;;AGtuEE;EACE;EACA;AHyuEJ;AwC91EI;ErCwHE;EACA;AHyuEN;;AGpuEI;EACE;EACA;AHuuEN;;AGluEI;EACE;EACA;AHquEN;;AGhuEI;EAWI;EAMF;AHotEN;;AIx5EE;EcmEE;EdjEA;EACA;AJ25EJ;;A6C32EE;;E3BgBE;AlBg2EJ;;AK/4EI;;EACE;ALm5EN;;AK/4EE;EACE;ALk5EJ;AKh5EI;EACE;ALk5EN;;AK94EE;EACE;EACA;ALi5EJ;AK/4EI;EACE;ALi5EN;;AK74EE;EACE;ALg5EJ;;AK74EE;EACE;EACA;ALg5EJ;;AK54EI;EACE;EACA;EACA;AL+4EN;;AK34EE;EACE;EACA;AL84EJ;AK54EI;EACE;AL84EN;;AK14EE;EACE;EACA;AL64EJ;AK34EI;EACE;AL64EN;AK14EI;EACE;AL44EN;;AKx4EE;;EAEE;AL24EJ;;AKz3EI;EACE,iBALc;ALi4EpB;;AM/5EE;EACE;ANk6EJ;;AM75EE;;;EAGE;ANg6EJ;;AM75EE;EACE;ANg6EJ;;AM75EE;;EAEE;ANg6EJ;;AM75EE;;EAEE;EACA;ANg6EJ;;AM58EE;EAiDI,0BA/Ba;AN87EnB;;AM35EE;EACE,0BApCe;ANk8EnB;;AM35EE;EAOI;ANw5EN;;AMx9EE;EA2EI;ANi5EN;;AM59EE;EAoFM;AN44ER;;AM1zEE;EACE,kCA9MA;AN2gFJ;;AM1zEE;;EAEE,kCAViB;ANu0ErB;;AM1zEE;;EAEE;AN6zEJ;;AM1zEE;;EAEE;AN6zEJ;;AM1zEE;;EAEE,mBAxBc;ANq1ElB;;AM1zEE;;EAEE,mBA5BuB;ANy1E3B;;AMliFE;EACE;EACA;ANqiFJ;;AMliFE;EAII;ANkiFN;;AMzhFE;EACE;AN4hFJ;;AM1gFE;;EASI;ANsgFN;;AMxhFE;EASA;IASI;EN2gFJ;AACF;AMn7EE;EY9EE;EZgFA;EACA;ANq7EJ;AMp3EE;EACE,kCA9MA;ANokFJ;AMn3EE;;EAEE,kCAViB;AN+3ErB;AMl3EE;;EAEE;ANo3EJ;AMj3EE;;EAEE;ANm3EJ;AMh3EE;;EAEE,mBAxBc;AN04ElB;AM/2EE;;EAEE,mBA5BuB;AN64E3B;AMtlFE;EACE;EACA;ANwlFJ;AMrlFE;EAII;ANolFN;AM3kFE;EACE;AN6kFJ;AM3jFE;;EASI;ANsjFN;AMxkFE;EASA;IASI;EN0jFJ;AACF;AM95EE;EACE,kCA9MA;AN8mFJ;AM75EE;;EAEE,kCAViB;ANy6ErB;AM55EE;;EAEE;AN85EJ;AM35EE;;EAEE;AN65EJ;AM15EE;;EAEE,mBAxBc;ANo7ElB;AMz5EE;;EAEE,mBA5BuB;ANu7E3B;AMhoFE;EACE;EACA;ANkoFJ;AM/nFE;EAII;AN8nFN;AMrnFE;EACE;ANunFJ;AMrmFE;;EASI;ANgmFN;AMlnFE;EASA;IASI;ENomFJ;AACF;;AM9/EE;EY5FE;AlB8lFJ;;AM9/EE;EACE;ANigFJ;AM//EI;EACE;ANigFN;AM9/EI;EACE;ANggFN;;AM5/EE;EACE;AN+/EJ;;AgDroFE;EC8FE,WAnBK;EAoBL,YApBK;EAqBL;AjD2iFJ;AiDxiFE;EAEI,gBA1BG;EA2BH,eA3BG;AjDokFT;AiD5hFI;EAEI,WALe;EAMf,YANe;ECnCjB,eAJwB;EAKxB,kBALwB;EAuCtB,iBAJ0B;EAK1B,gBAL0B;AlD2iFlC;AiDrhFI;EAEI,gBApBe;EAqBf,eArBe;AjD2iFvB;AiDjhFE;EC1HE;EACA;EACA,YDyDK;EErEL;EDkBE;EACA,WDkDG;ECjDH;AlD0oFN;A+C5pFI;EACE;A/C8pFN;;A6DrtFE;EACE;A7DwtFJ;;A6DrtFE;EACE;A7DwtFJ;;AOttFE;EAEE;EACA;APwtFJ;A6C3qFE;E3BgBE;AlB8pFJ;;AOxtFE;EACE;AP2tFJ;;A8D3uFM;EvDoBF;AP2tFJ;;AOttFE;EACE;IAEE;EPwtFJ;AACF;AOrtFE;EACE;APutFJ;;AOptFE;;EAEE;APutFJ;;AOptFE;EACE;APutFJ;AOrtFI;;EAEE;APutFN;;AO1rFI;EACE,YALe;APksFrB;AO3rFM;EACE,YAVY;APusFpB;;A+DrwFI;EACE;A/DwwFN;A+DrwFI;EACE;A/DuwFN;A+DpwFI;EACE;A/DswFN;;AgExwFE;EACE,yBALmC;EAMnC;AhE2wFJ;;AgExwFE;EACE,uBAXwB;EAYxB;AhE2wFJ;AgEzwFI;EACE,uBAb2B;AhEwxFjC;AgExwFI;E9C8CA;AlB6tFJ;;AgEpwFE;EACE,2CAvBmB;AhE8xFvB;AgErwFI;EACE,0CA1BiB;EA2BjB;AhEuwFN;;AgEnwFE;EACE,0CAhCmB;EAiCnB;AhEswFJ;AgEpwFI;EACE;EACA,2CArCiB;AhE2yFvB;;AgElwFE;EAQI;AhE8vFN;;AU/yFI;EAIE;AV+yFN;AU5yFI;EACE;AV8yFN;AUxyFI;EACE;IACE;EV0yFN;AACF;AUvyFI;;EAIE;AVuyFN;AUpyFI;EAGE;EACA;AVoyFN;AUjyFI;;;EAGE;EACA;AVmyFN;AU/xFM;EACE;AViyFR;AU9xFM;;;EAGE;EACA;AVgyFR;AU3xFM;EACE;AV6xFR;AU1xFM;;;EAGE;EACA;AV4xFR;AUxxFI;EACE;EACA;AV0xFN;AUvxFI;EACE;AVyxFN;AUtxFI;EACE;AVwxFN;;AUpxFE;EACE;AVuxFJ;;AUpxFE;EACE;AVuxFJ;;AUpxFE;;;EAGE;AVuxFJ;;AU9uFI;EACE,YANK;AVuvFX;;AU9uFI;;EAEE;AVivFN;;AU5uFI;EACE;EACA;AV+uFN;;AU1uFM;EACE;AV6uFR;;AUxuFI;EACE;AV2uFN;;AiEh5FE;EAYI;AjEw4FN;;AW52FE;EACE;EACA;AX+2FJ;AW72FI;EApCF;EACA;AXo5FF;AW72FI;EAxCF;EACA;AXw5FF;AW72FI;EA5CF;EACA;AX45FF;AWx5FE;;;EAGE;AX05FJ;AWv5FE;;;;;EAKE;AXy5FJ;AWt5FE;EACE;AXw5FJ;;AWr7FE;EACE,gBA6Ee;AX22FnB;;AWt7FE;EACE,YA0Ee;AX+2FnB;;AWn2FI;EA1FF;IACE,gBA+Ec;EXk3FhB;EW/7FA;IACE,YA4Ec;EXq3FhB;AACF;AYn8FE;EACE;AZq8FJ;;AYl8FE;;EAEE;AZq8FJ;;AY76FI;EACE,gBALK;AZq7FX;;AoDh9FE;EAII;ApDg9FN;AkEj9FI;EhDgEA;AlBo5FJ;AkE/8FM;EAOE;AlE28FR;AmE7rEE;EjD1tBE;AlB05FJ;AmEhsEE;EjD1tBE;AlB65FJ;AmEnsEE;EjD1tBE;AlBg6FJ;AoEp+FI;ElDoEA;AlBm6FJ;AqD18FE;EACE,+BAXe;ArDu9FnB;AqD38FI;EACE,cANa;ArDm9FnB;AqDj/FI;;EACE,cAkBM;ArDk+FZ;AqDh/FI;;EAKE,mBASM;ArDs+FZ;AqDn/FM;;EACE,cAeO;ArDu+Ff;AqD7/FI;;EACE,cAmBK;ArD6+FX;AqD5/FI;;EAKE,mBAUK;ArDi/FX;AqD//FM;;EACE,cAeO;ArDm/Ff;AqDzgGI;;EACE,cAmBK;ArDy/FX;AqDxgGI;;EAKE,mBAUK;ArD6/FX;AqD3gGM;;EACE,cAeO;ArD+/Ff;AqDrhGI;;EACE,cAoBG;ArDogGT;AqDphGI;;EAKE,mBAWG;ArDwgGT;AqDvhGM;;EACE,cAeO;ArD2gGf;AqDr+FI;;EACE,cA/Ba;ArDugGnB;AqDr+FI;;EACE,mBAnCa;ArD2gGnB;AqE1hGE;EAIE;EACA;ArEyhGJ;AqE/gGI;EnD0CA;AlBw+FJ;AqElhGI;EnD0CA;AlB2+FJ;AqErhGI;EnD0CA;AlB8+FJ;AqExhGI;EnD0CA;AlBi/FJ;AqE3hGI;EnD0CA;AlBo/FJ;AqE9hGI;EnD0CA;AlBu/FJ;AqEjiGI;EnD0CA;AlB0/FJ;AqEpiGI;EnD0CA;AlB6/FJ;AqEviGI;EnD0CA;AlBggGJ;AqE1iGI;EnD0CA;AlBmgGJ;AqE7iGI;EnD0CA;AlBsgGJ;AqEhjGI;EnD0CA;AlBygGJ;AqEnjGI;EnD0CA;AlB4gGJ;AqEtjGI;EnD0CA;AlB+gGJ;AqEzjGI;EnD0CA;AlBkhGJ;AqE5jGI;EnD0CA;AlBqhGJ;AqE/jGI;EnD0CA;AlBwhGJ;AqElkGI;EnD0CA;AlB2hGJ;AqErkGI;EnD0CA;AlB8hGJ;AqExkGI;EnD0CA;AlBiiGJ;AqE3kGI;EnD0CA;AlBoiGJ;AqE9kGI;EnD0CA;AlBuiGJ;AqEjlGI;EnD0CA;AlB0iGJ;AqEplGI;EnD0CA;AlB6iGJ;AqEvlGI;EnD0CA;AlBgjGJ;AqEnlGI;EACE;ArEqlGN;;AsE7mGI;EpD0DA;EAAA;AlBwjGJ;AsEvmGI;EpD+CA;EAAA;AlB4jGJ;AsE9lGI;EACE;AtEgmGN;AuE5mGI;ErD6CA;AlBkkGJ;AwEvjGE;EtDXE;AlBqkGJ;AwE7iGE;EtDxBE;AlBwkGJ;AuElnGM;ErD0CF;AlB2kGJ;AwEhkGE;EtDXE;AlB8kGJ;AwEtjGE;EtDxBE;AlBilGJ;AuEvnGM;ErDsCF;AlBolGJ;AwEzkGE;EtDXE;AlBulGJ;AwE/jGE;EtDxBE;AlB0lGJ;AyE5pGI;EvDkEA;EAAA;AlB8lGJ;A0EhpBE;ExD98EE;AlBimGJ;A0ExtBE;ExDz4EE;AlBomGJ;A0EpnBE;EAGE;IxDn/EA;ElBwmGF;AACF;A0EjnBE;EAGE;IxD3/EA;ElB6mGF;AACF;A0EzqEE;ExDr8BE;AlBinGJ;A2E5lGE;EzDrBE;AlBonGJ;A4E/lGE;;E1DrBE;AlBwnGJ;A6E1hGE;E3D9FE;AlB2nGJ;A6EnhGE;E3DxGE;AlB8nGJ;A0EvqBI;ExDv9EA;AlBioGJ;A0EhqBI;ExDj+EA;AlBooGJ;A8ExjGI;;E5D5EA;AlBwoGJ;A8EnrFE;E5DrdE;AlB2oGJ;A8EtrFE;E5DrdE;AlB8oGJ;A0EtoBE;ExDxgFE;AlBipGJ;A+EjnGI;E7DhCA;AlBopGJ;A+EpnGI;E7DhCA;AlBupGJ;A+EjoGI;E7DtBA;AlB0pGJ;AgFvmGE;;;E9DnDE;AlB+pGJ;AgF5mGE;;;E9DnDE;AlBoqGJ;AgFjnGE;;;E9DnDE;AlByqGJ;AiFvqGM;EACE;EAEA;AjFwqGR;;AiF3qGM;EACE;EAEA;AjF6qGR;;A8EtmGI;;E5D5EA;AlBurGJ;AiFrrGM;EACE;EAEA;AjFsrGR;A0E7uBE;ExD98EE;AlB8rGJ;A+E9pGI;E7DhCA;AlBisGJ;A+E3qGI;E7DtBA;AlBosGJ;A0EtvBE;ExD98EE;AlBusGJ;A2ExqGE;EzD/BE;AlB0sGJ;A0ErwEE;ExDr8BE;AlB6sGJ;A6ErmGE;E3DxGE;AlBgtGJ;A+EhrGI;E7DhCA;AlBmtGJ;AgFhqGE;;;E9DnDE;AlBwtGJ;AgFrqGE;;;E9DnDE;AlB6tGJ;AgF1qGE;;;E9DnDE;AlBkuGJ;A0Ez1BE;ExDz4EE;AlBquGJ;A0ErvBE;EAGE;IxDn/EA;ElByuGF;AACF;A0ElvBE;EAGE;IxD3/EA;ElB8uGF;AACF;A0EjyBE;ExD98EE;AlBkvGJ;A2E7tGE;EzDrBE;AlBqvGJ;A4EhuGE;;E1DrBE;AlByvGJ;A6E3pGE;E3D9FE;AlB4vGJ;A6EppGE;E3DxGE;AlB+vGJ;A0ExyBI;ExDv9EA;AlBkwGJ;A0EjyBI;ExDj+EA;AlBqwGJ;A+EruGI;E7DhCA;AlBwwGJ;AgFrtGE;;;E9DnDE;AlB6wGJ;A0E7xBE;EAGE;IxDn/EA;ElBixGF;AACF;A0E1xBE;EAGE;IxD3/EA;ElBsxGF;E0Ex0BA;IxD98EE;ElByxGF;E2EpwGA;IzDrBE;ElB4xGF;E4EvwGA;;I1DrBE;ElBgyGF;E6ElsGA;I3D9FE;ElBmyGF;E6E3rGA;I3DxGE;ElBsyGF;E0E/0BE;IxDv9EA;ElByyGF;E0Ex0BE;IxDj+EA;ElB4yGF;E+E5wGE;I7DhCA;ElB+yGF;EgF5vGA;;;I9DnDE;ElBozGF;AACF;A0E9lGI;ExDvNA;AlBwzGJ;AiFtzGM;EACE;EAEA;AjFuzGR;;AiF1zGM;EACE;EAEA;AjF4zGR;AkF90GE;EhEaE;AlBo0GJ;AmF13GE;EACE,2CCHwB;ApF+3G5B;AmFz3GE;EACE,aAPc;AnFk4GlB;AmFx3GE;EACE,aAZc;AnFs4GlB;AqFh0GQ;EACE,0BChEU;AtFk4GpB;AqF/zGQ;EACE,0BClEW;AtFm4GrB;AqF3zGM;EACE,gCAtBkB;ArFm1G1B;AqFxzGU;EACE;ArF0zGZ;AqFrzGU;EACE;ArFuzGZ;AqFlzGU;EACE;ArFozGZ;AqF9yGQ;EACE,gCA9CyB;ArF81GnC;A0E75EE;ExDr8BE;AlBq2GJ;A+E/0GI;E7DtBA;AlBw2GJ;A0E15BE;ExD98EE;AlB22GJ;A+E30GI;E7DhCA;AlB82GJ;A+Ex1GI;E7DtBA;AlBi3GJ;A0En6BE;ExD98EE;AlBo3GJ;A2Er1GE;EzD/BE;AlBu3GJ;A0El7EE;ExDr8BE;AlB03GJ;A6ElxGE;E3DxGE;AlB63GJ;A+E71GI;E7DhCA;AlBg4GJ;AgF70GE;;;E9DnDE;AlBq4GJ;AgFl1GE;;;E9DnDE;AlB04GJ;AgFv1GE;;;E9DnDE;AlB+4GJ;AgF51GE;;;E9DnDE;AlBo5GJ;A0E/8EE;ExDr8BE;AlBu5GJ;A+Ej4GI;E7DtBA;AlB05GJ;A0E58BE;ExD98EE;AlB65GJ;A+E73GI;E7DhCA;AlBg6GJ;A+E14GI;E7DtBA;AlBm6GJ;A0Er9BE;ExD98EE;AlBs6GJ;A2Ev4GE;EzD/BE;AlBy6GJ;A0Ep+EE;ExDr8BE;AlB46GJ;A6Ep0GE;E3DxGE;AlB+6GJ;A+E/4GI;E7DhCA;AlBk7GJ;AgF/3GE;;;E9DnDE;AlBu7GJ;AgFp4GE;;;E9DnDE;AlB47GJ;AgFz4GE;;;E9DnDE;AlBi8GJ;AgF94GE;;;E9DnDE;AlBs8GJ;AuF78GQ;EACE;AvF+8GV;AuFz8GU;EACE;EACA;AvF28GZ;AwFj/GE;EtEoCE;EAAA;EAAA;AlBk9GJ;AmExvFE;EjD1tBE;AlBq9GJ;AmEjvFE;EjDpuBE;AlBw9GJ;AmEpuFE;EjDpvBE;AlB29GJ;AmExsFE;;EjDnxBE;AlB+9GJ;AmEvtFE;;EjDxwBE;AlBm+GJ;AmEruFE;EjD9vBE;AlBs+GJ;AmErqFI;;;EjDj0BA;AlB2+GJ;AmEjxFE;EjD1tBE;AlB8+GJ;AmE1wFE;EjDpuBE;AlBi/GJ;AmE7vFE;EjDpvBE;AlBo/GJ;AmE5mEI;EjDx4CA;AlBu/GJ;AmEtmEM;EjDj5CF;AlB0/GJ;AmEloEI;EjDx3CA;AlB6/GJ;AmEnyFE;;EjD1tBE;AlBigHJ;AmEznEI;;EjDx4CA;AlBqgHJ;AmEvrFE;EjD90BE;AlBwgHJ;AmE5mEE;EjD55CE;AlB2gHJ;AmEljFE;EjDz9BE;AlB8gHJ;AyFrkHI;EACE;AzFukHN;AyFpkHI;EACE;AzFskHN;AyFnkHI;EACE,gCAbe;AzFklHrB;AyFlkHI;EACE;AzFokHN;AyF/jHQ;EACE;AzFikHV;AyF9jHQ;EACE;AzFgkHV;AyF7jHQ;EACE;AzF+jHV;AyF3jHM;EACE;AzF6jHR;AyF1jHM;EACE,gCAxCa;AzFomHrB;AwF7kHE;EtEoCE;EAAA;EAAA;AlB8iHJ;AmEp1FE;EjD1tBE;AlBijHJ;AmE70FE;EjDpuBE;AlBojHJ;AmEh0FE;EjDpvBE;AlBujHJ;AmEpyFE;;EjDnxBE;AlB2jHJ;AmEnzFE;;EjDxwBE;AlB+jHJ;AmEj0FE;EjD9vBE;AlBkkHJ;AmEjwFI;;;EjDj0BA;AlBukHJ;AmE72FE;EjD1tBE;AlB0kHJ;AmEt2FE;EjDpuBE;AlB6kHJ;AmEz1FE;EjDpvBE;AlBglHJ;AmExsEI;EjDx4CA;AlBmlHJ;AmElsEM;EjDj5CF;AlBslHJ;AmE9tEI;EjDx3CA;AlBylHJ;AmE/3FE;;EjD1tBE;AlB6lHJ;AmErtEI;;EjDx4CA;AlBimHJ;AmEnxFE;EjD90BE;AlBomHJ;AmExsEE;EjD55CE;AlBumHJ;AmE9oFE;EjDz9BE;AlB0mHJ;A0F1qHI;ExEgEA;EAAA;EAAA;EAAA;AlBgnHJ;A2F9oHI;EzE8BA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlB2nHJ;A2F3qHE;EzEgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBsoHJ;A2FtrHE;EzEgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBipHJ;A2FjsHE;EzEgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlB4pHJ;A2FhqHE;EACE;A3FkqHJ;A4F3pHI;E1EJA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBqrHJ;A6FhuHE;E3E2CE;AlBwrHJ;A4F/qHM;EACE;A5FirHR;A4F9qHM;E1EbF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBwsHJ;A4FvrHM;E1EjBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBqtHJ;A4FhsHM;E1ErBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBkuHJ;A6F7wHE;E3E2CE;AlBquHJ;A8FjxHE;E5E4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E4E5BA;EAOA;A9FwwHJ;A8F5wHI;EACE;A9F8wHN;A8FlyHE;E5E4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E4E5BA;EAOA;A9FyxHJ;A8F7xHI;EACE;A9F+xHN;A8FnzHE;E5E4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E4E5BA;EAOA;A9F0yHJ;A8F9yHI;EACE;A9FgzHN;A+Fv1HI;E7E+DA;EAAA;EAAA;EAAA;EAAA;EAAA;E6E/CE;A/Fg1HN;A+F90HM;E7E6CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6EsBF;EACA;EACA;A/FqxHF;A+Ft1HM;E7EyCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6EsBF;EACA;EACA;A/FiyHF;A+F91HM;E7EqCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6EsBF;EACA;EACA;A/F6yHF;AwFz2HE;EtEoCE;EAAA;EAAA;AlB00HJ;AmEhnGE;EjD1tBE;AlB60HJ;AmEzmGE;EjDpuBE;AlBg1HJ;AmE5lGE;EjDpvBE;AlBm1HJ;AmEhkGE;;EjDnxBE;AlBu1HJ;AmE/kGE;;EjDxwBE;AlB21HJ;AmE7lGE;EjD9vBE;AlB81HJ;AmE7hGI;;;EjDj0BA;AlBm2HJ;AmEzoGE;EjD1tBE;AlBs2HJ;AmEloGE;EjDpuBE;AlBy2HJ;AmErnGE;EjDpvBE;AlB42HJ;AmEp+EI;EjDx4CA;AlB+2HJ;AmE99EM;EjDj5CF;AlBk3HJ;AmE1/EI;EjDx3CA;AlBq3HJ;AmE3pGE;;EjD1tBE;AlBy3HJ;AmEj/EI;;EjDx4CA;AlB63HJ;AmE/iGE;EjD90BE;AlBg4HJ;AmEp+EE;EjD55CE;AlBm4HJ;AmE16FE;EjDz9BE;AlBs4HJ;AgGh8HM;;;E9E0DF;AlB24HJ;AgG57HI;;E9EiDA;AlB+4HJ;AgGt7HM;;;;EAEE;AhG07HR;AiG/8HE;E/E0DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBw6HJ;AkG9+HE;EhFsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBq7HJ;A8Fj+HE;E5E4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E4E5BA;EAOA;A9Fw9HJ;A8F59HI;EACE;A9F89HN;AkG5gIE;EhFsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBm9HJ;A8F//HE;E5E4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E4E5BA;EAOA;A9Fs/HJ;A8F1/HI;EACE;A9F4/HN;AkG1iIE;EhFsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBi/HJ;A8F7hIE;E5E4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E4E5BA;EAOA;A9FohIJ;A8FxhII;EACE;A9F0hIN;AmExyGE;;EjD1tBE;AlBsgIJ;AmE9nFI;;EjDx4CA;AlB0gIJ;AiGziII;;;EAGE;AjG2iIN;AmG1kIE;EACE;EACA;AnG4kIJ;AmGzkIE;EACE,+BATW;AnGolIf;AmGxkIE;;EAEE;EACA;AnG0kIJ;AmGvkIE;;EAEE;AnGykIJ;AmGrkII;;;;EAIE,uCA3Ba;AnGkmInB;AmGpkII;EACE,+BA/Ba;AnGqmInB;AoGjmII;EAME;ApG8lIN;AqGl7HE;EnFzHE;AlB8iIJ;AoG9lIQ;;;EAEE;ApGimIV;AqG17HE;EnFzHE;AlBsjIJ;AsGnkIE;EpFaE;AlByjIJ;AoGnjIE;;;;ElFNE;AlB+jIJ;AqGt8HE;EnFzHE;AlBkkIJ;AsG/kIE;EpFaE;AlBqkIJ;AoG/jIE;;;;;;;ElFNE;AlB8kIJ;AqGr9HE;EnFzHE;AlBilIJ;AsG9lIE;EpFaE;AlBolIJ;AoG9kIE;;;;;;;ElFNE;AlB6lIJ;AoGznIM;EAsBJ;EACA;ApGsmIF;AoGznIM;EAkBJ;EACA;ApG0mIF;AoGznIM;EAcJ;EACA;ApG8mIF;AoGxnII;ElFeA;AlB4mIJ;A6FvpIE;E3E2CE;AlB+mIJ;AoDlrIE;EAII;ApDirIN;AuGjpIM;EACE;AvGmpIR;AuG7oIM;ErFwBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBkoIJ;AoDrsIE;EAII;ApDosIN;AuG1rII;EACE,mBAOM;AvGqrIZ;AuG3pIM;ErFmBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBqpIJ;AoDxtIE;EAII;ApDutIN;AuG7sII;EACE,mBAQK;AvGusIX;AuGzqIM;ErFcF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AlBwqIJ;AoD3uIE;EAII;ApD0uIN;AuGhuII;EACE,mBASG;AvGytIT;AuGtrII;EAEE;AvGurIN;A8CvsIM;E5BsBF;AlBorIJ;A8CtsIM;E5BkBF;AlBurIJ;A8CrsIM;E5BcF;AlB0rIJ;A8CpsIM;E5BUF;AlB6rIJ;A+CttIE;E7ByBE;EAAA;AlBisIJ;A8C5rIM;E5BLF;EAAA;AlBqsIJ;A8C5rIM;E5BTF;EAAA;AlBysIJ;A8C5rIM;E5BbF;EAAA;AlB6sIJ;A8C5rIM;E5BjBF;EAAA;AlBitIJ;A+C1uIE;E7ByBE;EAAA;EAAA;EAAA;AlButIJ;A8CrrIM;E5BlCF;EAAA;AlB2tIJ;A8CrrIM;E5BtCF;EAAA;AlB+tIJ;A8CrrIM;E5B1CF;EAAA;AlBmuIJ;A8CrrIM;E5B9CF;EAAA;AlBuuIJ;A+ChwIE;E7ByBE;EAAA;EAAA;EAAA;EAAA;AlB8uIJ;A8C/qII;E5B/DA;AlBivIJ;A8C7qIM;E5BpEF;AlBovIJ;A8C5qIM;E5BxEF;AlBuvIJ;A8C3qIM;E5B5EF;AlB0vIJ;A8C1qIM;E5BhFF;AlB6vIJ;A+CtxIE;E7ByBE;EAAA;EAAA;EAAA;AlBmwIJ;A8ClqII;ECxKF;EACA;A/C60IF;A+Cr0IE;EACE;A/Cu0IJ;A+Cl0II;EACE;A/Co0IN;A+Ch0IE;EACE;A/Ck0IJ;A+C7zIE;EA1BA;EACA;A/C01IF;A+C7zIE;EA9BA;EACA;A/C81IF;A+C7zIE;EAlCA;EACA;A/Ck2IF;A8CvrII;EC5KF;EACA;A/Cs2IF;A+C91IE;EACE;A/Cg2IJ;A+C31II;EACE;A/C61IN;A+Cz1IE;EACE;A/C21IJ;A+Ct1IE;EA1BA;EACA;A/Cm3IF;A+Ct1IE;EA9BA;EACA;A/Cu3IF;A+Ct1IE;EAlCA;EACA;A/C23IF;AgDl3II;EDVF;EACA;A/C+3IF;A+Cv3IE;EACE;A/Cy3IJ;A+Cp3II;EACE;A/Cs3IN;A+Cl3IE;EACE;A/Co3IJ;A+C/2IE;EA1BA;EACA;A/C44IF;A+C/2IE;EA9BA;EACA;A/Cg5IF;A+C/2IE;EAlCA;EACA;A/Co5IF;AgDx4IM;E9B0DF;AlBi1IJ;AgDv4IM;E9BsDF;AlBo1IJ;AgDt4IM;E9BkDF;AlBu1IJ;A+Ch3IE;E7ByBE;EAAA;AlB21IJ;AwGh5II;EzDlBF;EACA;A/Cq6IF;A+C75IE;EACE;A/C+5IJ;A+C15II;EACE;A/C45IN;A+Cx5IE;EACE;A/C05IJ;A+Cr5IE;EA1BA;EACA;A/Ck7IF;A+Cr5IE;EA9BA;EACA;A/Cs7IF;A+Cr5IE;EAlCA;EACA;A/C07IF;AwGt6IM;EtFkDF;EAAA;EsF9DF;AxGu7IF;AwGv6IM;EtF8CF;EAAA;EsF9DF;AxG47IF;AwGr6IM;EtFuCF;EAAA;EsF9DF;AxGi8IF;AwGn6IM;EtFgCF;EAAA;EsF9DF;AxGs8IF;A+Cj6IE;E7ByBE;EAAA;EsF9DF;AxG28IF;AyG18II;EAME;EvFuDF;EAAA;AlBk5IJ;A0Gx2IE;ExF1CE;EAAA;AlBs5IJ;A2G1pIE;EzF5PE;AlBy5IJ;A2GvqIE;EzFlPE;AlB45IJ;A2GtpIE;EzFtQE;AlB+5IJ;AgF52IE;;;E9DnDE;AlBo6IJ;A2G/nIE;;EzFrSE;AlBw6IJ;A2G5nIE;EzF5SE;AlB26IJ;A2G5lIE;EzF/UE;AlB86IJ;A2GrlIE;EzFzVE;AlBi7IJ;A2G1kIE;;;EzFvWE;AlBs7IJ;AiFp7IM;EACE;EAEA;AjFq7IR;;A4Gl+IE;EAEE;A5Go+IJ;A6G9/II;E3FgEA;AlBi8IJ;A6G9/IM;E3F6DF;AlBo8IJ;A6G7/IM;E3FyDF;AlBu8IJ;AGh3IE;EACE;EACA;AHk3IJ;AwCv+II;ErCwHE;EACA;AHk3IN;;AG72II;EACE;EACA;AHg3IN;AG32II;EACE;EACA;AH62IN;AGx2II;EAWI;EAMF;AH21IN;AI/hJE;EcmEE;EdjEA;EACA;AJiiJJ;A6Cj/IE;;E3BgBE;AlBq+IJ;AKphJI;;EACE;ALuhJN;AKnhJE;EACE;ALqhJJ;AKnhJI;EACE;ALqhJN;AKjhJE;EACE;EACA;ALmhJJ;AKjhJI;EACE;ALmhJN;AK/gJE;EACE;ALihJJ;AK9gJE;EACE;EACA;ALghJJ;AK5gJI;EACE;EACA;EACA;AL8gJN;AK1gJE;EACE;EACA;AL4gJJ;AK1gJI;EACE;AL4gJN;AKxgJE;EACE;EACA;AL0gJJ;AKxgJI;EACE;AL0gJN;AKvgJI;EACE;ALygJN;AKrgJE;;EAEE;ALugJJ;AMvhJE;EACE;ANyhJJ;AMphJE;;;EAGE;ANshJJ;AMnhJE;EACE;ANqhJJ;AMlhJE;;EAEE;ANohJJ;AMjhJE;;EAEE;EACA;ANmhJJ;AM/jJE;EAiDI,+BA/Ba;ANgjJnB;AM7gJE;EACE,+BApCe;ANmjJnB;AM5gJE;EAOI;ANwgJN;AMxkJE;EA2EI;ANggJN;AM3kJE;EAoFM;AN0/IR;AMx6IE;EACE,kCA9MA;ANwnJJ;AMv6IE;;EAEE,kCAViB;ANm7IrB;AMt6IE;;EAEE;ANw6IJ;AMr6IE;;EAEE;ANu6IJ;AMp6IE;;EAEE,mBAxBc;AN87IlB;AMn6IE;;EAEE,mBA5BuB;ANi8I3B;AM1oJE;EACE;EACA;AN4oJJ;AMzoJE;EAII;ANwoJN;AM/nJE;EACE;ANioJJ;AM/mJE;;EASI;AN0mJN;AM5nJE;EASA;IASI;EN8mJJ;AACF;AMthJE;EY9EE;EZgFA;EACA;ANwhJJ;AMv9IE;EACE,oCA9MA;ANuqJJ;AMt9IE;;EAEE,kCAViB;ANk+IrB;AMr9IE;;EAEE;ANu9IJ;AMp9IE;;EAEE;ANs9IJ;AMn9IE;;EAEE,mBAxBc;AN6+IlB;AMl9IE;;EAEE,mBA5BuB;ANg/I3B;AMzrJE;EACE;EACA;AN2rJJ;AMxrJE;EAII;ANurJN;AM9qJE;EACE;ANgrJJ;AM9pJE;;EASI;ANypJN;AM3qJE;EASA;IASI;EN6pJJ;AACF;AMjgJE;EACE,kCA9MA;ANitJJ;AMhgJE;;EAEE,kCAViB;AN4gJrB;AM//IE;;EAEE;ANigJJ;AM9/IE;;EAEE;ANggJJ;AM7/IE;;EAEE,mBAxBc;ANuhJlB;AM5/IE;;EAEE,mBA5BuB;AN0hJ3B;AMnuJE;EACE;EACA;ANquJJ;AMluJE;EAII;ANiuJN;AMxtJE;EACE;AN0tJJ;AMxsJE;;EASI;ANmsJN;AMrtJE;EASA;IASI;ENusJJ;AACF;AMjmJE;EY5FE;AlBgsJJ;AMhmJE;EACE;ANkmJJ;AMhmJI;EACE;ANkmJN;AM/lJI;EACE;ANimJN;AM7lJE;EACE;AN+lJJ;A6DnxJE;EACE;A7DqxJJ;A6DlxJE;EACE;A7DoxJJ;AOlxJE;EAEE;EACA;APmxJJ;A6CtuJE;E3BgBE;AlBytJJ;AOnxJE;EACE;APqxJJ;A8DryJM;EvDoBF;APoxJJ;AO/wJE;EACE;IAEE;EPgxJJ;AACF;AO7wJE;EACE;AP+wJJ;AO5wJE;;EAEE;AP8wJJ;AO3wJE;EACE;AP6wJJ;AO3wJI;;EAEE;AP6wJN;A+DpzJI;EACE;A/DszJN;A+DnzJI;EACE;A/DqzJN;A+DlzJI;EACE;A/DozJN;AgEtzJE;EACE,yBALmC;EAMnC;AhEwzJJ;AgErzJE;EACE,yBAXwB;EAYxB;AhEuzJJ;AgErzJI;EACE,yBAb2B;AhEo0JjC;AgEpzJI;E9C8CA;AlBywJJ;AgEhzJE;EACE,iDAvBmB;AhEy0JvB;AgEhzJI;EACE,gDA1BiB;EA2BjB;AhEkzJN;AgE9yJE;EACE,gDAhCmB;EAiCnB;AhEgzJJ;AgE9yJI;EACE;EACA,iDArCiB;AhEq1JvB;AgE5yJE;EAQI;AhEuyJN;AUx1JI;EAIE;AVu1JN;AUp1JI;EACE;AVs1JN;AUh1JI;EACE;IACE;EVk1JN;AACF;AU/0JI;;EAIE;AV+0JN;AU50JI;EAGE;EACA;AV40JN;AUz0JI;;;EAGE;EACA;AV20JN;AUv0JM;EACE;AVy0JR;AUt0JM;;;EAGE;EACA;AVw0JR;AUn0JM;EACE;AVq0JR;AUl0JM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AumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACE;EACA;EACA;AAumKJ;AArmKE;EACE;EACA;EACA;AAumKJ;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACI;EACA;EACA;AAumKN;AArmKE;EACE;EACA;EACA;EACA;EACA;AAumKJ;AArmKE;EACE;AAumKJ;AApmKE;EACE;AAsmKJ;AApmKE;EACE;AAsmKJ;AApmKE;EACE;AAsmKJ;AApmKE;EACE;EACA;EACA;EACA;AAsmKJ;AApmKE;EACE;EACA;AAsmKJ;AApmKE;EACI;EACA;AAsmKN;AApmKE;EACE;EACA;EACA;EACA;AAsmKJ;AApmKE;EACE;AAsmKJ;AApmKE;EACE;AAsmKJ;AApmKE;EACI;AAsmKN;AApmKE;EACI;AAsmKN;AApmKE;EACI;AAsmKN;AApmKE;EAAgB;AAumKlB;AAtmKE;EACE;EACA;EACA;AAwmKJ;;AArmKA;EACE;EACA;EACA;AAwmKF;;AAtmKA;EACE;AAymKF;;AAvmKA;EACC;AA0mKD;;AAxmKA;EACE;AA2mKF;;AAzmKA;EACE;AA4mKF;AA3mKE;EACE;EACA;EACA;AA6mKJ;;AA1mKA;EACE;EACA;AA6mKF;;AA3mKA;EACE;EACA;AA8mKF;;AA5mKA;EACE;AA+mKF;;AA7mKA;EACE;EACA;AAgnKF;;AA9mKA;EACE;EACA;AAinKF;;AA/mKA;EACE;EACA;AAknKF;;AAhnKA;EACE;AAmnKF;;AAjnKA;EACE;AAonKF;;AAlnKA;EACE;EACA;EACA;AAqnKF;;AAnnKA;EACE;AAsnKF;;AApnKA;EACE;AAunKF;;AApnKE;EACE;AAunKJ;AAtnKI;EACE;EACA;EACA;AAwnKN;AAtnKI;EACE;EACA;AAwnKN;AAtnKI;EACE;EACA;EACA;AAwnKN;;AAnnKE;EACE;AAsnKJ;AApnKE;EACE;AAsnKJ;;AAlnKE;EACE;AAqnKJ;AAnnKE;EACE;EACA;AAqnKJ;;AAjnKA;EACE;AAonKF;;AAlnKA;EACE;EACA;AAqnKF;AApnKE;EACE;AAsnKJ;AArnKI;EACE;EACA;EACA;AAunKN;AArnKI;EACI;AAunKR;;AAnnKA;EACE;AAsnKF;AArnKE;EACE;EACA;EACA;EACA;EACA;EACA;AAunKJ;AAtnKI;EACE;EACA;AAwnKN;;AApnKA;EAAwB;AAwnKxB;;AAtnKA;EACE;AAynKF;AAvnKI;EACE;EACA;AAynKN;;AArnKA;EACE;EACA;AAwnKF;;AAtnKA;EACE;AAynKF;AAxnKE;EACE;EACA;EACA;EACA;EACA;EACA;AA0nKJ;AAxnKE;EACE;EACA;EACA;EACA;EACA;EACA;AA0nKJ;AAxnKE;EACE;EACA;EACA;EACA;EACA;AA0nKJ;;AAtnKE;EACE;AAynKJ;AAxnKI;EACE;AA0nKN;AAznKM;EACE;AA2nKR;;AAtnKA;EACE;AAynKF;AAxnKE;EACE;AA0nKJ;AAxnKM;EACE;EACA;EACA;EACA;AA0nKR;AAvnKI;EACE;AAynKN;AAxnKM;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AA0nKR;AAtnKE;EACE;EACA;EACA;EACA;AAwnKJ;AAvnKI;EACE;EACA;EACA;AAynKN;AAvnKI;EACE;EACA;EACA;EACA;EACA;EACA;AAynKN;AAxnKM;EACE;EACA;AA0nKR;AArnKI;EACE;EACA;AAunKN;AAtnKM;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AAwnKR;AAtnKM;EACE,mB8GljBO;E9GmjBP,W8GjjBe;E9GkjBf;AAwnKR;AAtnKM;EACE;EACA;EACA;EACA;EACA;EACA;AAwnKR;AArnKI;EACE;EACA;EACA;EACA;AAunKN;AAtnKM;EACE;AAwnKR;AAvnKQ;EACE;AAynKV;AAxnKU;EACE;EACA;EACA;EACA;AA0nKZ;AAznKY;EACE;AA2nKd;AAznKY;EACE;EACA;EACA;EACA;AA2nKd;AArnKQ;EACE;AAunKV;AAtnKU;EACE;EACA,W8GzlBE;E9G0lBF;EACA;EACA;EACA;AAwnKZ;AAvnKY;EACE;AAynKd;AAvnKY;EACE,W8GlmBA;A9G2tLd;AAtnKY;EACE;EACA;EACA;AAwnKd;AAtnKY;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AAwnKd;AAtnKY;EACE;AAwnKd;AAtnKY;EACE;AAwnKd;AAtnKY;EACE;EACA;EACA;EACA;AAwnKd;AAjnKQ;EACE;EACA;EACA;EACA;EACA;EACA;AAmnKV;AAlnKU;EACI;AAonKd;AA/mKI;EACE;AAinKN;AAhnKM;EACE;EACA;AAknKR;AA/mKQ;EACE;EACA;EACA;AAinKV;AA5mKM;EACE;AA8mKR;AA1mKM;EACE;AA4mKR;;AAtmKE;EACE;AAymKJ;AAxmKI;EACE;AA0mKN;;AAtmKA;EACE;EACA;EACA;EACA;EACA;AAymKF;;AAvmKA;EAAgB;AA2mKhB;;AA1mKA;EACE;AA6mKF;;AArmKA;EACE;AAwmKF;;AAtmKA;EACE;EACA;EACA;AAymKF;AAxmKE;EACE;EACA;EACA;AA0mKJ;;AAvmKA;EACE;EACA;EACA;EACA;EACA;AA0mKF;;AAxmKA;EACE;EACA;EACA;AA2mKF;;AAzmKA;EACE;EACA;AA4mKF;AA3mKE;EACE;EACA;AA6mKJ;AA5mKI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AA8mKN;AA7mKM;EACI;EACA;EACA;EACA;AA+mKV;AA5mKI;EACE;EACA;EACA;EACA;AA8mKN;AA7mKM;EACE;EACA;EACA;AA+mKR;;AA1mKA;EACE;AA6mKF;;AA1mKE;EACE;AA6mKJ;;AA1mKA;EACE;EACA;AA6mKF;;AA3mKA;EACE;AA8mKF;AA7mKI;EACE;EACA;AA+mKN;AA9mKM;EACE;AAgnKR;AA/mKQ;EACE;AAinKV;;AA3mKE;EACE;AA8mKJ;;AA3mKA;EACE;AA8mKF;;AA1mKI;EACE;AA6mKN;;AAtmKA;AACA;EACE;AAymKF;;AAvmKA;EACE;EACA;EACA;EACA;AA0mKF;AAxmKI;EACE;AA0mKN;AAzmKM;EACE;AA2mKR;AA1mKQ;EACE;EACA;AA4mKV;AAtmKI;EACE;AAwmKN;AAvmKM;EACE;AAymKR;AArmKE;EACE;AAumKJ;AAtmKI;EACE;AAwmKN;AAvmKM;EACE;AAymKR;AAxmKQ;EACE;AA0mKV;AAzmKU;EACE;EACA;EACA;EACA;AA2mKZ;AA1mKY;EACE;EACA;AA4mKd;AAzmKU;EACE;AA2mKZ;;AApmKA;EACC;AAumKD;;AAnmKI;EACE;EACA;AAsmKN;;AAlmKA;EACE;EACA;AAqmKF;;AAlmKE;EACE;EACA;AAqmKJ;AAnmKE;EACE;AAqmKJ;;AAjmKE;EACE;EACA;EACA;AAomKJ;AAnmKI;EACE;EACA;AAqmKN;;AAjmKA;EACE;AAomKF;;AAlmKA;EACE;AAqmKF;;AAnmKA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAsmKJ;AArmKE;EACE;EACA;EACA;EACA;EACA;AAumKJ;AArmKE;EACI;AAumKN;;AApmKA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AAumKF;AAtmKE;EACI;EACA;EACA;EACA;AAwmKN;;AApmKE;EACE;EACA;AAumKJ;AAtmKI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAwmKN;;AApmKA;EACE;AAumKF;;AArmKA;EACE;AAwmKF;;AAtmKA;EACE;AAymKF;;AApmKM;EACE;EACA;EACA;EACA;EACA;AAumKR;;AAlmKA;EACE;EACA;EACA;AAqmKF;AApmKE;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAsmKN;AArmKM;EACI;AAumKV;;AAlmKA;EACE;IACE;EAqmKF;AACF;AAjmKA;EACE;IAAe;IAAe;EAqmK9B;EApmKA;IAAW;IAAgB;EAwmK3B;EAvmKA;IAAW;IAAgB;EA2mK3B;EA1mKA;IAAY;IAAgB;EA8mK5B;EA7mKA;IAAY;IAAgB;EAinK5B;EAhnKA;IAAY;IAAgB;EAonK5B;EAnnKA;IAAY;IAAgB;EAunK5B;EAtnKA;IA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","sources":["./node_modules/@angular/material/prebuilt-themes/indigo-pink.css","./src/styles.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/legacy-core/option/_option-theme.scss","./node_modules/@angular/material/legacy-core/option/_optgroup-theme.scss","./node_modules/@angular/material/legacy-button/_button-theme.scss","./node_modules/@material/button/_button-base.scss","./node_modules/@material/typography/_typography.scss","./node_modules/@material/theme/_css.scss","./node_modules/@angular/material/legacy-card/_card-theme.scss","./node_modules/@angular/material/legacy-tooltip/_tooltip-theme.scss","./node_modules/@angular/material/legacy-input/_input-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-outline-theme.scss","./node_modules/@angular/material/legacy-select/_select-theme.scss","./node_modules/@angular/material/legacy-checkbox/_checkbox-theme.scss","./node_modules/@angular/material/legacy-dialog/_dialog-theme.scss","./node_modules/@angular/material/legacy-chips/_chips-theme.scss","./node_modules/@angular/material/legacy-slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/legacy-tabs/_tabs-theme.scss","./node_modules/@angular/material/legacy-radio/_radio-theme.scss","./node_modules/@angular/material/legacy-slider/_slider-theme.scss","./node_modules/@angular/material/legacy-menu/_menu-theme.scss","./node_modules/@angular/material/legacy-list/_list-theme.scss","./node_modules/@angular/material/legacy-paginator/_paginator-theme.scss","./node_modules/@angular/material/legacy-snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/legacy-table/_table-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_private.scss","./node_modules/@angular/material/core/style/_layout-common.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button/_button-theme-private.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@material/icon-button/_icon-button-theme.scss","./node_modules/@material/touch-target/_touch-target.scss","./node_modules/@material/theme/_gss.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/legacy-core/_core-theme.scss","./node_modules/@angular/material/legacy-progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/legacy-progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/legacy-form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/legacy-autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@material/list/_list.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@material/linear-progress/_linear-progress-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@material/textfield/_mixins.scss","./node_modules/@material/textfield/helper-text/_mixins.scss","./node_modules/@material/textfield/character-counter/_mixins.scss","./node_modules/@material/textfield/icon/_mixins.scss","./node_modules/@material/ripple/_ripple-theme.scss","./node_modules/@material/line-ripple/_mixins.scss","./node_modules/@material/notched-outline/_mixins.scss","./node_modules/@material/rtl/_rtl.scss","./node_modules/@angular/material/form-field/_form-field-subscript.scss","./node_modules/@angular/material/form-field/_form-field-focus-overlay.scss","./node_modules/@angular/material/form-field/_mdc-text-field-theme-variable-refresh.scss","./node_modules/@angular/material/form-field/_form-field-native-select.scss","./node_modules/@angular/material/core/theming/_palette.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@material/menu-surface/_mixins.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@material/form-field/_mixins.scss","./node_modules/@angular/material/radio/_radio-private.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/menu/_menu-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/list/_list-option-theme.scss","./node_modules/@angular/material/paginator/_paginator-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@material/tab/_mixins.scss","./node_modules/@material/tab-indicator/_tab-indicator-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/button/_fab-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@material/data-table/_data-table.scss","./node_modules/@material/data-table/_data-table-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./src/variable.scss"],"sourcesContent":[".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0)}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}.mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border:var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\"\"}.cdk-high-contrast-active{--mat-focus-indicator-display: block}.mat-mdc-focus-indicator{position:relative}.mat-mdc-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-mdc-focus-indicator-display, none);border:var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);border-radius:var(--mat-mdc-focus-indicator-border-radius, 4px)}.mat-mdc-focus-indicator:focus::before{content:\"\"}.cdk-high-contrast-active{--mat-mdc-focus-indicator-display: block}.mat-ripple-element{background-color:rgba(0,0,0,.1)}.mat-mdc-option{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-mdc-option:hover:not(.mdc-list-item--disabled),.mat-mdc-option:focus:not(.mdc-list-item--disabled),.mat-mdc-option.mat-mdc-option-active,.mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled){background:rgba(0,0,0,.04)}.mat-primary .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mdc-theme-primary, #3f51b5)}.mat-accent .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mdc-theme-secondary, #ff4081)}.mat-warn .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mdc-theme-error, #f44336)}.mat-mdc-optgroup-label{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-pseudo-checkbox-full{color:rgba(0,0,0,.54)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{color:#b0b0b0}.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#3f51b5}.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#3f51b5}.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after{color:#fafafa}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#ff4081}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#ff4081}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after{color:#fafafa}.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#ff4081}.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#ff4081}.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after{color:#fafafa}.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#f44336}.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#f44336}.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after{color:#fafafa}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#b0b0b0}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#b0b0b0}.mat-app-background{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-elevation-z0,.mat-mdc-elevation-specific.mat-elevation-z0{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z1,.mat-mdc-elevation-specific.mat-elevation-z1{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z2,.mat-mdc-elevation-specific.mat-elevation-z2{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z3,.mat-mdc-elevation-specific.mat-elevation-z3{box-shadow:0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z4,.mat-mdc-elevation-specific.mat-elevation-z4{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z5,.mat-mdc-elevation-specific.mat-elevation-z5{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z6,.mat-mdc-elevation-specific.mat-elevation-z6{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z7,.mat-mdc-elevation-specific.mat-elevation-z7{box-shadow:0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12)}.mat-elevation-z8,.mat-mdc-elevation-specific.mat-elevation-z8{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z9,.mat-mdc-elevation-specific.mat-elevation-z9{box-shadow:0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z10,.mat-mdc-elevation-specific.mat-elevation-z10{box-shadow:0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z11,.mat-mdc-elevation-specific.mat-elevation-z11{box-shadow:0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z12,.mat-mdc-elevation-specific.mat-elevation-z12{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z13,.mat-mdc-elevation-specific.mat-elevation-z13{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z14,.mat-mdc-elevation-specific.mat-elevation-z14{box-shadow:0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z15,.mat-mdc-elevation-specific.mat-elevation-z15{box-shadow:0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z16,.mat-mdc-elevation-specific.mat-elevation-z16{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z17,.mat-mdc-elevation-specific.mat-elevation-z17{box-shadow:0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z18,.mat-mdc-elevation-specific.mat-elevation-z18{box-shadow:0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z19,.mat-mdc-elevation-specific.mat-elevation-z19{box-shadow:0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z20,.mat-mdc-elevation-specific.mat-elevation-z20{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z21,.mat-mdc-elevation-specific.mat-elevation-z21{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z22,.mat-mdc-elevation-specific.mat-elevation-z22{box-shadow:0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z23,.mat-mdc-elevation-specific.mat-elevation-z23{box-shadow:0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12)}.mat-elevation-z24,.mat-mdc-elevation-specific.mat-elevation-z24{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12)}.mat-theme-loaded-marker{display:none}.mat-mdc-option{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body1-font-size, 16px);line-height:var(--mdc-typography-body1-line-height, 24px);font-weight:var(--mdc-typography-body1-font-weight, 400);letter-spacing:var(--mdc-typography-body1-letter-spacing, 0.03125em)}.mat-mdc-card{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);--mdc-elevated-card-container-color:#fff}.mat-mdc-card-outlined{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);--mdc-outlined-card-outline-color:#e0e0e0}.mat-mdc-card-subtitle{color:rgba(0,0,0,.54)}.mat-mdc-card-title{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-headline6-font-size, 20px);line-height:var(--mdc-typography-headline6-line-height, 32px);font-weight:var(--mdc-typography-headline6-font-weight, 500);letter-spacing:var(--mdc-typography-headline6-letter-spacing, 0.0125em);text-decoration:var(--mdc-typography-headline6-text-decoration, inherit);text-transform:var(--mdc-typography-headline6-text-transform, none)}.mat-mdc-card-subtitle{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-subtitle2-font-size, 14px);line-height:var(--mdc-typography-subtitle2-line-height, 22px);font-weight:var(--mdc-typography-subtitle2-font-weight, 500);letter-spacing:var(--mdc-typography-subtitle2-letter-spacing, 0.0071428571em);text-decoration:var(--mdc-typography-subtitle2-text-decoration, inherit);text-transform:var(--mdc-typography-subtitle2-text-transform, none)}.mat-mdc-progress-bar{--mdc-linear-progress-active-indicator-color:#3f51b5}.mat-mdc-progress-bar .mdc-linear-progress__buffer-dots{background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(63, 81, 181, 0.25)'/%3E%3C/svg%3E\")}.mat-mdc-progress-bar .mdc-linear-progress__buffer-bar{background-color:rgba(63, 81, 181, 0.25)}.mat-mdc-progress-bar.mat-accent{--mdc-linear-progress-active-indicator-color:#ff4081}.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots{background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 64, 129, 0.25)'/%3E%3C/svg%3E\")}.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-bar{background-color:rgba(255, 64, 129, 0.25)}.mat-mdc-progress-bar.mat-warn{--mdc-linear-progress-active-indicator-color:#f44336}.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots{background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(244, 67, 54, 0.25)'/%3E%3C/svg%3E\")}.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-bar{background-color:rgba(244, 67, 54, 0.25)}.mat-mdc-tooltip{--mdc-plain-tooltip-container-color:#616161;--mdc-plain-tooltip-supporting-text-color:white}.mat-mdc-tooltip{--mdc-plain-tooltip-supporting-text-font:Roboto, sans-serif;--mdc-plain-tooltip-supporting-text-size:12px;--mdc-plain-tooltip-supporting-text-weight:400;--mdc-plain-tooltip-supporting-text-tracking:0.0333333333em}.mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label{color:rgba(0, 0, 0, 0.6)}.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input{color:rgba(0, 0, 0, 0.87)}@media all{.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:rgba(0, 0, 0, 0.6)}}@media all{.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:rgba(0, 0, 0, 0.6)}}.mdc-text-field .mdc-text-field__input{caret-color:var(--mdc-theme-primary, #3f51b5)}.mdc-text-field:not(.mdc-text-field--disabled)+.mdc-text-field-helper-line .mdc-text-field-helper-text{color:rgba(0, 0, 0, 0.6)}.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field-character-counter,.mdc-text-field:not(.mdc-text-field--disabled)+.mdc-text-field-helper-line .mdc-text-field-character-counter{color:rgba(0, 0, 0, 0.6)}.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--leading{color:rgba(0, 0, 0, 0.54)}.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing{color:rgba(0, 0, 0, 0.54)}.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__affix--prefix{color:rgba(0, 0, 0, 0.6)}.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__affix--suffix{color:rgba(0, 0, 0, 0.6)}.mdc-text-field--filled .mdc-text-field__ripple::before,.mdc-text-field--filled .mdc-text-field__ripple::after{background-color:var(--mdc-ripple-color, rgba(0, 0, 0, 0.87))}.mdc-text-field--filled:hover .mdc-text-field__ripple::before,.mdc-text-field--filled.mdc-ripple-surface--hover .mdc-text-field__ripple::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before,.mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:whitesmoke}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.42)}.mdc-text-field--filled:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.87)}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-color:var(--mdc-theme-primary, #3f51b5)}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.38)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.87)}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-theme-primary, #3f51b5)}.mdc-text-field--outlined .mdc-text-field__ripple::before,.mdc-text-field--outlined .mdc-text-field__ripple::after{background-color:var(--mdc-ripple-color, transparent)}.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label{color:rgba(63, 81, 181, 0.87)}.mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid .mdc-text-field__input{caret-color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing{color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mdc-text-field--disabled .mdc-text-field__input{color:rgba(0, 0, 0, 0.38)}@media all{.mdc-text-field--disabled .mdc-text-field__input::placeholder{color:rgba(0, 0, 0, 0.38)}}@media all{.mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder{color:rgba(0, 0, 0, 0.38)}}.mdc-text-field--disabled .mdc-floating-label{color:rgba(0, 0, 0, 0.38)}.mdc-text-field--disabled+.mdc-text-field-helper-line .mdc-text-field-helper-text{color:rgba(0, 0, 0, 0.38)}.mdc-text-field--disabled .mdc-text-field-character-counter,.mdc-text-field--disabled+.mdc-text-field-helper-line .mdc-text-field-character-counter{color:rgba(0, 0, 0, 0.38)}.mdc-text-field--disabled .mdc-text-field__icon--leading{color:rgba(0, 0, 0, 0.3)}.mdc-text-field--disabled .mdc-text-field__icon--trailing{color:rgba(0, 0, 0, 0.3)}.mdc-text-field--disabled .mdc-text-field__affix--prefix{color:rgba(0, 0, 0, 0.38)}.mdc-text-field--disabled .mdc-text-field__affix--suffix{color:rgba(0, 0, 0, 0.38)}.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:rgba(0, 0, 0, 0.06)}.mdc-text-field--disabled .mdc-notched-outline__leading,.mdc-text-field--disabled .mdc-notched-outline__notch,.mdc-text-field--disabled .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.06)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-text-field__input::placeholder{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-floating-label{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled+.mdc-text-field-helper-line .mdc-text-field-helper-text{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-text-field-character-counter,.mdc-text-field--disabled+.mdc-text-field-helper-line .mdc-text-field-character-counter{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-text-field__icon--leading{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-text-field__icon--trailing{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-text-field__affix--prefix{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-text-field__affix--suffix{color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:GrayText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-text-field--disabled .mdc-notched-outline__leading,.mdc-text-field--disabled .mdc-notched-outline__notch,.mdc-text-field--disabled .mdc-notched-outline__trailing{border-color:GrayText}}.mdc-text-field--disabled.mdc-text-field--filled{background-color:#fafafa}.mat-mdc-form-field-error{color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field-focus-overlay{background-color:rgba(0,0,0,.87)}.mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay{opacity:.04}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:.12}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{color:rgba(0,0,0,.54)}.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary .mat-mdc-form-field-infix::after{color:rgba(63,81,181,.87)}.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent .mat-mdc-form-field-infix::after{color:rgba(255,64,129,.87)}.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn .mat-mdc-form-field-infix::after{color:rgba(244,67,54,.87)}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:rgba(0,0,0,.38)}.mat-mdc-form-field.mat-accent .mdc-text-field__input{caret-color:var(--mdc-theme-secondary, #ff4081)}.mat-mdc-form-field.mat-accent:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-theme-secondary, #ff4081)}.mat-mdc-form-field.mat-accent .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label{color:rgba(255, 64, 129, 0.87)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid .mdc-text-field__input{caret-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing{color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-theme-secondary, #ff4081)}.mat-mdc-form-field.mat-warn .mdc-text-field__input{caret-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label{color:rgba(244, 67, 54, 0.87)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before{border-bottom-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid+.mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg{color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid .mdc-text-field__input{caret-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing{color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,.mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,.mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing{border-color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:56px}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:28px}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY( -34.75px) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding-top:16px;padding-bottom:16px}.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix{padding-top:24px;padding-bottom:8px}.mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix{padding-top:16px;padding-bottom:16px}.mdc-text-field__input{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-subtitle1-font-size, 16px);font-weight:var(--mdc-typography-subtitle1-font-weight, 400);letter-spacing:var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);text-decoration:var(--mdc-typography-subtitle1-text-decoration, inherit);text-transform:var(--mdc-typography-subtitle1-text-transform, none)}.mdc-text-field__affix{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-subtitle1-font-size, 16px);font-weight:var(--mdc-typography-subtitle1-font-weight, 400);letter-spacing:var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);text-decoration:var(--mdc-typography-subtitle1-text-decoration, inherit);text-transform:var(--mdc-typography-subtitle1-text-transform, none)}.mdc-text-field--textarea .mdc-text-field__input{line-height:1.5rem}.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-subtitle1-font-size, 16px);font-weight:var(--mdc-typography-subtitle1-font-weight, 400);letter-spacing:var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);text-decoration:var(--mdc-typography-subtitle1-text-decoration, inherit);text-transform:var(--mdc-typography-subtitle1-text-transform, none)}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-caption-font-size, 12px);line-height:var(--mdc-typography-caption-line-height, 20px);font-weight:var(--mdc-typography-caption-font-weight, 400);letter-spacing:var(--mdc-typography-caption-letter-spacing, 0.0333333333em);text-decoration:var(--mdc-typography-caption-text-decoration, inherit);text-transform:var(--mdc-typography-caption-text-transform, none)}.mat-mdc-form-field,.mat-mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body1-font-size, 16px);line-height:var(--mdc-typography-body1-line-height, 24px);font-weight:var(--mdc-typography-body1-font-weight, 400);letter-spacing:var(--mdc-typography-body1-letter-spacing, 0.03125em);text-decoration:var(--mdc-typography-body1-text-decoration, inherit);text-transform:var(--mdc-typography-body1-text-transform, none)}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(16px * var(--mat-mdc-form-field-floating-label-scale, 0.75))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:16px}.mdc-menu-surface{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);background-color:var(--mdc-theme-surface, #fff);color:var(--mdc-theme-on-surface, #000)}.mdc-list-item__primary-text{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mdc-list-item__secondary-text{color:var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54))}.mdc-list-item__overline-text{color:var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-trailing-icon .mdc-list-item__end{background-color:transparent}.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item__end{color:var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:0.38}.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled .mdc-list-item__secondary-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled .mdc-list-item__overline-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--selected .mdc-list-item__primary-text,.mdc-list-item--activated .mdc-list-item__primary-text{color:var(--mdc-theme-primary, #3f51b5)}.mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-theme-primary, #3f51b5)}.mdc-deprecated-list-group__subheader{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mdc-list-divider::after{border-bottom-color:white}.mdc-list-divider{background-color:rgba(0, 0, 0, 0.12)}.mat-mdc-select-value{color:rgba(0,0,0,.87)}.mat-mdc-select-placeholder{color:rgba(0,0,0,.6)}.mat-mdc-select-disabled .mat-mdc-select-value{color:rgba(0,0,0,.38)}.mat-mdc-select-arrow{color:rgba(0,0,0,.54)}.mat-mdc-form-field.mat-focused.mat-primary .mat-mdc-select-arrow{color:rgba(63,81,181,.87)}.mat-mdc-form-field.mat-focused.mat-accent .mat-mdc-select-arrow{color:rgba(255,64,129,.87)}.mat-mdc-form-field.mat-focused.mat-warn .mat-mdc-select-arrow{color:rgba(244,67,54,.87)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow{color:rgba(244,67,54,.87)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:rgba(0,0,0,.38)}.mat-mdc-select-panel{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-subtitle1-font-size, 16px);line-height:var(--mdc-typography-subtitle1-line-height, 28px);font-weight:var(--mdc-typography-subtitle1-font-weight, 400);letter-spacing:var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);text-decoration:var(--mdc-typography-subtitle1-text-decoration, inherit);text-transform:var(--mdc-typography-subtitle1-text-transform, none);line-height:24px}.mat-mdc-select{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body1-font-size, 16px);line-height:var(--mdc-typography-body1-line-height, 24px);font-weight:var(--mdc-typography-body1-font-weight, 400);letter-spacing:var(--mdc-typography-body1-letter-spacing, 0.03125em);text-decoration:var(--mdc-typography-body1-text-decoration, inherit);text-transform:var(--mdc-typography-body1-text-transform, none)}.mdc-menu-surface{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);background-color:var(--mdc-theme-surface, #fff);color:var(--mdc-theme-on-surface, #000)}.mdc-list-item__primary-text{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mdc-list-item__secondary-text{color:var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54))}.mdc-list-item__overline-text{color:var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-trailing-icon .mdc-list-item__end{background-color:transparent}.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item__end{color:var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:0.38}.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled .mdc-list-item__secondary-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled .mdc-list-item__overline-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--selected .mdc-list-item__primary-text,.mdc-list-item--activated .mdc-list-item__primary-text{color:var(--mdc-theme-primary, #3f51b5)}.mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-theme-primary, #3f51b5)}.mdc-deprecated-list-group__subheader{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mdc-list-divider::after{border-bottom-color:white}.mdc-list-divider{background-color:rgba(0, 0, 0, 0.12)}.mat-mdc-autocomplete-panel{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-subtitle1-font-size, 16px);line-height:var(--mdc-typography-subtitle1-line-height, 28px);font-weight:var(--mdc-typography-subtitle1-font-weight, 400);letter-spacing:var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);text-decoration:var(--mdc-typography-subtitle1-text-decoration, inherit);text-transform:var(--mdc-typography-subtitle1-text-transform, none);line-height:24px}.mat-mdc-dialog-container{--mdc-dialog-container-color:white;--mdc-dialog-with-divider-divider-color:rgba(0, 0, 0, 0.12);--mdc-dialog-subhead-color:rgba(0, 0, 0, 0.87);--mdc-dialog-supporting-text-color:rgba(0, 0, 0, 0.6)}.mat-mdc-dialog-container{--mdc-dialog-subhead-font:Roboto, sans-serif;--mdc-dialog-subhead-line-height:32px;--mdc-dialog-subhead-size:20px;--mdc-dialog-subhead-weight:500;--mdc-dialog-subhead-tracking:0.0125em;--mdc-dialog-supporting-text-font:Roboto, sans-serif;--mdc-dialog-supporting-text-line-height:24px;--mdc-dialog-supporting-text-size:16px;--mdc-dialog-supporting-text-weight:400;--mdc-dialog-supporting-text-tracking:0.03125em}.mat-mdc-standard-chip{--mdc-chip-elevated-container-color:#e0e0e0;--mdc-chip-elevated-disabled-container-color:#e0e0e0;--mdc-chip-label-text-color:#212121;--mdc-chip-disabled-label-text-color:#212121;--mdc-chip-with-icon-icon-color:#212121;--mdc-chip-with-icon-disabled-icon-color:#212121;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color:#212121;--mdc-chip-with-trailing-icon-trailing-icon-color:#212121;--mdc-chip-with-icon-selected-icon-color:#212121}.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected,.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted{--mdc-chip-elevated-container-color:#3f51b5;--mdc-chip-elevated-disabled-container-color:#3f51b5;--mdc-chip-label-text-color:white;--mdc-chip-disabled-label-text-color:white;--mdc-chip-with-icon-icon-color:white;--mdc-chip-with-icon-disabled-icon-color:white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color:white;--mdc-chip-with-trailing-icon-trailing-icon-color:white;--mdc-chip-with-icon-selected-icon-color:white}.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected,.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted{--mdc-chip-elevated-container-color:#ff4081;--mdc-chip-elevated-disabled-container-color:#ff4081;--mdc-chip-label-text-color:white;--mdc-chip-disabled-label-text-color:white;--mdc-chip-with-icon-icon-color:white;--mdc-chip-with-icon-disabled-icon-color:white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color:white;--mdc-chip-with-trailing-icon-trailing-icon-color:white;--mdc-chip-with-icon-selected-icon-color:white}.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected,.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted{--mdc-chip-elevated-container-color:#f44336;--mdc-chip-elevated-disabled-container-color:#f44336;--mdc-chip-label-text-color:white;--mdc-chip-disabled-label-text-color:white;--mdc-chip-with-icon-icon-color:white;--mdc-chip-with-icon-disabled-icon-color:white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color:white;--mdc-chip-with-trailing-icon-trailing-icon-color:white;--mdc-chip-with-icon-selected-icon-color:white}.mat-mdc-chip-focus-overlay{background:#000}.mat-mdc-chip{height:32px}.mat-mdc-standard-chip{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body2-font-size, 14px);line-height:var(--mdc-typography-body2-line-height, 20px);font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:var(--mdc-typography-body2-text-transform, none)}.mat-mdc-slide-toggle{--mdc-switch-disabled-selected-handle-color:#424242;--mdc-switch-disabled-unselected-handle-color:#424242;--mdc-switch-disabled-selected-track-color:#424242;--mdc-switch-disabled-unselected-track-color:#424242;--mdc-switch-unselected-focus-state-layer-color:#424242;--mdc-switch-unselected-pressed-state-layer-color:#424242;--mdc-switch-unselected-hover-state-layer-color:#424242;--mdc-switch-unselected-focus-track-color:#e0e0e0;--mdc-switch-unselected-hover-track-color:#e0e0e0;--mdc-switch-unselected-pressed-track-color:#e0e0e0;--mdc-switch-unselected-track-color:#e0e0e0;--mdc-switch-unselected-focus-handle-color:#212121;--mdc-switch-unselected-hover-handle-color:#212121;--mdc-switch-unselected-pressed-handle-color:#212121;--mdc-switch-handle-surface-color:var(--mdc-theme-surface, #fff);--mdc-switch-unselected-handle-color:#616161;--mdc-switch-selected-icon-color:#fff;--mdc-switch-disabled-selected-icon-color:#fff;--mdc-switch-disabled-unselected-icon-color:#fff;--mdc-switch-unselected-icon-color:#fff}.mat-mdc-slide-toggle .mdc-form-field{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:rgba(0,0,0,.38)}.mat-mdc-slide-toggle.mat-primary{--mdc-switch-selected-focus-state-layer-color:#3949ab;--mdc-switch-selected-handle-color:#3949ab;--mdc-switch-selected-hover-state-layer-color:#3949ab;--mdc-switch-selected-pressed-state-layer-color:#3949ab;--mdc-switch-selected-focus-handle-color:#1a237e;--mdc-switch-selected-hover-handle-color:#1a237e;--mdc-switch-selected-pressed-handle-color:#1a237e;--mdc-switch-selected-focus-track-color:#7986cb;--mdc-switch-selected-hover-track-color:#7986cb;--mdc-switch-selected-pressed-track-color:#7986cb;--mdc-switch-selected-track-color:#7986cb}.mat-mdc-slide-toggle.mat-accent{--mdc-switch-selected-focus-state-layer-color:#d81b60;--mdc-switch-selected-handle-color:#d81b60;--mdc-switch-selected-hover-state-layer-color:#d81b60;--mdc-switch-selected-pressed-state-layer-color:#d81b60;--mdc-switch-selected-focus-handle-color:#880e4f;--mdc-switch-selected-hover-handle-color:#880e4f;--mdc-switch-selected-pressed-handle-color:#880e4f;--mdc-switch-selected-focus-track-color:#f06292;--mdc-switch-selected-hover-track-color:#f06292;--mdc-switch-selected-pressed-track-color:#f06292;--mdc-switch-selected-track-color:#f06292}.mat-mdc-slide-toggle.mat-warn{--mdc-switch-selected-focus-state-layer-color:#e53935;--mdc-switch-selected-handle-color:#e53935;--mdc-switch-selected-hover-state-layer-color:#e53935;--mdc-switch-selected-pressed-state-layer-color:#e53935;--mdc-switch-selected-focus-handle-color:#b71c1c;--mdc-switch-selected-hover-handle-color:#b71c1c;--mdc-switch-selected-pressed-handle-color:#b71c1c;--mdc-switch-selected-focus-track-color:#e57373;--mdc-switch-selected-hover-track-color:#e57373;--mdc-switch-selected-pressed-track-color:#e57373;--mdc-switch-selected-track-color:#e57373}.mat-mdc-slide-toggle{--mdc-switch-state-layer-size:48px}.mdc-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body2-font-size, 14px);line-height:var(--mdc-typography-body2-line-height, 20px);font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:var(--mdc-typography-body2-text-transform, none)}.mat-mdc-radio-button .mdc-form-field{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-mdc-radio-button.mat-primary{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-focus-icon-color:#212121;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#3f51b5;--mdc-radio-selected-hover-icon-color:#3f51b5;--mdc-radio-selected-icon-color:#3f51b5;--mdc-radio-selected-pressed-icon-color:#3f51b5;--mat-mdc-radio-ripple-color: #000;--mat-mdc-radio-checked-ripple-color: #3f51b5}.mat-mdc-radio-button.mat-primary .mdc-radio--disabled+label{color:rgba(0,0,0,.38)}.mat-mdc-radio-button.mat-accent{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-focus-icon-color:#212121;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#ff4081;--mdc-radio-selected-hover-icon-color:#ff4081;--mdc-radio-selected-icon-color:#ff4081;--mdc-radio-selected-pressed-icon-color:#ff4081;--mat-mdc-radio-ripple-color: #000;--mat-mdc-radio-checked-ripple-color: #ff4081}.mat-mdc-radio-button.mat-accent .mdc-radio--disabled+label{color:rgba(0,0,0,.38)}.mat-mdc-radio-button.mat-warn{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-focus-icon-color:#212121;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#f44336;--mdc-radio-selected-hover-icon-color:#f44336;--mdc-radio-selected-icon-color:#f44336;--mdc-radio-selected-pressed-icon-color:#f44336;--mat-mdc-radio-ripple-color: #000;--mat-mdc-radio-checked-ripple-color: #f44336}.mat-mdc-radio-button.mat-warn .mdc-radio--disabled+label{color:rgba(0,0,0,.38)}.mat-mdc-radio-button .mdc-radio{padding:calc((40px - 20px) / 2)}.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before{top:calc(-1 * (40px - 20px) / 2);left:calc(-1 * (40px - 20px) / 2);width:40px;height:40px}.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control{top:calc((40px - 40px) / 2);right:calc((40px - 40px) / 2);left:calc((40px - 40px) / 2);width:40px;height:40px}.mdc-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body2-font-size, 14px);line-height:var(--mdc-typography-body2-line-height, 20px);font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:var(--mdc-typography-body2-text-transform, none)}.mat-mdc-slider{--mdc-slider-label-container-color:black;--mdc-slider-label-label-text-color:white;--mdc-slider-disabled-handle-color:#000;--mdc-slider-disabled-active-track-color:#000;--mdc-slider-disabled-inactive-track-color:#000;--mdc-slider-with-tick-marks-disabled-container-color:#000;--mat-mdc-slider-value-indicator-opacity: 0.6}.mat-mdc-slider.mat-primary{--mdc-slider-handle-color:#3f51b5;--mdc-slider-focus-handle-color:#3f51b5;--mdc-slider-hover-handle-color:#3f51b5;--mdc-slider-active-track-color:#3f51b5;--mdc-slider-inactive-track-color:#3f51b5;--mdc-slider-with-tick-marks-active-container-color:#fff;--mdc-slider-with-tick-marks-inactive-container-color:#3f51b5;--mat-mdc-slider-ripple-color: #3f51b5;--mat-mdc-slider-hover-ripple-color: rgba(63, 81, 181, 0.05);--mat-mdc-slider-focus-ripple-color: rgba(63, 81, 181, 0.2)}.mat-mdc-slider.mat-accent{--mdc-slider-handle-color:#ff4081;--mdc-slider-focus-handle-color:#ff4081;--mdc-slider-hover-handle-color:#ff4081;--mdc-slider-active-track-color:#ff4081;--mdc-slider-inactive-track-color:#ff4081;--mdc-slider-with-tick-marks-active-container-color:#fff;--mdc-slider-with-tick-marks-inactive-container-color:#ff4081;--mat-mdc-slider-ripple-color: #ff4081;--mat-mdc-slider-hover-ripple-color: rgba(255, 64, 129, 0.05);--mat-mdc-slider-focus-ripple-color: rgba(255, 64, 129, 0.2)}.mat-mdc-slider.mat-warn{--mdc-slider-handle-color:#f44336;--mdc-slider-focus-handle-color:#f44336;--mdc-slider-hover-handle-color:#f44336;--mdc-slider-active-track-color:#f44336;--mdc-slider-inactive-track-color:#f44336;--mdc-slider-with-tick-marks-active-container-color:#fff;--mdc-slider-with-tick-marks-inactive-container-color:#f44336;--mat-mdc-slider-ripple-color: #f44336;--mat-mdc-slider-hover-ripple-color: rgba(244, 67, 54, 0.05);--mat-mdc-slider-focus-ripple-color: rgba(244, 67, 54, 0.2)}.mat-mdc-slider{--mdc-slider-label-label-text-font:Roboto, sans-serif;--mdc-slider-label-label-text-size:14px;--mdc-slider-label-label-text-line-height:22px;--mdc-slider-label-label-text-tracking:0.0071428571em;--mdc-slider-label-label-text-weight:500}.mdc-menu-surface{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);background-color:var(--mdc-theme-surface, #fff);color:var(--mdc-theme-on-surface, #000)}.mdc-list-item__primary-text{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mdc-list-item__secondary-text{color:var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54))}.mdc-list-item__overline-text{color:var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-trailing-icon .mdc-list-item__end{background-color:transparent}.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item__end{color:var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38))}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:0.38}.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled .mdc-list-item__secondary-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled .mdc-list-item__overline-text{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-theme-on-surface, #000)}.mdc-list-item--selected .mdc-list-item__primary-text,.mdc-list-item--activated .mdc-list-item__primary-text{color:var(--mdc-theme-primary, #3f51b5)}.mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-theme-primary, #3f51b5)}.mdc-deprecated-list-group__subheader{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mdc-list-divider::after{border-bottom-color:white}.mdc-list-divider{background-color:rgba(0, 0, 0, 0.12)}.mat-mdc-menu-item[disabled],.mat-mdc-menu-item[disabled] .mat-mdc-menu-submenu-icon,.mat-mdc-menu-item[disabled] .mat-icon-no-color{color:var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-submenu-icon{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-mdc-menu-item:hover:not([disabled]),.mat-mdc-menu-item.cdk-program-focused:not([disabled]),.mat-mdc-menu-item.cdk-keyboard-focused:not([disabled]),.mat-mdc-menu-item-highlighted:not([disabled]){background:rgba(0,0,0,.04)}.mat-mdc-menu-content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-subtitle1-font-size, 16px);line-height:var(--mdc-typography-subtitle1-line-height, 28px);font-weight:var(--mdc-typography-subtitle1-font-weight, 400);letter-spacing:var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);text-decoration:var(--mdc-typography-subtitle1-text-decoration, inherit);text-transform:var(--mdc-typography-subtitle1-text-transform, none);line-height:24px}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mdc-list-item__primary-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body1-font-size, 16px);line-height:var(--mdc-typography-body1-line-height, 24px);font-weight:var(--mdc-typography-body1-font-weight, 400);letter-spacing:var(--mdc-typography-body1-letter-spacing, 0.03125em);text-decoration:var(--mdc-typography-body1-text-decoration, inherit);text-transform:var(--mdc-typography-body1-text-transform, none)}.mat-mdc-list-base{--mdc-list-list-item-label-text-color:rgba(0, 0, 0, 0.87);--mdc-list-list-item-supporting-text-color:rgba(0, 0, 0, 0.54);--mdc-list-list-item-leading-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-trailing-supporting-text-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-trailing-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-selected-trailing-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-disabled-label-text-color:black;--mdc-list-list-item-disabled-leading-icon-color:black;--mdc-list-list-item-disabled-trailing-icon-color:black;--mdc-list-list-item-hover-label-text-color:rgba(0, 0, 0, 0.87);--mdc-list-list-item-hover-leading-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-hover-trailing-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-focus-label-text-color:rgba(0, 0, 0, 0.87);--mdc-list-list-item-hover-state-layer-color:black;--mdc-list-list-item-hover-state-layer-opacity:0.04;--mdc-list-list-item-focus-state-layer-color:black;--mdc-list-list-item-focus-state-layer-opacity:0.12}.mat-mdc-list-option .mdc-list-item__start,.mat-mdc-list-option .mdc-list-item__end{--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#3f51b5;--mdc-checkbox-selected-hover-icon-color:#3f51b5;--mdc-checkbox-selected-icon-color:#3f51b5;--mdc-checkbox-selected-pressed-icon-color:#3f51b5;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54)}.mat-mdc-list-option .mdc-list-item__start,.mat-mdc-list-option .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-focus-icon-color:#212121;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#3f51b5;--mdc-radio-selected-hover-icon-color:#3f51b5;--mdc-radio-selected-icon-color:#3f51b5;--mdc-radio-selected-pressed-icon-color:#3f51b5;--mat-mdc-radio-ripple-color: #000;--mat-mdc-radio-checked-ripple-color: #3f51b5}.mat-mdc-list-option .mdc-list-item__start .mdc-radio--disabled+label,.mat-mdc-list-option .mdc-list-item__end .mdc-radio--disabled+label{color:rgba(0,0,0,.38)}.mat-mdc-list-option.mat-accent .mdc-list-item__start,.mat-mdc-list-option.mat-accent .mdc-list-item__end{--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#ff4081;--mdc-checkbox-selected-hover-icon-color:#ff4081;--mdc-checkbox-selected-icon-color:#ff4081;--mdc-checkbox-selected-pressed-icon-color:#ff4081;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54)}.mat-mdc-list-option.mat-accent .mdc-list-item__start,.mat-mdc-list-option.mat-accent .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-focus-icon-color:#212121;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#ff4081;--mdc-radio-selected-hover-icon-color:#ff4081;--mdc-radio-selected-icon-color:#ff4081;--mdc-radio-selected-pressed-icon-color:#ff4081;--mat-mdc-radio-ripple-color: #000;--mat-mdc-radio-checked-ripple-color: #ff4081}.mat-mdc-list-option.mat-accent .mdc-list-item__start .mdc-radio--disabled+label,.mat-mdc-list-option.mat-accent .mdc-list-item__end .mdc-radio--disabled+label{color:rgba(0,0,0,.38)}.mat-mdc-list-option.mat-warn .mdc-list-item__start,.mat-mdc-list-option.mat-warn .mdc-list-item__end{--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#f44336;--mdc-checkbox-selected-hover-icon-color:#f44336;--mdc-checkbox-selected-icon-color:#f44336;--mdc-checkbox-selected-pressed-icon-color:#f44336;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54)}.mat-mdc-list-option.mat-warn .mdc-list-item__start,.mat-mdc-list-option.mat-warn .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-focus-icon-color:#212121;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#f44336;--mdc-radio-selected-hover-icon-color:#f44336;--mdc-radio-selected-icon-color:#f44336;--mdc-radio-selected-pressed-icon-color:#f44336;--mat-mdc-radio-ripple-color: #000;--mat-mdc-radio-checked-ripple-color: #f44336}.mat-mdc-list-option.mat-warn .mdc-list-item__start .mdc-radio--disabled+label,.mat-mdc-list-option.mat-warn .mdc-list-item__end .mdc-radio--disabled+label{color:rgba(0,0,0,.38)}.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text{color:#3f51b5}.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:#3f51b5}.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mat-mdc-list-base{--mdc-list-list-item-one-line-container-height:48px;--mdc-list-list-item-two-line-container-height:64px;--mdc-list-list-item-three-line-container-height:88px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mat-mdc-list-base{--mdc-list-list-item-label-text-font:Roboto, sans-serif;--mdc-list-list-item-label-text-line-height:24px;--mdc-list-list-item-label-text-size:16px;--mdc-list-list-item-label-text-tracking:0.03125em;--mdc-list-list-item-label-text-weight:400;--mdc-list-list-item-supporting-text-font:Roboto, sans-serif;--mdc-list-list-item-supporting-text-line-height:20px;--mdc-list-list-item-supporting-text-size:14px;--mdc-list-list-item-supporting-text-tracking:0.0178571429em;--mdc-list-list-item-supporting-text-weight:400;--mdc-list-list-item-trailing-supporting-text-font:Roboto, sans-serif;--mdc-list-list-item-trailing-supporting-text-line-height:20px;--mdc-list-list-item-trailing-supporting-text-size:12px;--mdc-list-list-item-trailing-supporting-text-tracking:0.0333333333em;--mdc-list-list-item-trailing-supporting-text-weight:400}.mdc-list-group__subheader{font-size:16px;font-weight:400;line-height:28px;font-family:Roboto, sans-serif;letter-spacing:.009375em}.mat-mdc-paginator{background:#fff;color:rgba(0,0,0,.87)}.mat-mdc-paginator-icon{fill:rgba(0,0,0,.54)}.mat-mdc-paginator-decrement,.mat-mdc-paginator-increment{border-top:2px solid rgba(0,0,0,.54);border-right:2px solid rgba(0,0,0,.54)}.mat-mdc-paginator-first,.mat-mdc-paginator-last{border-top:2px solid rgba(0,0,0,.54)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-decrement,.mat-mdc-icon-button[disabled] .mat-mdc-paginator-increment,.mat-mdc-icon-button[disabled] .mat-mdc-paginator-first,.mat-mdc-icon-button[disabled] .mat-mdc-paginator-last{border-color:rgba(0,0,0,.12)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:rgba(0,0,0,.12)}.mat-mdc-paginator .mat-mdc-form-field-infix{min-height:40px}.mat-mdc-paginator .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:20px}.mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY( -26.75px) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding-top:8px;padding-bottom:8px}.mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix{padding-top:8px;padding-bottom:8px}.mat-mdc-paginator .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix{padding-top:8px;padding-bottom:8px}.mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label{display:none}.mat-mdc-paginator-container{min-height:56px}.mat-mdc-paginator{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-caption-font-size, 12px);line-height:var(--mdc-typography-caption-line-height, 20px);font-weight:var(--mdc-typography-caption-font-weight, 400);letter-spacing:var(--mdc-typography-caption-letter-spacing, 0.0333333333em);text-decoration:var(--mdc-typography-caption-text-decoration, inherit);text-transform:var(--mdc-typography-caption-text-transform, none)}.mat-mdc-paginator .mat-mdc-select-value{font-size:12px}.mat-mdc-tab,.mat-mdc-tab-link{background-color:rgba(0,0,0,0)}.mat-mdc-tab .mdc-tab__text-label,.mat-mdc-tab-link .mdc-tab__text-label{color:rgba(0, 0, 0, 0.6)}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element,.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:rgba(0,0,0,.38)}.mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label,.mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label{color:#3f51b5}.mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline,.mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, #3f51b5)}.mdc-tab__ripple::before,.mat-mdc-tab .mat-ripple-element,.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-link .mat-ripple-element{background-color:#3f51b5}.mat-mdc-tab-group.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label,.mat-mdc-tab-group.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label,.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label,.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label{color:#ff4081}.mat-mdc-tab-group.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline,.mat-mdc-tab-group.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline,.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline,.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, #ff4081)}.mat-mdc-tab-group.mat-accent .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-accent .mat-mdc-tab .mat-ripple-element,.mat-mdc-tab-group.mat-accent .mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-accent .mat-mdc-tab-link .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-accent .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link .mat-ripple-element{background-color:#ff4081}.mat-mdc-tab-group.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label,.mat-mdc-tab-group.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label,.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label,.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label{color:#f44336}.mat-mdc-tab-group.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline,.mat-mdc-tab-group.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline,.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline,.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color, #f44336)}.mat-mdc-tab-group.mat-warn .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-warn .mat-mdc-tab .mat-ripple-element,.mat-mdc-tab-group.mat-warn .mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-warn .mat-mdc-tab-link .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-warn .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link .mat-ripple-element{background-color:#f44336}.mat-mdc-tab-group.mat-background-primary,.mat-mdc-tab-nav-bar.mat-background-primary{--mat-mdc-tab-header-with-background-background-color: #3f51b5;--mat-mdc-tab-header-with-background-foreground-color: #fff}.mat-mdc-tab-group.mat-background-accent,.mat-mdc-tab-nav-bar.mat-background-accent{--mat-mdc-tab-header-with-background-background-color: #ff4081;--mat-mdc-tab-header-with-background-foreground-color: #fff}.mat-mdc-tab-group.mat-background-warn,.mat-mdc-tab-nav-bar.mat-background-warn{--mat-mdc-tab-header-with-background-background-color: #f44336;--mat-mdc-tab-header-with-background-foreground-color: #fff}.mat-mdc-tab-header-pagination-chevron{border-color:var(--mdc-theme-on-surface, #000)}.mat-mdc-tab-header .mdc-tab{height:48px}.mdc-tab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-button-font-size, 14px);line-height:var(--mdc-typography-button-line-height, 36px);font-weight:var(--mdc-typography-button-font-weight, 500);letter-spacing:var(--mdc-typography-button-letter-spacing, 0.0892857143em);text-decoration:var(--mdc-typography-button-text-decoration, none);text-transform:var(--mdc-typography-button-text-transform, none)}.mat-mdc-checkbox .mdc-form-field{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-mdc-checkbox .mat-ripple-element{background-color:rgba(0,0,0,.1)}.mat-mdc-checkbox .mdc-checkbox__ripple{background:#000}.mat-mdc-checkbox.mat-primary{--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#3f51b5;--mdc-checkbox-selected-hover-icon-color:#3f51b5;--mdc-checkbox-selected-icon-color:#3f51b5;--mdc-checkbox-selected-pressed-icon-color:#3f51b5;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54)}.mat-mdc-checkbox.mat-primary .mdc-checkbox--selected~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:rgba(63,81,181,.1)}.mat-mdc-checkbox.mat-primary .mdc-checkbox--selected~.mdc-checkbox__ripple{background:#3f51b5}.mat-mdc-checkbox.mat-accent{--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#ff4081;--mdc-checkbox-selected-hover-icon-color:#ff4081;--mdc-checkbox-selected-icon-color:#ff4081;--mdc-checkbox-selected-pressed-icon-color:#ff4081;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54)}.mat-mdc-checkbox.mat-accent .mdc-checkbox--selected~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:rgba(255,64,129,.1)}.mat-mdc-checkbox.mat-accent .mdc-checkbox--selected~.mdc-checkbox__ripple{background:#ff4081}.mat-mdc-checkbox.mat-warn{--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#f44336;--mdc-checkbox-selected-hover-icon-color:#f44336;--mdc-checkbox-selected-icon-color:#f44336;--mdc-checkbox-selected-pressed-icon-color:#f44336;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54)}.mat-mdc-checkbox.mat-warn .mdc-checkbox--selected~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:rgba(244,67,54,.1)}.mat-mdc-checkbox.mat-warn .mdc-checkbox--selected~.mdc-checkbox__ripple{background:#f44336}.mat-mdc-checkbox-disabled label{color:rgba(0,0,0,.38)}.mat-mdc-checkbox .mdc-checkbox{padding:calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);margin:calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);left:calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2)}.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control{top:calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);right:calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);left:calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);width:var(--mdc-checkbox-touch-target-size, 40px);height:var(--mdc-checkbox-touch-target-size, 40px)}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}.mdc-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body2-font-size, 14px);line-height:var(--mdc-typography-body2-line-height, 20px);font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:var(--mdc-typography-body2-text-transform, none)}.mat-mdc-button.mat-unthemed{--mdc-text-button-label-text-color:#000}.mat-mdc-button.mat-primary{--mdc-text-button-label-text-color:#3f51b5}.mat-mdc-button.mat-accent{--mdc-text-button-label-text-color:#ff4081}.mat-mdc-button.mat-warn{--mdc-text-button-label-text-color:#f44336}.mat-mdc-button[disabled][disabled]{--mdc-text-button-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-text-button-label-text-color:rgba(0, 0, 0, 0.38)}.mat-mdc-unelevated-button.mat-unthemed{--mdc-filled-button-container-color:#fff;--mdc-filled-button-label-text-color:#000}.mat-mdc-unelevated-button.mat-primary{--mdc-filled-button-container-color:#3f51b5;--mdc-filled-button-label-text-color:#fff}.mat-mdc-unelevated-button.mat-accent{--mdc-filled-button-container-color:#ff4081;--mdc-filled-button-label-text-color:#fff}.mat-mdc-unelevated-button.mat-warn{--mdc-filled-button-container-color:#f44336;--mdc-filled-button-label-text-color:#fff}.mat-mdc-unelevated-button[disabled][disabled]{--mdc-filled-button-disabled-container-color:rgba(0, 0, 0, 0.12);--mdc-filled-button-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-filled-button-container-color:rgba(0, 0, 0, 0.12);--mdc-filled-button-label-text-color:rgba(0, 0, 0, 0.38)}.mat-mdc-raised-button.mat-unthemed{--mdc-protected-button-container-color:#fff;--mdc-protected-button-label-text-color:#000}.mat-mdc-raised-button.mat-primary{--mdc-protected-button-container-color:#3f51b5;--mdc-protected-button-label-text-color:#fff}.mat-mdc-raised-button.mat-accent{--mdc-protected-button-container-color:#ff4081;--mdc-protected-button-label-text-color:#fff}.mat-mdc-raised-button.mat-warn{--mdc-protected-button-container-color:#f44336;--mdc-protected-button-label-text-color:#fff}.mat-mdc-raised-button[disabled][disabled]{--mdc-protected-button-disabled-container-color:rgba(0, 0, 0, 0.12);--mdc-protected-button-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-protected-button-container-color:rgba(0, 0, 0, 0.12);--mdc-protected-button-label-text-color:rgba(0, 0, 0, 0.38);--mdc-protected-button-container-elevation:0}.mat-mdc-outlined-button{--mdc-outlined-button-outline-color:rgba(0, 0, 0, 0.12)}.mat-mdc-outlined-button.mat-unthemed{--mdc-outlined-button-label-text-color:#000}.mat-mdc-outlined-button.mat-primary{--mdc-outlined-button-label-text-color:#3f51b5}.mat-mdc-outlined-button.mat-accent{--mdc-outlined-button-label-text-color:#ff4081}.mat-mdc-outlined-button.mat-warn{--mdc-outlined-button-label-text-color:#f44336}.mat-mdc-outlined-button[disabled][disabled]{--mdc-outlined-button-label-text-color:rgba(0, 0, 0, 0.38);--mdc-outlined-button-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-outlined-button-outline-color:rgba(0, 0, 0, 0.12);--mdc-outlined-button-disabled-outline-color:rgba(0, 0, 0, 0.12)}.mat-mdc-button,.mat-mdc-outlined-button{--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:.04}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-button.mat-primary,.mat-mdc-outlined-button.mat-primary{--mat-mdc-button-persistent-ripple-color: #3f51b5;--mat-mdc-button-ripple-color: rgba(63, 81, 181, 0.1)}.mat-mdc-button.mat-accent,.mat-mdc-outlined-button.mat-accent{--mat-mdc-button-persistent-ripple-color: #ff4081;--mat-mdc-button-ripple-color: rgba(255, 64, 129, 0.1)}.mat-mdc-button.mat-warn,.mat-mdc-outlined-button.mat-warn{--mat-mdc-button-persistent-ripple-color: #f44336;--mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1)}.mat-mdc-raised-button,.mat-mdc-unelevated-button{--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:.04}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-raised-button.mat-primary,.mat-mdc-unelevated-button.mat-primary{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-raised-button.mat-accent,.mat-mdc-unelevated-button.mat-accent{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-raised-button.mat-warn,.mat-mdc-unelevated-button.mat-warn{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-button.mat-mdc-button-base,.mat-mdc-raised-button.mat-mdc-button-base,.mat-mdc-unelevated-button.mat-mdc-button-base,.mat-mdc-outlined-button.mat-mdc-button-base{height:36px}.mdc-button{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-button-font-size, 14px);line-height:var(--mdc-typography-button-line-height, 36px);font-weight:var(--mdc-typography-button-font-weight, 500);letter-spacing:var(--mdc-typography-button-letter-spacing, 0.0892857143em);text-decoration:var(--mdc-typography-button-text-decoration, none);text-transform:var(--mdc-typography-button-text-transform, none)}.mat-mdc-icon-button{--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:.04}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-icon-button.mat-primary{--mat-mdc-button-persistent-ripple-color: #3f51b5;--mat-mdc-button-ripple-color: rgba(63, 81, 181, 0.1)}.mat-mdc-icon-button.mat-accent{--mat-mdc-button-persistent-ripple-color: #ff4081;--mat-mdc-button-ripple-color: rgba(255, 64, 129, 0.1)}.mat-mdc-icon-button.mat-warn{--mat-mdc-button-persistent-ripple-color: #f44336;--mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1)}.mat-mdc-icon-button.mat-primary{--mdc-icon-button-icon-color:#3f51b5}.mat-mdc-icon-button.mat-accent{--mdc-icon-button-icon-color:#ff4081}.mat-mdc-icon-button.mat-warn{--mdc-icon-button-icon-color:#f44336}.mat-mdc-icon-button[disabled][disabled]{--mdc-icon-button-icon-color:rgba(0, 0, 0, 0.38);--mdc-icon-button-disabled-icon-color:rgba(0, 0, 0, 0.38)}.mat-mdc-icon-button.mat-mdc-button-base{width:48px;height:48px;padding:12px}.mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__focus-ring{max-height:48px;max-width:48px}.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:4px;margin-bottom:4px;margin-right:4px;margin-left:4px}.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}.mat-mdc-fab,.mat-mdc-mini-fab{--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:.04}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-fab.mat-primary,.mat-mdc-mini-fab.mat-primary{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-fab.mat-accent,.mat-mdc-mini-fab.mat-accent{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-fab.mat-warn,.mat-mdc-mini-fab.mat-warn{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-fab.mat-unthemed,.mat-mdc-mini-fab.mat-unthemed{--mdc-fab-container-color:#fff;--mdc-fab-icon-color:#000;--mat-mdc-fab-color: #000}.mat-mdc-fab.mat-primary,.mat-mdc-mini-fab.mat-primary{--mdc-fab-container-color:#3f51b5;--mdc-fab-icon-color:#fff;--mat-mdc-fab-color: #fff}.mat-mdc-fab.mat-accent,.mat-mdc-mini-fab.mat-accent{--mdc-fab-container-color:#ff4081;--mdc-fab-icon-color:#fff;--mat-mdc-fab-color: #fff}.mat-mdc-fab.mat-warn,.mat-mdc-mini-fab.mat-warn{--mdc-fab-container-color:#f44336;--mdc-fab-icon-color:#fff;--mat-mdc-fab-color: #fff}.mat-mdc-fab[disabled][disabled],.mat-mdc-mini-fab[disabled][disabled]{--mdc-fab-container-color:rgba(0, 0, 0, 0.12);--mdc-fab-icon-color:rgba(0, 0, 0, 0.38);--mat-mdc-fab-color: rgba(0, 0, 0, 0.38)}.mdc-fab--extended{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-button-font-size, 14px);line-height:var(--mdc-typography-button-line-height, 36px);font-weight:var(--mdc-typography-button-font-weight, 500);letter-spacing:var(--mdc-typography-button-letter-spacing, 0.0892857143em);text-decoration:var(--mdc-typography-button-text-decoration, none);text-transform:var(--mdc-typography-button-text-transform, none)}.mat-mdc-snack-bar-container{--mat-mdc-snack-bar-button-color: #ff4081;--mdc-snackbar-container-color:#333333;--mdc-snackbar-supporting-text-color:rgba(255, 255, 255, 0.87)}.mat-mdc-snack-bar-container{--mdc-snackbar-supporting-text-font:Roboto, sans-serif;--mdc-snackbar-supporting-text-line-height:20px;--mdc-snackbar-supporting-text-size:14px;--mdc-snackbar-supporting-text-weight:400}.mdc-data-table{background-color:var(--mdc-theme-surface, #fff);border-color:rgba(0, 0, 0, 0.12)}.mdc-data-table__row{background-color:inherit}.mdc-data-table__header-cell{background-color:var(--mdc-theme-surface, #fff)}.mdc-data-table__row--selected{background-color:rgba(63, 81, 181, 0.04)}.mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__leading,.mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__notch,.mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__trailing{border-color:rgba(0, 0, 0, 0.12)}.mdc-data-table__cell,.mdc-data-table__header-cell{border-bottom-color:rgba(0, 0, 0, 0.12)}.mdc-data-table__pagination{border-top-color:rgba(0, 0, 0, 0.12)}.mdc-data-table__row:not(.mdc-data-table__row--selected):hover{background-color:rgba(0, 0, 0, 0.04)}.mdc-data-table__header-cell{color:rgba(0, 0, 0, 0.87)}.mdc-data-table__pagination-total,.mdc-data-table__pagination-rows-per-page-label,.mdc-data-table__cell{color:rgba(0, 0, 0, 0.87)}.mat-mdc-table{background:#fff}.mat-mdc-table .mdc-data-table__row{height:52px}.mat-mdc-table .mdc-data-table__pagination{min-height:52px}.mat-mdc-table .mdc-data-table__header-row{height:56px}.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body2-font-size, 14px);line-height:var(--mdc-typography-body2-line-height, 20px);font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:var(--mdc-typography-body2-text-transform, none)}.mdc-data-table__cell{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body2-font-size, 14px);line-height:var(--mdc-typography-body2-line-height, 20px);font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:var(--mdc-typography-body2-text-transform, none)}.mdc-data-table__header-cell{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-subtitle2-font-size, 14px);line-height:var(--mdc-typography-subtitle2-line-height, 22px);font-weight:var(--mdc-typography-subtitle2-font-weight, 500);letter-spacing:var(--mdc-typography-subtitle2-letter-spacing, 0.0071428571em);text-decoration:var(--mdc-typography-subtitle2-text-decoration, inherit);text-transform:var(--mdc-typography-subtitle2-text-transform, none)}.mat-mdc-progress-spinner{--mdc-circular-progress-active-indicator-color:#3f51b5}.mat-mdc-progress-spinner.mat-accent{--mdc-circular-progress-active-indicator-color:#ff4081}.mat-mdc-progress-spinner.mat-warn{--mdc-circular-progress-active-indicator-color:#f44336}.mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-hidden .mat-badge-content{display:none}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}.mat-badge-content{color:#fff;background:#3f51b5}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-accent .mat-badge-content{background:#ff4081;color:#fff}.mat-badge-warn .mat-badge-content{color:#fff;background:#f44336}.mat-badge-disabled .mat-badge-content{background:#b9b9b9;color:rgba(0,0,0,.38)}.mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto, sans-serif}.mat-badge-small .mat-badge-content{font-size:9px}.mat-badge-large .mat-badge-content{font-size:24px}.mat-bottom-sheet-container{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);background:#fff;color:rgba(0,0,0,.87)}.mat-bottom-sheet-container{font-size:14px;font-weight:400;line-height:20px;font-family:Roboto, sans-serif;letter-spacing:.0178571429em}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}.mat-button-toggle{color:rgba(0,0,0,.38)}.mat-button-toggle .mat-button-toggle-focus-overlay{background-color:rgba(0,0,0,.12)}.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87);background:#fff}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:#000}.mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:solid 1px #e0e0e0}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:solid 1px #e0e0e0}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:none;border-top:solid 1px #e0e0e0}.mat-button-toggle-checked{background-color:#e0e0e0;color:rgba(0,0,0,.54)}.mat-button-toggle-checked.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87)}.mat-button-toggle-disabled{color:rgba(0,0,0,.26);background-color:#eee}.mat-button-toggle-disabled.mat-button-toggle-appearance-standard{background:#fff}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border:solid 1px #e0e0e0}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px}.mat-button-toggle{font-family:Roboto, sans-serif}.mat-calendar-arrow{fill:rgba(0,0,0,.54)}.mat-datepicker-toggle,.mat-datepicker-content .mat-calendar-next-button,.mat-datepicker-content .mat-calendar-previous-button{color:rgba(0,0,0,.54)}.mat-calendar-table-header-divider::after{background:rgba(0,0,0,.12)}.mat-calendar-table-header,.mat-calendar-body-label{color:rgba(0,0,0,.54)}.mat-calendar-body-cell-content,.mat-date-range-input-separator{color:rgba(0,0,0,.87);border-color:rgba(0,0,0,0)}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:rgba(0,0,0,.38)}.mat-form-field-disabled .mat-date-range-input-separator{color:rgba(0,0,0,.38)}.mat-calendar-body-in-preview{color:rgba(0,0,0,.24)}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:rgba(0,0,0,.38)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:rgba(0,0,0,.18)}.mat-calendar-body-in-range::before{background:rgba(63,81,181,.2)}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-calendar-body-selected{background-color:#3f51b5;color:#fff}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(63,81,181,.4)}.mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(63,81,181,.3)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(63,81,181,.3)}}.mat-datepicker-content{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);background-color:#fff;color:rgba(0,0,0,.87)}.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before{background:rgba(255,64,129,.2)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-accent .mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-datepicker-content.mat-accent .mat-calendar-body-selected{background-color:#ff4081;color:#fff}.mat-datepicker-content.mat-accent .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(255,64,129,.4)}.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(255,64,129,.3)}@media(hover: hover){.mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(255,64,129,.3)}}.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before{background:rgba(244,67,54,.2)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-warn .mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-datepicker-content.mat-warn .mat-calendar-body-selected{background-color:#f44336;color:#fff}.mat-datepicker-content.mat-warn .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(244,67,54,.4)}.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(244,67,54,.3)}@media(hover: hover){.mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(244,67,54,.3)}}.mat-datepicker-content-touch{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12)}.mat-datepicker-toggle-active{color:#3f51b5}.mat-datepicker-toggle-active.mat-accent{color:#ff4081}.mat-datepicker-toggle-active.mat-warn{color:#f44336}.mat-date-range-input-inner[disabled]{color:rgba(0,0,0,.38)}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base{width:40px;height:40px;padding:8px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__ripple{width:40px;height:40px;margin-top:0px;margin-bottom:0px;margin-right:0px;margin-left:0px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring{max-height:40px;max-width:40px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__touch{position:absolute;top:50%;height:40px;left:50%;width:40px;transform:translate(-50%, -50%)}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target{display:none}.mat-calendar{font-family:Roboto, sans-serif}.mat-calendar-body{font-size:13px}.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}.mat-calendar-table-header th{font-size:11px;font-weight:400}.mat-divider{border-top-color:rgba(0,0,0,.12)}.mat-divider-vertical{border-right-color:rgba(0,0,0,.12)}.mat-expansion-panel{background:#fff;color:rgba(0,0,0,.87)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-action-row{border-top-color:rgba(0,0,0,.12)}.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]){background:rgba(0,0,0,.04)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background:#fff}}.mat-expansion-panel-header-title{color:rgba(0,0,0,.87)}.mat-expansion-panel-header-description,.mat-expansion-indicator::after{color:rgba(0,0,0,.54)}.mat-expansion-panel-header[aria-disabled=true]{color:rgba(0,0,0,.26)}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header{height:48px}.mat-expansion-panel-header.mat-expanded{height:64px}.mat-expansion-panel-header{font-family:Roboto, sans-serif;font-size:14px;font-weight:500}.mat-expansion-panel-content{font-size:14px;font-weight:400;line-height:20px;font-family:Roboto, sans-serif;letter-spacing:.0178571429em}.mat-grid-tile-header,.mat-grid-tile-footer{font-size:14px}.mat-grid-tile-header .mat-line,.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2),.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:12px}.mat-icon.mat-primary{color:#3f51b5}.mat-icon.mat-accent{color:#ff4081}.mat-icon.mat-warn{color:#f44336}.mat-drawer-container{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-drawer{background-color:#fff;color:rgba(0,0,0,.87)}.mat-drawer.mat-drawer-push{background-color:#fff}.mat-drawer:not(.mat-drawer-side){box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-drawer-side{border-right:solid 1px rgba(0,0,0,.12)}.mat-drawer-side.mat-drawer-end{border-left:solid 1px rgba(0,0,0,.12);border-right:none}[dir=rtl] .mat-drawer-side{border-left:solid 1px rgba(0,0,0,.12);border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}.mat-drawer-backdrop.mat-drawer-shown{background-color:rgba(0,0,0,.6)}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused,.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:rgba(0,0,0,.04)}.mat-step-header:hover[aria-disabled=true]{cursor:default}@media(hover: none){.mat-step-header:hover{background:none}}.mat-step-header .mat-step-label,.mat-step-header .mat-step-optional{color:rgba(0,0,0,.54)}.mat-step-header .mat-step-icon{background-color:rgba(0,0,0,.54);color:#fff}.mat-step-header .mat-step-icon-selected,.mat-step-header .mat-step-icon-state-done,.mat-step-header .mat-step-icon-state-edit{background-color:#3f51b5;color:#fff}.mat-step-header.mat-accent .mat-step-icon{color:#fff}.mat-step-header.mat-accent .mat-step-icon-selected,.mat-step-header.mat-accent .mat-step-icon-state-done,.mat-step-header.mat-accent .mat-step-icon-state-edit{background-color:#ff4081;color:#fff}.mat-step-header.mat-warn .mat-step-icon{color:#fff}.mat-step-header.mat-warn .mat-step-icon-selected,.mat-step-header.mat-warn .mat-step-icon-state-done,.mat-step-header.mat-warn .mat-step-icon-state-edit{background-color:#f44336;color:#fff}.mat-step-header .mat-step-icon-state-error{background-color:rgba(0,0,0,0);color:#f44336}.mat-step-header .mat-step-label.mat-step-label-active{color:rgba(0,0,0,.87)}.mat-step-header .mat-step-label.mat-step-label-error{color:#f44336}.mat-stepper-horizontal,.mat-stepper-vertical{background-color:#fff}.mat-stepper-vertical-line::before{border-left-color:rgba(0,0,0,.12)}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after,.mat-stepper-horizontal-line{border-top-color:rgba(0,0,0,.12)}.mat-horizontal-stepper-header{height:72px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,.mat-vertical-stepper-header{padding:24px 24px}.mat-stepper-vertical-line::before{top:-16px;bottom:-16px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before{top:36px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{top:36px}.mat-stepper-vertical,.mat-stepper-horizontal{font-family:Roboto, sans-serif}.mat-step-label{font-size:14px;font-weight:400}.mat-step-sub-label-error{font-weight:normal}.mat-step-label-error{font-size:16px}.mat-step-label-selected{font-size:16px;font-weight:400}.mat-sort-header-arrow{color:#757575}.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}.mat-toolbar.mat-primary{background:#3f51b5;color:#fff}.mat-toolbar.mat-accent{background:#ff4081;color:#fff}.mat-toolbar.mat-warn{background:#f44336;color:#fff}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-size:20px;font-weight:500;line-height:32px;font-family:Roboto, sans-serif;letter-spacing:.0125em;margin:0}.mat-tree{background:#fff}.mat-tree-node,.mat-nested-tree-node{color:rgba(0,0,0,.87)}.mat-tree-node{min-height:48px}.mat-tree{font-family:Roboto, sans-serif}.mat-tree-node,.mat-nested-tree-node{font-weight:400;font-size:14px}.mat-h1,.mat-headline-5,.mat-typography .mat-h1,.mat-typography .mat-headline-5,.mat-typography h1{font-size:24px;font-weight:400;line-height:32px;font-family:Roboto, sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h2,.mat-headline-6,.mat-typography .mat-h2,.mat-typography .mat-headline-6,.mat-typography h2{font-size:20px;font-weight:500;line-height:32px;font-family:Roboto, sans-serif;letter-spacing:.0125em;margin:0 0 16px}.mat-h3,.mat-subtitle-1,.mat-typography .mat-h3,.mat-typography .mat-subtitle-1,.mat-typography h3{font-size:16px;font-weight:400;line-height:28px;font-family:Roboto, sans-serif;letter-spacing:.009375em;margin:0 0 16px}.mat-h4,.mat-body-1,.mat-typography .mat-h4,.mat-typography .mat-body-1,.mat-typography h4{font-size:16px;font-weight:400;line-height:24px;font-family:Roboto, sans-serif;letter-spacing:.03125em;margin:0 0 16px}.mat-h5,.mat-typography .mat-h5,.mat-typography h5{font:400 calc(14px * 0.83)/20px Roboto, sans-serif;margin:0 0 12px}.mat-h6,.mat-typography .mat-h6,.mat-typography h6{font:400 calc(14px * 0.67)/20px Roboto, sans-serif;margin:0 0 12px}.mat-body-strong,.mat-subtitle-2,.mat-typography .mat-body-strong,.mat-typography .mat-subtitle-2{font-size:14px;font-weight:500;line-height:22px;font-family:Roboto, sans-serif;letter-spacing:.0071428571em}.mat-body,.mat-body-2,.mat-typography .mat-body,.mat-typography .mat-body-2,.mat-typography{font-size:14px;font-weight:400;line-height:20px;font-family:Roboto, sans-serif;letter-spacing:.0178571429em}.mat-body p,.mat-body-2 p,.mat-typography .mat-body p,.mat-typography .mat-body-2 p,.mat-typography p{margin:0 0 12px}.mat-small,.mat-caption,.mat-typography .mat-small,.mat-typography .mat-caption{font-size:12px;font-weight:400;line-height:20px;font-family:Roboto, sans-serif;letter-spacing:.0333333333em}.mat-headline-1,.mat-typography .mat-headline-1{font-size:96px;font-weight:300;line-height:96px;font-family:Roboto, sans-serif;letter-spacing:-0.015625em;margin:0 0 56px}.mat-headline-2,.mat-typography .mat-headline-2{font-size:60px;font-weight:300;line-height:60px;font-family:Roboto, sans-serif;letter-spacing:-.0083333333em;margin:0 0 64px}.mat-headline-3,.mat-typography .mat-headline-3{font-size:48px;font-weight:400;line-height:50px;font-family:Roboto, sans-serif;letter-spacing:normal;margin:0 0 64px}.mat-headline-4,.mat-typography .mat-headline-4{font-size:34px;font-weight:400;line-height:40px;font-family:Roboto, sans-serif;letter-spacing:.0073529412em;margin:0 0 64px}","/* You can add global styles to this file, and also import other style files */\r\n@import \"variable.scss\";\r\n@import '@angular/material/prebuilt-themes/indigo-pink.css';\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\r\nhtml, body { height: 100%; }\r\nbody { margin: 0; font-family: 'Montserrat', sans-serif; }\r\n.mat-table, .mat-list-item, .mat-form-field, .mat-body, .mat-body-1, .mat-typography .mat-body, .mat-typography .mat-body-1, .mat-typography, .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button, .mat-flat-button, .mat-fab, .mat-mini-fab, .mat-menu-item, .mat-h2, .mat-title, .mat-typography .mat-h2, .mat-typography .mat-title, .mat-typography h2, .mat-h3, .mat-subheading-2, .mat-typography .mat-h3, .mat-typography .mat-subheading-2, .mat-typography h3, .mat-h4, .mat-subheading-1, .mat-typography .mat-h4, .mat-typography .mat-subheading-1, .mat-typography h4, .mat-h1, .mat-headline, .mat-typography .mat-h1, .mat-typography .mat-headline, .mat-typography h1{\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n  button .backpage{\r\n    padding-left: 10px !important;\r\n    padding-right: 10px !important;\r\n    margin-left: 10px;\r\n  }\r\n  button.backpage img {\r\n    margin-right: 5px !important;\r\n  }\r\n.tox-notifications-container {\r\n    display: none !important;\r\n}\r\n\r\nspan.tox-statusbar__branding {\r\n    display: none !important;\r\n}\r\nbutton.backpage {\r\n  padding-left: 10px !important;\r\n  padding-right: 10px !important;\r\n  margin-left: 10px;\r\n}\r\n.angular-editor-toolbar input[type=\"color\"] {\r\n  display: inline-grid !important;\r\n  float: left;\r\n  position: absolute;\r\n  top: 8px;\r\n  width: 31px;\r\n  opacity: 0;\r\n}\r\n.mat-slide-toggle-persistent-ripple {\r\n  left: 0 !important;\r\n}\r\n.simi-editor mat-label, .upload-img mat-label {\r\n  font-size: 10px;\r\n  color: rgba(0, 0, 0, 0.6);\r\n}\r\n.upload_centers-main{\r\n  min-height: 250px;\r\n  tr.mat-header-row {\r\n    display: none;\r\n  }\r\n  .mat-paginator-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-top: solid 1px rgba(0, 0, 0, 0.1);\r\n    padding-top: 10px;\r\n  }\r\n  .upload-center-container-box {\r\n    display: block !important;\r\n  }\r\n  .mat-elevation-z8{\r\n    box-shadow: inherit;\r\n  }\r\n  tr.mat-row {\r\n    height: auto;\r\n    display: inline-block;\r\n    width: 20%;\r\n    text-align: left;\r\n    margin-bottom: 15px;\r\n    vertical-align: initial;\r\n    &:last-child{\r\n      margin-bottom: 0px;\r\n    }\r\n  }\r\n  .list-footer {\r\n    display: block;\r\n  }\r\n}\r\n.row {\r\n  margin-left: -15px;\r\n  margin-right: -15px;\r\n  display: flex;\r\n  flex-flow: wrap;\r\n}\r\n#tinymce {\r\n  font-family: \"Montserrat\", sans-serif !important;\r\n}\r\n.mce-content-body{\r\n  font-family: \"Montserrat\", sans-serif !important;\r\n}\r\n.col-xl, .col-xl-auto, .col-xl-12, .col-xl-11, .col-xl-10, .col-xl-9, .col-xl-8, .col-xl-7, .col-xl-6, .col-xl-5, .col-xl-4, .col-xl-3, .col-xl-2, .col-xl-1, .col-lg, .col-lg-auto, .col-lg-12, .col-lg-11, .col-lg-10, .col-lg-9, .col-lg-8, .col-lg-7, .col-lg-6, .col-lg-5, .col-lg-4, .col-lg-3, .col-lg-2, .col-lg-1, .col-md, .col-md-auto, .col-md-12, .col-md-11, .col-md-10, .col-md-9, .col-md-8, .col-md-7, .col-md-6, .col-md-5, .col-md-4, .col-md-3, .col-md-2, .col-md-1, .col-sm, .col-sm-auto, .col-sm-12, .col-sm-11, .col-sm-10, .col-sm-9, .col-sm-8, .col-sm-7, .col-sm-6, .col-sm-5, .col-sm-4, .col-sm-3, .col-sm-2, .col-sm-1, .col, .col-auto, .col-12, .col-11, .col-10, .col-9, .col-8, .col-7, .col-6, .col-5, .col-4, .col-3, .col-2, .col-1 {\r\n  position: relative;\r\n  width: 100%;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n}\r\n.pl-0{\r\n  padding-left: 0;\r\n}\r\n.pr-0{\r\n  padding-right: 0;\r\n}\r\n.pt-0{\r\n  padding-top: 0;\r\n}\r\n.pb-0{\r\n  padding-bottom: 0;\r\n}\r\n.p-0{\r\n  padding: 0;\r\n}\r\n.w-100{\r\n  width:100%;\r\n}\r\n.m-r-1{\r\n  margin-right: 10px !important;\r\n}\r\n.col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12{\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  box-sizing: border-box;\r\n}\r\n.clearfix{\r\n  &::after {\r\n    display: block;\r\n    clear: both;\r\n    content: \"\";\r\n  }\r\n}\r\n.col-1{flex:0 0 auto;width:8.33333333%}\r\n.col-2{flex:0 0 auto;width:16.66666667%}\r\n.col-3{flex:0 0 auto;width:25%}\r\n.col-4{flex:0 0 auto;width:33.33333333%}\r\n.col-5{flex:0 0 auto;width:41.66666667%}\r\n.col-6{flex:0 0 auto;width:50%}\r\n.col-7{flex:0 0 auto;width:58.33333333%}\r\n.col-8{flex:0 0 auto;width:66.66666667%}\r\n.col-9{flex:0 0 auto;width:75%}\r\n.col-10{flex:0 0 auto;width:83.33333333%}\r\n.col-11{flex:0 0 auto;width:91.66666667%}\r\n.col-12{flex:0 0 auto;width:100%}\r\n\r\n.simi-editor{\r\n  .angular-editor-toolbar .angular-editor-toolbar-set .angular-editor-button:disabled{\r\n    background-color: #fff !important;\r\n  }\r\n  .fa-undo:before {\r\n      content: \"\\e166\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-repeat:before {\r\n      content: \"\\e15a\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px;\r\n  }\r\n  .fa-bold:before {\r\n      content: \"\\e238\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-italic:before{\r\n      content: \"\\e23f\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-underline:before{\r\n      content: \"\\e249\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-strikethrough:before{\r\n      content: \"\\e257\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-subscript:before{\r\n      content: \"\\f111\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-superscript:before{\r\n      content: \"\\f111\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-align-left:before{\r\n      content: \"\\e236\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-align-center:before{\r\n      content: \"\\e234\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-align-right:before{\r\n      content: \"\\e237\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-align-justify:before{\r\n      content: \"\\e235\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-indent:before{\r\n      content: \"\\e23e\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-dedent:before, .fa-outdent:before{\r\n      content: \"\\e23d\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-list-ul:before{\r\n      content: \"\\e241\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-list-ol:before{\r\n      content: \"\\e0ee\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-photo:before, .fa-image:before, .fa-picture-o:before{\r\n      content: \"\\e412\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-video-camera:before{\r\n      content: \"\\e04b\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-link:before {\r\n    content: \"\\e226\" !important;\r\n    font-family: \"Material Icons\" !important;\r\n    font-size: 16px !important;\r\n  }\r\n  .fa-unlink:before{\r\n    content: \"\\e226\" !important;\r\n    font-family: \"Material Icons\" !important;\r\n    font-size: 16px !important;\r\n  }\r\n  .fa-minus:before{\r\n      content: \"\\e15b\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-remove:before, .fa-close:before, .fa-times:before{\r\n      content: \"\\e5cd\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .fa-code:before{\r\n      content: \"\\e4f3\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .color-label.foreground .fa-font:before{\r\n      content: \"\\e40a\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .color-label.background .fa-font:before{\r\n      content: \"\\e23a\" !important;\r\n      font-family: \"Material Icons\" !important;\r\n      font-size: 16px !important;\r\n  }\r\n  .tox:not(.tox-tinymce-inline) .tox-editor-header{\r\n    font: 100 14px/15px Roboto,Arial,sans-serif;\r\n    background-color: #f5f5f5;\r\n    font-size: .8rem;\r\n    padding: 0.2rem;\r\n    border: 1px solid #ddd;\r\n  }\r\n  .tox .tox-menubar{\r\n    background-color: inherit;\r\n  }\r\n  \r\n  .tox-toolbar__primary{\r\n    background-color: #f5f5f5 !important;\r\n  }\r\n  .tox-split-button{\r\n    border: 1px solid #ddd !important;\r\n  }\r\n  button.tox-tbtn {\r\n    border: 1px solid #ddd !important;\r\n  }\r\n  .tox .tox-menubar+.tox-toolbar, .tox .tox-menubar+.tox-toolbar-overlord {\r\n    border-top: 0px !important;\r\n    margin-top: 0px !important;\r\n    padding-bottom: 0px !important;\r\n    padding-top: 0px !important;\r\n  }\r\n  .tox .tox-tbtn{\r\n    background: #fff !important;\r\n    color: #000 !important;\r\n  }\r\n  .angular-editor-toolbar .angular-editor-toolbar-set .background {\r\n      background: #fff !important;\r\n      color: #000 !important;\r\n  }\r\n  .fa-link:before {\r\n    content: \"\\e226\" !important;\r\n    font-family: \"Material Icons\" !important;\r\n    font-size: 16px !important;\r\n    color: #000;\r\n  }\r\n  .select-heading{\r\n    width: 74px !important;\r\n  }\r\n  .select-font{\r\n    width: 74px !important;\r\n  }\r\n  #unlink- {\r\n      display: none !important;\r\n  }\r\n  .ae-font .ae-picker-label {\r\n      line-height: 30px !important;\r\n  }\r\n  .angular-editor-wrapper.show-placeholder {\r\n      margin-bottom: 10px;\r\n  }\r\n  .upload-button{ margin-bottom:20px !important;}\r\n  .angular-editor-textarea {\r\n    min-height: 100% !important;\r\n    max-height: 100% !important;\r\n    min-height: 5rem !important;   \r\n  }\r\n}\r\n.gender-icon{\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  display: block;\r\n}\r\n.toggle-check{\r\n  background:#e7f3f7 !important;\r\n}\r\n.hidden-table-footer {\r\n\tdisplay: none !important;\r\n}\r\n.booking-document{\r\n  margin-bottom: 20px !important;\r\n}\r\n.user-img {\r\n  margin-bottom: 20px;\r\n  img {\r\n    width: 200px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n  }\r\n}\r\n.con-field.dropdown-manages {\r\n  margin-left: auto;\r\n  margin-right: 20px;\r\n}\r\n.con-field.dropdown-manages button {\r\n  padding: 0 !important;\r\n  min-width: 50px !important;\r\n}\r\n.mat-datepicker-input{\r\n  margin-bottom: 4px !important;\r\n}\r\n.LyButton-af::before {\r\n  top: 5px !important;\r\n  left: 5px !important;\r\n}\r\n.upload-button.file-upload {\r\n  float: left;\r\n  margin-bottom: 20px;\r\n}\r\n.sidenav {\r\n  width: 240px;\r\n  height: 100%;\r\n}\r\n.margin-bottom{\r\n  margin-bottom: 20px !important;\r\n}\r\n.example-margin {\r\n  margin-right: 20px;\r\n}\r\n.search-icon {\r\n  font-size: 22px;\r\n  color: #ec008c;\r\n  cursor: pointer;\r\n}\r\n.booking-checkbox {\r\n  margin-bottom: 20px;\r\n}\r\n.booking-radio {\r\n  margin-top: 10px;\r\n}\r\n.booking-details {\r\n  .booking-inner {\r\n    margin-bottom: 10px;\r\n    span {\r\n      display: block;\r\n      font-weight: bold;\r\n      font-size: 12px;\r\n    }\r\n    p {\r\n      margin: 0;\r\n      font-size: 13px;\r\n    }\r\n    a{\r\n      font-size: 12px;\r\n      text-decoration: none;\r\n      color: #ec008c;\r\n    }\r\n  }\r\n}\r\n.load-filter{\r\n  .load-record-icon{\r\n    right: -7px;\r\n  }\r\n  .mat-form-field-infix{\r\n    padding: 11px 22px 11px 0 !important;\r\n  }\r\n}\r\n.mat-form-field-appearance-outline{\r\n  .mat-form-field-label {\r\n    top: 26px;\r\n  }\r\n  .mat-form-field-infix{\r\n    border-top: 0.3em solid transparent !important;\r\n    vertical-align: middle;\r\n\r\n  }\r\n}\r\n.mat-toolbar-row, .mat-toolbar-single-row {\r\n  height: auto !important;\r\n}\r\n.logo {\r\n  width: 100%;\r\n  padding:13px 0 10px 0px;\r\n  a{\r\n    text-decoration: none;\r\n    h2 {\r\n      margin: 0px;\r\n      line-height: 16px;\r\n      font-size: 16px;\r\n    }\r\n    img{\r\n        max-width: 110px;\r\n    }\r\n  }\r\n}\r\n.mat-list-item-content {\r\n  font-size: 13px;\r\n  mat-icon {\r\n    font-size: 18px !important;\r\n    height: 20px;\r\n    width: 20px;\r\n    display: block;\r\n    text-align: center;\r\n    line-height: 20px !important;\r\n    &.right {\r\n      position: absolute;\r\n      right: 15px;\r\n    }\r\n  }\r\n}\r\n.mat-list-item-content{ padding:3px 12px !important;}\r\n\r\n.main-menu{\r\n  padding-top: 0 !important;\r\n  a{\r\n    .mat-list-item-content{\r\n      grid-gap: 10px;\r\n      text-transform:capitalize;\r\n    }\r\n  }\r\n}\r\n.mat-menu-panel{\r\n  box-shadow: 3px 3px 8px rgb(0 0 0 / 6%);\r\n  min-height: auto !important;\r\n}\r\n.mat-menu-content{\r\n  padding: 12px 0px 6px !important;\r\n  .heading {\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    padding: 0px 12px;\r\n    margin-bottom: 6px;\r\n    display: block;\r\n    color: #18272c;\r\n  }\r\n  button.mat-focus-indicator {\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    line-height: 20px;\r\n    height: auto;\r\n    padding: 5px 12px;\r\n    color: #18272c;\r\n  }\r\n  .mat-icon {\r\n    font-size: 16px;\r\n    padding: 0px;\r\n    margin-right: 6px !important;\r\n    height: auto;\r\n    width: auto;\r\n  }\r\n}\r\n.trip-selection{\r\n  .con-field {\r\n    float: none !important;\r\n    .field-item {\r\n      width: 25%;\r\n      .mat-form-field {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n.content {\r\n  padding: 15px;\r\n  .table-header {\r\n    margin-bottom: 15px;\r\n    .brand-title{\r\n      h2 {\r\n        text-transform: capitalize;\r\n        font-size: 18px;\r\n        margin: 0px;\r\n        line-height: 44px;\r\n      }\r\n    }\r\n    .brands-button {\r\n      float: right;\r\n      .mat-focus-indicator.mat-raised-button.mat-button-base {\r\n        background-color: transparent;\r\n        color: #ffff;\r\n        box-shadow: none;\r\n        min-width: 28px;\r\n        line-height: 32px;\r\n        padding-left: 0;\r\n        padding-right: 0;\r\n      }\r\n    }\r\n  }\r\n  .import-img {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin-right: 6px;\r\n    align-items: center;\r\n    .btn-image {\r\n      font-size: 10px;\r\n      line-height: 14px;\r\n      color: rgba(0, 0, 0, 0.80);\r\n    }\r\n    .user-img{\r\n      margin: 0px;\r\n      width: 40px;\r\n      height: 40px;\r\n      border-radius: 6px;\r\n      overflow: hidden;\r\n      margin-left: -6px;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n}\r\n  .table-content{\r\n    .table-top-list {\r\n      position: relative;\r\n      margin-bottom: 5px;\r\n      button {\r\n        padding: 0 8px !important;\r\n        line-height: 22px;\r\n        min-width: auto !important;\r\n        margin-right: 11px;\r\n        font-size: 10px;\r\n        border-radius: 5px;\r\n        background: rgba(0,0,0,3%);\r\n      }\r\n      .active {\r\n        background:$yallow-color;\r\n        color: $light-color-text-bg;\r\n        font-weight: 700;\r\n      }\r\n      &:before {\r\n        content: \"\";\r\n        border-right: solid 1px rgba(0,0,0,8%);\r\n        position: absolute;\r\n        left: 54px;\r\n        height: 60%;\r\n        top: 6px;\r\n      }\r\n    }\r\n    .mat-elevation-z8 {\r\n      box-shadow: none !important;\r\n      border: solid 1px rgba(000,000,000,0.1);\r\n      border-radius: 12px !important;\r\n      overflow: hidden;\r\n      thead{\r\n        background-color: #00aeef !important;\r\n        tr{\r\n          height: 35px !important;\r\n          th{\r\n            color:#fff !important;\r\n            font-weight: 800 !important;\r\n            font-size: 12px !important;\r\n            padding: 0 8px;\r\n            &:first-child{\r\n              padding-left: 20px;\r\n            }\r\n            .mat-sort-header-content{\r\n              font-family: 'Roboto', sans-serif;\r\n              color:#fff !important;\r\n              font-weight: 600;\r\n              font-size: 13px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      tbody{\r\n        tr{\r\n          height: auto !important;\r\n          td{\r\n            font-size: 13px;\r\n            color: $black-color;\r\n            font-weight: 500;\r\n            padding: 4px 8px;\r\n            line-height: 20px;\r\n            font-family: 'Roboto', sans-serif;\r\n            &:first-child{\r\n              padding-left: 20px;\r\n            }\r\n            a{\r\n              color:$black-color;\r\n              $font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n            }\r\n            .dialog-img{\r\n              color: #ec008c;\r\n              font-size: 28px;\r\n              cursor: pointer;\r\n            }\r\n            .brand-commission {\r\n              padding: 0px 6px;\r\n              height: auto;\r\n              line-height: 18px;\r\n              font-size: 9px;\r\n              font-weight: 600;\r\n              border-radius: 4px;\r\n              margin: 0px 2px;\r\n            }\r\n            .brand-commission.double-btn {\r\n              margin-bottom: 3px;\r\n            }\r\n            .manage-location{\r\n              margin-bottom: 3px;\r\n            }\r\n            img {\r\n              width: 50px;\r\n              height: 40px;\r\n              object-fit: cover;\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n      .mat-paginator-range-actions{\r\n        .mat-icon-button{\r\n          background: $secondary-color !important;\r\n          margin-right: 10px;\r\n          color: $white-color !important;\r\n          width: 24px;\r\n          line-height: 18px !important;\r\n          height: 24px;\r\n          .mat-button-wrapper svg {\r\n              width: 18px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .mat-form-field.filter-search {\r\n      font-size: 14px;\r\n      .mat-form-field-wrapper {\r\n        margin: 0;\r\n        padding-bottom: 15px;\r\n      }\r\n      .mat-form-field-appearance-outline{\r\n        .mat-form-field-infix{\r\n          border-top: 0.3em solid transparent !important;\r\n          padding: 12px 0;\r\n          font-size: 14px;\r\n        }\r\n      }\r\n    }\r\n    .mat-column-select{\r\n      span.mat-checkbox-frame {\r\n        border-color: rgba(0, 0, 0, 0.40);\r\n      }\r\n    }\r\n    .cdk-column-select{\r\n      span.mat-checkbox-frame {\r\n        border-color: rgba(0, 0, 0, 0.40);\r\n      }\r\n    }\r\n  }\r\n}\r\n#popup-img{\r\n  .mat-dialog-content {\r\n    overflow: hidden;\r\n    img{\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n.not-found {\r\n  text-align: center;\r\n  padding: 50px 0px 0px;\r\n  background: url(../src/assets/img/notfound.png) no-repeat center top;\r\n  background-size: 40px;\r\n  margin: 20px 0px;\r\n}\r\n.res-area-show{ display: none !important;}\r\n.mat-form-field{\r\n  position: relative;\r\n  // .mat-icon {\r\n  //   float: right;\r\n  //   position: absolute;\r\n  //   top: 8px;\r\n  //   right: 0px;\r\n  // }\r\n}\r\n.mat-chip-list-wrapper {\r\n  margin: -2px !important;\r\n}\r\n.mat-snack-bar-container{\r\n  background: #00aeef !important;\r\n  padding: 10px 16px !important;\r\n  min-height: 40px !important;\r\n  .ng-star-inserted{\r\n    font-weight: 500;\r\n    color: #FFFFFF;\r\n    font-size: 13px;\r\n  }\r\n}\r\n.snack-bar-close{\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 0px;\r\n  font-size: 20px;\r\n}\r\n.load-record-icon{\r\n  position: absolute;\r\n  right: 0;\r\n  top: 7px;\r\n}\r\n.drop-down-menu{\r\n  min-width: 150px !important;\r\n  max-width: 300px !important;\r\n  .mat-menu-content {\r\n    padding-top: 0 !important;\r\n    padding-bottom: 0 !important;\r\n    .mat-raised-button {\r\n      text-align: left !important;\r\n      min-width: 100% !important;\r\n      background-color: transparent !important;\r\n      box-shadow: none !important;\r\n      display: block !important;\r\n      margin: 0 0 0px 0 !important;\r\n      padding: 10px 12px;\r\n      font-size: 12px;\r\n      line-height: 24px;\r\n      .mat-icon {\r\n          margin: 0 6px 0 0;\r\n          font-size: 18px;\r\n          height: 18px;\r\n          width: 18px;\r\n      }\r\n    }\r\n    .booking-dd-btn{\r\n      padding: 4px 12px;\r\n      font-size: 10px;\r\n      line-height: 14px;\r\n      font-weight: 600;\r\n      .mat-icon {\r\n        height: 15px;\r\n        width: 15px;\r\n        font-size: 15px;\r\n      }\r\n    }\r\n  }\r\n}\r\n.table-deactive-row-color{\r\n  background-color: rgb(255 12 0 / 6%);;\r\n}\r\n.general-form{\r\n  .mat-form-field-outline {\r\n    background: #fff;\r\n  }\r\n}\r\n.sidenav {\r\n  border-right: 1px solid #e9ebec;\r\n  border-right: 0;\r\n}\r\nmat-nav-list {\r\n  padding: 0 0px;\r\n    .mat-list-item{\r\n      border-radius: 6px;\r\n      margin-bottom: 8px;\r\n      .main-menu-icon {\r\n        line-height: 11px;\r\n        img {\r\n          max-width: 23px;\r\n        }\r\n      }\r\n    }\r\n}\r\n.main-menu{\r\n  .active{\r\n    background-color: rgba(0, 0, 0, 0.04);\r\n  }\r\n}\r\n.simi-editor {\r\n  margin-bottom: 10px;\r\n}\r\n.bashboard-box{\r\n  &:hover{\r\n    .box-icon {\r\n      opacity:0.6;\r\n    }\r\n  }\r\n  // .box-icon {\r\n  //   opacity: 0.6;\r\n  // }\r\n}\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 5px;\r\n}\r\n.list-footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 15px 10px 15px;\r\n  .bulk-action{\r\n    .mat-form-field-wrapper {\r\n      padding: 0 !important;\r\n      .mat-form-field-infix {\r\n        padding: 12px 0;\r\n        .mat-input-element {\r\n          font-size: 12px;\r\n          padding: 0 10px !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .mat-paginator-outer-container{\r\n    .mat-paginator-container {\r\n      padding-right: 0 !important;\r\n      .mat-paginator-navigation-next {\r\n        margin-right: 0;\r\n      }\r\n    }\r\n  }\r\n  .mat-paginator-container {\r\n    min-height: 42px;\r\n    .mat-paginator-page-size{\r\n      margin-right: 0;\r\n      .mat-paginator-page-size-select{\r\n        margin: 0;\r\n        .mat-form-field-wrapper {\r\n          padding: 0;\r\n          .mat-form-field-flex {\r\n            border: solid 1px rgba(0, 0, 0, 0.12);\r\n            border-radius: 4px;\r\n            padding: 0 5px;\r\n            align-items: center;\r\n            .mat-form-field-infix {\r\n              border: 0;\r\n              padding: 10px 0;\r\n            }\r\n          }\r\n          .mat-form-field-underline {\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.mat-topbar{\r\n background-color:$light-color !important;\r\n}\r\n.notification{\r\n  button{\r\n    .mat-badge-active{\r\n      right: -11px !important;\r\n      top: -5px !important;\r\n    }\r\n  }\r\n}\r\n.half-width-popup.upload-img {\r\n  padding-bottom: 10px;\r\n  margin-bottom: .25em;\r\n}\r\n.radio-field{\r\n  mat-label{\r\n    display: block;\r\n    margin-bottom: 3px;\r\n  }\r\n  mat-radio-button{\r\n    margin-right: 12px;\r\n  }\r\n}\r\n.page-load{\r\n  mat-spinner.mat-progress-spinner {\r\n    width: 35px !important;\r\n    height: 35px !important;\r\n    margin: 0 auto;\r\n    svg {\r\n      width: 100% !important;\r\n      height: 100% !important;\r\n    }\r\n  }\r\n}\r\n.res-show-icon {\r\n  display: none !important;\r\n}\r\nbutton{\r\n  font-family: 'Roboto', sans-serif !important;\r\n}\r\n.res-area-show{\r\n    display: block !important;\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    background: #fff;\r\n    border-bottom: solid 1px;\r\n    z-index: 999;\r\n    padding: 10px 0px;\r\n    border-bottom: 1px solid rgba(0,0,0,5%);\r\n  .res-area-show-inn{\r\n    display: flex;\r\n    gap: 10px;\r\n    padding: 0px 10px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .searchbar {\r\n      width: 60%;\r\n  }\r\n}\r\n.close-icon {\r\n  background: #ffcf35;\r\n  min-width: 20px;\r\n  padding: 0px;\r\n  width: 27px !important;\r\n  height: 27px !important;\r\n  line-height: 20px !important;\r\n  margin: 2px 0px;\r\n  p {\r\n      color: #000;\r\n      line-height: 26px;\r\n      margin: 0px;\r\n      font-weight: 700;\r\n  }\r\n}\r\n.mat-column-edit{\r\n  a{\r\n    text-decoration: none;\r\n    text-align: center;\r\n    mat-icon {\r\n      color: #000;\r\n      font-size: 12px;\r\n      display: block;\r\n      line-height: 22px;\r\n      background:rgb(236 0 140 / 21%);\r\n      border-radius: 100%;\r\n      padding: 0px !important;\r\n      width: 23px;\r\n      height: 23px;\r\n    }\r\n  }\r\n}\r\n.destopScreen button:nth-child(1) {\r\n  background: #fbeec5;\r\n}\r\n.destopScreen button:nth-child(2) {\r\n  background: #e0f4fb;\r\n}\r\n.mat-paginator-container {\r\n  font-size: 13px;\r\n}\r\n.cdk-column-action{\r\n  button{\r\n    span {\r\n      mat-icon {\r\n        color: #454646 !important;\r\n        font-size: 12px !important;\r\n        line-height: 22px;\r\n        width: auto;\r\n        margin-right: 4px;\r\n      }\r\n    }\r\n  }\r\n}\r\n.destopScreen {\r\n  display: flex;\r\n  gap:3px;\r\n  justify-content: center;\r\n  button {\r\n      background: rgba(0,0,0,6%);\r\n      box-shadow: none !important;\r\n      font-size: 10px;\r\n      display: flex;\r\n      padding: 0px 5px !important;\r\n      min-width: auto;\r\n      line-height: initial;\r\n      gap:2px;\r\n      mat-icon {\r\n          font-size: 20px !important;\r\n      }\r\n      \r\n  }\r\n}\r\n@media only screen and (max-width:768px) {\r\n  .destopScreen {\r\n    display: none;\r\n   \r\n  }\r\n}\r\n\r\n@media (min-width: 576px) {\r\n  .col-sm-auto { flex: 0 0 auto;width: auto;}\r\n  .col-sm-1 {flex: 0 0 auto; width: 8.33333333%;}\r\n  .col-sm-2 {flex: 0 0 auto; width: 16.66666667%;}\r\n  .col-sm-3 { flex: 0 0 auto; width: 25%;}\r\n  .col-sm-4 { flex: 0 0 auto; width: 33.33333333%;}\r\n  .col-sm-5 { flex: 0 0 auto; width: 41.66666667%;}\r\n  .col-sm-6 { flex: 0 0 auto; width: 50%;}\r\n  .col-sm-7 { flex: 0 0 auto; width: 58.33333333%;}\r\n  .col-sm-8 { flex: 0 0 auto; width: 66.66666667%;}\r\n  .col-sm-9 { flex: 0 0 auto; width: 75%;}\r\n  .col-sm-10 { flex: 0 0 auto; width: 83.33333333%;}\r\n  .col-sm-11 { flex: 0 0 auto; width: 91.66666667%;}\r\n  .col-sm-12 { flex: 0 0 auto; width: 100%;}\r\n}\r\n@media (min-width:768px){\r\n  .col-md-auto{flex:0 0 auto;width:auto}\r\n  .col-md-1{flex:0 0 auto;width:8.33333333%;}\r\n  .col-md-2{flex:0 0 auto;width:16.66666667%;}\r\n  .col-md-3{flex:0 0 auto;width:25%;}\r\n  .col-md-4{flex:0 0 auto;width:33.33333333%}\r\n  .col-md-5{flex:0 0 auto;width:41.66666667%;}\r\n  .col-md-6{flex:0 0 auto;width:50%;}\r\n  .col-md-7{flex:0 0 auto;width:58.33333333%}\r\n  .col-md-8{flex:0 0 auto;width:66.66666667%;}\r\n  .col-md-9{flex:0 0 auto;width:75%;}\r\n  .col-md-10{flex:0 0 auto;width:83.33333333%;}\r\n  .col-md-11{flex:0 0 auto;width:91.66666667%;}\r\n  .col-md-12{flex:0 0 auto; width:100%;}\r\n}\r\n@media (min-width: 992px) {\r\n  .col-lg-auto {flex: 0 0 auto; width: auto;}\r\n  .col-lg-1 {flex: 0 0 auto; width: 8.33333333%;}\r\n  .col-lg-2 {flex: 0 0 auto; width: 16.66666667%;}\r\n  .col-lg-3 {flex: 0 0 auto; width: 25%;}\r\n  .col-lg-4 {flex: 0 0 auto; width: 33.33333333%;}\r\n  .col-lg-5 {flex: 0 0 auto; width: 41.66666667%;}\r\n  .col-lg-6 {flex: 0 0 auto; width: 50%;}\r\n  .col-lg-7 {flex: 0 0 auto; width: 58.33333333%;}\r\n  .col-lg-8 {flex: 0 0 auto; width: 66.66666667%;}\r\n  .col-lg-9 {flex: 0 0 auto; width: 75%;}\r\n  .col-lg-10 {flex: 0 0 auto; width: 83.33333333%;}\r\n  .col-lg-11 {flex: 0 0 auto;  width: 91.66666667%;}\r\n  .col-lg-12 { flex: 0 0 auto; width: 100%;}\r\n}\r\n.con-field{\r\n  .mat-form-field-wrapper {\r\n    margin: 0px !important;\r\n    padding: 0px !important;\r\n  }\r\n}\r\n.mat-form-field-wrapper {\r\n  padding: 0px 0px 10px;\r\n}\r\n\r\n.table-header{\r\n  .con-field {\r\n    display: flex;\r\n    gap:10px;\r\n    float: right;\r\n    .home-icon {\r\n      button {\r\n        min-width: auto;\r\n        border-radius: 5px;\r\n        padding: 0px 6px;\r\n        img {\r\n          width: 25px;\r\n        }\r\n      }\r\n    }\r\n    .home-icon.commission{\r\n      button {\r\n        min-width: 37px;\r\n        height: 37px;\r\n        border-radius: 12px;\r\n        padding: 0px;\r\n        img {\r\n          width: 20px;\r\n        }\r\n      }\r\n    }\r\n    .field-item{\r\n      .mat-form-field-appearance-outline .mat-form-field-infix {\r\n        padding: 10px 0px !important;\r\n      }\r\n      .mat-form-field-label-wrapper {\r\n        top: -12px;\r\n      }\r\n      .mat-form-field-appearance-outline .mat-select-arrow-wrapper {\r\n        transform: translateY(0%);\r\n      }\r\n    }\r\n  }\r\n  .field-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n}\r\n.trip-radio {\r\n  margin: 0.25em 0;\r\n  padding-bottom: 10px;\r\n}\r\n.mat-radio-button ~ .mat-radio-button {\r\n  margin-left: 10px;\r\n}\r\n.general-header {\r\n  margin-bottom: 10px;\r\n  .Con-heading{\r\n      h2{ margin: 0px;\r\n          line-height: 46px;\r\n      }\r\n  }\r\n  .con-field {\r\n      display: flex;\r\n      gap:10px;\r\n      float: right;\r\n      .home-icon{\r\n          button {\r\n                min-width: 37px;\r\n                height: 37px;\r\n                border-radius: 5px;\r\n                padding: 0px;\r\n              img{\r\n                  width: 20px;\r\n              }\r\n          }\r\n      }\r\n  }\r\n}\r\n.general-content{\r\n  border-top: 1px solid #f6f8fa;\r\n  padding: 20px 15px 0px;\r\n  .container-bg{\r\n      mat-form-field {\r\n          width: 100%;\r\n      }\r\n  }\r\n}\r\n.half-width-popup.upload-img button {\r\n  padding: 0px;\r\n  img{\r\n      width: 20px;\r\n  }\r\n}\r\n.searchbar{\r\n  min-height: 15px;\r\n  height: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  padding: 10px 15px;\r\n  background-color: #fff;\r\n  border: 1px solid #e9ebec;\r\n  mat-icon{\r\n      color: #878a99 !important;\r\n      font-size: 18px;\r\n      margin-right: 10px;\r\n      height: 18px;\r\n      width: 18px;\r\n  }\r\n  .mat-form-field{\r\n      .mat-form-field-wrapper {\r\n          padding: 0px !important;\r\n          .mat-form-field-flex {\r\n              background: no-repeat;\r\n              padding: 0px !important;\r\n              .mat-form-field-infix {\r\n                  padding: 0px;\r\n                  border: 0px;\r\n                  display: flex;\r\n                  align-items: center;\r\n                  input{\r\n                      font-size: 14px;\r\n                      color: #212529;\r\n                  }\r\n                  .mat-form-field-label-wrapper{\r\n                      display: none !important;\r\n                  }\r\n              }\r\n          }\r\n          .mat-form-field-underline{\r\n              display: none !important;\r\n          }\r\n      }\r\n  }\r\n}\r\n@media only screen and (max-width: 767px) {\r\n  .content{\r\n    .table-content{\r\n      thead{\r\n        tr{\r\n          th{\r\n            &:nth-child(1) { display: none;}\r\n            &:nth-child(2) { display: none;}\r\n            &:nth-child(4) { width: 10% !important;}\r\n            &:nth-last-child(2) { display: none;}\r\n          }\r\n        }\r\n      }\r\n      tbody{\r\n        tr.toggle-status {\r\n            background: #ffebf7;\r\n        }\r\n        tr{\r\n          td{\r\n            &:nth-child(1) { display: none;}\r\n            &:nth-child(2) { display: none;}\r\n            &:nth-child(1).found-box{ display: revert;}\r\n            &:nth-child(4) { width: 10% !important;}\r\n            &:nth-last-child(2) { display: none;}\r\n          }\r\n\r\n        }\r\n      }\r\n      // thead{\r\n      //   tr{\r\n      //     display: block;\r\n      //     height: auto !important;\r\n      //     th{\r\n      //       padding: 10px 15px;\r\n      //       &:first-child{\r\n      //         display: none;\r\n      //       }\r\n      //       &:not(.column-check, .column-primary){\r\n      //         display: none;\r\n      //       }\r\n      //       &.column-check{\r\n      //         text-align: center;\r\n      //         width: 0%;\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // }\r\n      // tbody{\r\n      //   tr{\r\n      //     display: block;\r\n      //     td{\r\n      //       padding: 10px 15px;\r\n      //       &:first-child{\r\n      //         display: none !important;\r\n      //       }\r\n      //       &:not(.column-check, .column-primary){\r\n      //         width: 100%;\r\n      //         display: flex;\r\n      //         text-align: left !important;\r\n      //         align-items: center;\r\n      //         &:before {\r\n      //           content: attr(data-colname);\r\n      //           width: 40%;\r\n      //           display: inline-block;\r\n      //           font-weight: 600;\r\n      //         }\r\n      //       }\r\n      //       &.column-primary {\r\n      //         width: 100%;\r\n      //       }\r\n      //       &.column-check{\r\n      //         text-align: center;\r\n      //         width: 0%;\r\n      //       }\r\n      //       &.mat-column-action{\r\n      //         button.mat-button.mat-button-base {\r\n      //           min-width: 25px;\r\n      //           width: 25px;\r\n      //           padding: 0;\r\n      //         }\r\n      //       }\r\n      //       .box-img{\r\n      //         width: 25%;\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // }\r\n      .list-footer {\r\n        display: block;\r\n        .mat-paginator-outer-container{\r\n          .mat-paginator-container {\r\n            justify-content: space-between;\r\n            flex-wrap: initial;\r\n            padding: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .mat-paginator-page-size-label{ display: none;}\r\n    .mat-paginator-range-label{font-size: 12px;}\r\n    .mat-paginator-outer-container {\r\n        border-top: solid 1px rgba(0,0,0,10%);\r\n        padding-top: 10px;\r\n        margin-top: 10px;\r\n    }\r\n  }\r\n}\r\n.field-box {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border: solid 1px rgba(000,000,000,10%);\r\n  border-radius: 6px;\r\n  padding: 3px 3px 3px 10px;\r\n  margin: 3px 0px 0px;\r\n  .field-name {\r\n      .but-heading{\r\n          color: rgba(000,000,000,80%);\r\n          font-size: 12px;\r\n      }\r\n      span{\r\n          color: rgba(000,000,000,60%);\r\n          font-size: 10px;\r\n          line-height: 12px;\r\n\r\n      }\r\n  }\r\n  .field-button{\r\n      button{\r\n          min-width: 30px;\r\n          height: 30px;\r\n          img{\r\n              width: 13px;\r\n              line-height: 0px !important;\r\n              display: block;\r\n              padding: 0px 9px;\r\n          }\r\n      }\r\n  }\r\n  .but-heading{\r\n      color: rgba(0, 0, 0, 0.5);\r\n      font-size: 12px;\r\n  }\r\n  .img-upload{\r\n    input {\r\n        width: 90%;\r\n        height: 100%;\r\n        cursor: pointer;\r\n        left: 0;\r\n        opacity: 0;\r\n        position: absolute;\r\n        top: 0;\r\n    }\r\n  }\r\n}\r\n.upload-button{ margin-bottom: 15px; float: right;}\r\n.simi-editor ~ .upload-button {\r\n  margin-bottom: 10px !important;\r\n}\r\n.upload-button {\r\n  margin-bottom: 10px !important;\r\n}\r\n@media only screen and (max-width: 420px) {\r\n  .mat-paginator-range-label {\r\n    margin: 0 15px;\r\n  }\r\n}\r\n@media (max-width: 576px) {\r\n  .profile-menu button {\r\n    padding: 0px 0px !important;\r\n}\r\n.mat-badge-medium.mat-badge-above .mat-badge-content {\r\n  top: -6px !important;\r\n  left: 24px !important;\r\n}\r\n  .res-show-icon {\r\n      background:$secondary-color;\r\n      width: 27px !important;\r\n      height: 27px !important;\r\n      border-radius: 100%;\r\n      line-height: 22px !important;\r\n      text-align: center;\r\n      display: block !important;\r\n      img {\r\n        width: 19px;\r\n      }\r\n  }\r\n  .res-hide{ display: none !important;}\r\n  .res-show-icon{ display: block;}\r\n  .brands-button{\r\n    button {\r\n      background: url(../src/assets/img/adduser.png) no-repeat;\r\n      font-size: 0px;\r\n      background-size: 22px;\r\n      background-position: center;\r\n      padding: 0px 10px !important;\r\n      min-width: auto !important;\r\n    }\r\n  }\r\n.content{\r\n  .table-header{\r\n    margin-bottom: 0px;\r\n  }\r\n}\r\n  .searchbar{\r\n    width: 100%;\r\n  }\r\n  .general-header {\r\n      margin-bottom: 10px;\r\n  }\r\n  .homeAandfield{ margin-bottom: 10px;}\r\n  .col-md-6.col-sm-6.heading {\r\n    order: 2;\r\n}\r\n.homeAandfield{\r\n  .con-field{\r\n    float: inherit;\r\n    .field-item {\r\n        width: 100% !important;\r\n        .mat-form-field {\r\n            width: 100%;\r\n        }\r\n    }\r\n  }\r\n}\r\n}\r\n.btn-loadin-icon {\r\n  svg {\r\n    circle {\r\n      stroke: #fff !important;\r\n    }\r\n  }\r\n}\r\n.manage-page {\r\n  .con-field {\r\n    .field-item {\r\n      width: 50%;\r\n    }\r\n  }\r\n}\r\n.manage-booking {\r\n  .con-field {\r\n    .field-item {\r\n      margin-bottom: 10px;\r\n      .d-p-btn{\r\n        width: 100%;\r\n      }\r\n      .example-form.ng-untouched.ng-pristine {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n.trash {\r\n  padding: 0px !important;\r\n  min-width: 42px !important;\r\n  .mat-icon {\r\n      font-size: 19px;\r\n      display: block;\r\n      line-height: 24px;\r\n      padding: 0px 9px;\r\n  }\r\n}\r\n\r\n.mat-form-field-infix {\r\n  padding: 11px 0px !important;\r\n  font-size: 13px;\r\n}\r\n.mat-select-arrow-wrapper {\r\n  height: auto !important;\r\n}\r\n.field-name {\r\n  line-height: 16px;\r\n}\r\n.mat-button-base {\r\n  font-size: 13px;\r\n}\r\n.mat-button-base {\r\n  font-size: 13px;\r\n}\r\n.trip-radio mat-label {\r\n    margin-right: 10px;\r\n}\r\n.content .table-content tbody tr.yellow{\r\n\tbackground: #FFCF35\r\n}\r\n.content .table-content tbody tr.red{\r\n\tbackground: #F97630\r\n}\r\n.booking-download .mat-form-field-wrapper {\r\n  padding: 0 !important;\r\n}\r\n.booking-download .mat-form-field-appearance-outline .mat-form-field-wrapper {\r\n  margin: 0 !important;\r\n}","@use 'sass:map';\n@use 'typography-utils';\n@use '../theming/theming';\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n///\n/// @deprecated Use `mat.define-typography-config` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@function define-legacy-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        font-family: map.get($config, font-family),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-legacy-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n        font-famiy: map.get($config, font-family),\n\n        // These mappings are odd, but body-2 in the 2014 system actually looks closer to subtitle-2\n        // in the 2018 system, and subeading-1 in the 2014 system looks more like body-1 in the 2018\n        // system.\n        subtitle-2: map.get($config, body-2),\n        body-1: map.get($config, subheading-1),\n\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2018-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline-5,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline-5,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline-5);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-headline-6,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-headline-6,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, headline-6);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subtitle-1,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subtitle-1,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subtitle-1);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-body-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-body-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, body-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-2)} * 0.83),\n      typography-utils.font-weight($config, body-2),\n      typography-utils.line-height($config, body-2),\n      typography-utils.font-family($config, body-2)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-2)} * 0.67),\n      typography-utils.font-weight($config, body-2),\n      typography-utils.line-height($config, body-2),\n      typography-utils.font-family($config, body-2)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-subtitle-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-subtitle-2 {\n    @include typography-utils.typography-level($config, subtitle-2);\n  }\n\n  .mat-body,\n  .mat-body-2,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-2,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-2);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-headline-1,\n  #{$selector} .mat-headline-1 {\n    @include typography-utils.typography-level($config, headline-1);\n    margin: 0 0 56px;\n  }\n\n  .mat-headline-2,\n  #{$selector} .mat-headline-2 {\n    @include typography-utils.typography-level($config, headline-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-3,\n  #{$selector} .mat-headline-3 {\n    @include typography-utils.typography-level($config, headline-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-4,\n  #{$selector} .mat-headline-4 {\n    @include typography-utils.typography-level($config, headline-4);\n    margin: 0 0 64px;\n  }\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n/// @deprecated Use `mat.typography-hierarchy` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-title,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-title,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subheading-2,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subheading-2,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-subheading-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-subheading-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-body-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body,\n  .mat-body-1,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-1,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4,\n  #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3,\n  #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2,\n  #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1,\n  #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  // we deliberately do not use the font shorthand here because it overrides\n  // certain font properties that can't be configured in the current typography\n  // config, e.g. the font-variant-caps or font-feature-settings property\n  font-size: font-size($config, $level);\n  font-weight: font-weight($config, $level);\n  line-height: line-height($config, $level);\n  font-family: font-family($config, $level);\n\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: math.div(-$size, 2);\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: math.div(-$size, 2);\n      }\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n  }\n\n  // The badge should make sure its host is overflow visible so that the badge content\n  // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n  // style `overflow: hidden` so this requires extra specificity so that it does not\n  // depend on style load order.\n  .mat-badge.mat-badge {\n    overflow: visible;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n  $theme-divider-color: map.get($foreground, divider);\n\n  // By default the theme usually has an rgba color for the dividers, which can\n  // stack up with the background of a button toggle. This can cause the border\n  // of a selected toggle to look different from an deselected one. We use a solid\n  // color to ensure that the border always stays the same.\n  $divider-color: if(type-of($theme-divider-color) == color,\n    theming.private-rgba-to-hex($theme-divider-color, map.get($background, card)),\n    $theme-divider-color\n  );\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-overridable-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    &:not([class*='mat-elevation-z']) {\n      box-shadow: none;\n    }\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../button/icon-button-theme';\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    @include _highlighted-cell($palette);\n  }\n\n  @media (hover: hover) {\n    .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover {\n      @include _highlighted-cell($palette);\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n// Styles for a highlighted calendar cell (e.g. hovered or focused).\n@mixin _highlighted-cell($palette) {\n  & > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      background-color: theming.get-color-from-palette($palette, 0.3);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    fill: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-table-header,\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // Regardless of the user-passed density, we want the calendar previous/next buttons to remain at\n  // density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover:not([aria-disabled]),\n    &:hover[aria-disabled='false'] {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    &:hover[aria-disabled='true'] {\n      cursor: default;\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../../core/theming/theming';\n@use '../../core/typography/typography';\n@use '../../core/typography/typography-utils';\n\n/// @deprecated Use `mat.option-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-option {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    &.mat-active {\n      background: theming.get-color-from-palette($background, hover);\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n/// @deprecated Use `mat.option-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-option {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.option-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../core/theming/theming';\n@use '../../core/typography/typography';\n@use '../../core/typography/typography-utils';\n\n/// @deprecated Use `mat.optgroup-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n}\n\n/// @deprecated Use `mat.optgroup-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-optgroup-label {\n    @include typography-utils.typography-level($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.optgroup-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../datepicker/datepicker-legacy-compat';\n\n$_ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _focus-overlay-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $hue, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _theme-property($theme, $property, $hue) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: theming.get-color-from-palette($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: theming.get-color-from-palette($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: theming.get-color-from-palette($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\n    }\n  }\n}\n\n/// @deprecated Use `mat.button-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _theme-property($config, 'color', text);\n    @include _focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map.get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: theming.get-color-from-palette($foreground, text);\n    background-color: theming.get-color-from-palette($background, raised-button);\n\n    @include _theme-property($config, 'color', default-contrast);\n    @include _theme-property($config, 'background-color', default);\n    @include _ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include private.private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include private.private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include private.private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: $config,\n      typography: null,\n      density: null,\n  ));\n}\n\n/// @deprecated Use `mat.button-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: null,\n      typography: $config,\n      density: null,\n  ));\n}\n\n@mixin _density($config-or-theme) {\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: null,\n      typography: null,\n      density: theming.get-density-config($config-or-theme)\n  ));\n}\n\n/// @deprecated Use `mat.button-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/touch-target/touch-target';\n@use '@material/focus-ring/focus-ring';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__progress-indicator {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 0;\n        position: absolute;\n        transform: translate(-50%, -50%);\n        top: 50%;\n        left: 50%;\n        line-height: initial;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include ripple-theme.focus {\n      .mdc-button__focus-ring {\n        @include dom.forced-colors-mode($exclude-ie11: true) {\n          @include feature-targeting.targets($feat-structure) {\n            display: block;\n          }\n        }\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n\n  &[hidden] {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n\n/// Resolves a theme's typography tokens for the given prefix.\n///\n/// @example - scss\n///   // $theme has the following tokens:\n///   // - label-text-font\n///   // - label-text-line-height\n///   // - label-text-size\n///   // - label-text-tracking\n///   // - label-text-weight\n///   $theme: resolve-theme($theme, map.get($resolvers, typography), label-text);\n///\n/// @param {Map} $theme - The theme to resolve tokens for.\n/// @param {Function} $resolver - The typography resolver to use.\n/// @param {String...} $token-prefixes - The prefix(es) of a typography token\n///     set.\n/// @return {Map} The theme with resolved typography tokens.\n@function resolve-theme($theme, $resolver, $token-prefixes...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $token-prefix in $token-prefixes {\n    $typography-theme: meta.call(\n      $resolver,\n      $font: map.get($theme, '#{$token-prefix}-font'),\n      $line-height: map.get($theme, '#{$token-prefix}-line-height'),\n      $size: map.get($theme, '#{$token-prefix}-size'),\n      $tracking: map.get($theme, '#{$token-prefix}-tracking'),\n      $weight: map.get($theme, '#{$token-prefix}-weight')\n    );\n\n    $theme: map.merge(\n      $theme,\n      (\n        '#{$token-prefix}-font': map.get($typography-theme, font),\n        '#{$token-prefix}-line-height': map.get($typography-theme, line-height),\n        '#{$token-prefix}-size': map.get($typography-theme, size),\n        '#{$token-prefix}-tracking': map.get($typography-theme, tracking),\n        '#{$token-prefix}-weight': map.get($typography-theme, weight),\n      )\n    );\n  }\n\n  @return $theme;\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.card-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-card {\n    @include private.private-theme-overridable-elevation(1, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n}\n\n/// @deprecated Use `mat.card-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-card {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: typography-utils.font-size($config, headline);\n      weight: typography-utils.font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: typography-utils.font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.card-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$target-height: 22px;\n$font-size: 10px;\n$vertical-padding: math.div($target-height - $font-size, 2);\n\n$handset-target-height: 30px;\n$handset-font-size: 14px;\n$handset-vertical-padding: math.div($handset-target-height - $handset-font-size, 2);\n\n/// @deprecated Use `mat.tooltip-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  .mat-tooltip {\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\n  }\n}\n\n/// @deprecated Use `mat.tooltip-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tooltip {\n    font-family: typography-utils.font-family($config);\n    font-size: $font-size;\n    padding-top: $vertical-padding;\n    padding-bottom: $vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $handset-font-size;\n    padding-top: $handset-vertical-padding;\n    padding-bottom: $handset-vertical-padding;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.tooltip-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/vendor-prefixes';\n\n\n/// @deprecated Use `mat.input-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: theming.get-color-from-palette($primary, text);\n\n    @include vendor-prefixes.input-placeholder {\n      color: form-common.private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map.get($config, is-dark)) {\n      &:not(.mat-native-select-inline) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-disabled {\n    .mat-form-field-prefix,\n    .mat-form-field-suffix {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n/// @deprecated Use `mat.input-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: typography-utils.private-coerce-unitless-to-em(-$line-spacing);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.input-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-input') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@use './form-field-fill-theme.scss';\n@use './form-field-legacy-theme.scss';\n@use './form-field-outline-theme.scss';\n@use './form-field-standard-theme.scss';\n\n// Color styles that apply to all appearances of the form-field.\n/// @deprecated Use `mat.form-field-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color:\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: theming.get-color-from-palette($primary, text);\n  $required-label-color: theming.get-color-from-palette($accent, text);\n\n  // Underline colors.\n  $underline-color-base:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include form-field-legacy-theme.legacy-color($config);\n  @include form-field-standard-theme.standard-color($config);\n  @include form-field-fill-theme.fill-color($config);\n  @include form-field-outline-theme.outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $dedupe;\n\n  $dedupe: $dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top: $subscript-font-scale *\n      typography-utils.private-coerce-unitless-to-em($line-height);\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include typography-utils.typography-level($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: typography-utils.private-coerce-unitless-to-em($line-height);\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n  }\n\n  @include form-field-legacy-theme.legacy-typography($config);\n  @include form-field-standard-theme.standard-typography($config);\n  @include form-field-fill-theme.fill-typography($config);\n  @include form-field-outline-theme.outline-typography($config);\n}\n\n/// @deprecated Use `mat.form-field-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\n}\n\n/// @deprecated Use `mat.form-field-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-legacy-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $legacy-dedupe);\n  width: math.div(100%, $font-scale) + $legacy-dedupe;\n\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-legacy-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale) - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label] + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-legacy-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-legacy-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-legacy-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include legacy-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include legacy-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-fill-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $fill-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $fill-dedupe;\n\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-fill-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-fill-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-fill-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-fill-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include fill-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include fill-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-outline-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n  $outline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: theming.get-color-from-palette($primary);\n  $outline-color-accent: theming.get-color-from-palette($accent);\n  $outline-color-warn: theming.get-color-from-palette($warn);\n  $outline-color-disabled:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\n  scale($font-scale);\n  width: math.div(100%, $font-scale) + $outline-dedupe;\n\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-outline-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-outline-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-outline-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-outline-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include outline-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include outline-typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.select-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-select-value {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: form-common.private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: theming.get-color-from-palette($background, card);\n    @include private.private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: theming.get-color-from-palette($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: theming.get-color-from-palette($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: theming.get-color-from-palette($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n/// @deprecated Use `mat.select-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  .mat-select {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: typography-utils.private-coerce-unitless-to-em($line-height);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.select-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.checkbox-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: theming.get-color-from-palette($foreground, disabled);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map.get(map.get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.checkbox-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-checkbox {\n    font-family: typography-utils.font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: typography-utils.line-height($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.checkbox-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.dialog-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-dialog-container {\n    @include private.private-theme-elevation(24, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n/// @deprecated Use `mat.dialog-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-dialog-title {\n    @include typography-utils.typography-level($config, title);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.dialog-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$chip-remove-font-size: 18px;\n\n@mixin _element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\n    theming.get-color-from-palette($palette));\n\n  .mat-ripple-element {\n    @include _ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n/// @deprecated Use `mat.chips-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include private.private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map.get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n  }\n}\n\n/// @deprecated Use `mat.chips-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-chip {\n    font-size: typography-utils.font-size($config, body-2);\n    font-weight: typography-utils.font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.chips-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _checked-color($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n/// @deprecated Use `mat.slide-toggle-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\n\n  .mat-slide-toggle {\n    @include _checked-color($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _checked-color($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _checked-color($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include private.private-theme-elevation(1, $config);\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n/// @deprecated Use `mat.slide-toggle-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slide-toggle-content {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.slide-toggle-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n/// @deprecated Use `mat.tabs-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] > .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _label-focus-color($foreground, $color);\n        @include _ink-bar-color($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _ink-bar-color($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _label-focus-color($foreground, $color);\n        @include _tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _ink-bar-color($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: theming.get-color-from-palette($color, $hue);\n  }\n}\n\n@mixin _label-focus-color($foreground, $tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\n\n      &.mat-tab-disabled {\n        background-color: theming.get-color-from-palette($foreground, disabled, 0.1);\n      }\n    }\n  }\n}\n\n@mixin _tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: theming.get-color-from-palette($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: theming.get-color-from-palette($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-link-container .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\n  }\n\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.4;\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element,\n  > .mat-tab-header-pagination .mat-ripple-element {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.12;\n  }\n}\n\n/// @deprecated Use `mat.tabs-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tab-group {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.tabs-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: theming.get-color-from-palette($palette);\n  }\n}\n\n/// @deprecated Use `mat.radio-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _color($primary);\n    }\n\n    &.mat-accent {\n      @include _color($accent);\n    }\n\n    &.mat-warn {\n      @include _color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: theming.get-color-from-palette($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map.get($foreground, base);\n    }\n  }\n}\n\n/// @deprecated Use `mat.radio-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-radio-button {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.radio-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: theming.get-color-from-palette($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n/// @deprecated Use `mat.slider-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color:\n    theming.get-color-from-palette($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color:\n    theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color:\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-slider {\n    &.mat-primary {\n      @include _inner-content-theme($primary);\n    }\n\n    &.mat-accent {\n      @include _inner-content-theme($accent);\n    }\n\n    &.mat-warn {\n      @include _inner-content-theme($warn);\n    }\n  }\n\n  .mat-slider:hover,\n  .mat-slider.cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider.mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider.mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (meta.type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n/// @deprecated Use `mat.slider-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slider-thumb-label-text {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, caption);\n      weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.slider-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.menu-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-menu-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: theming.get-color-from-palette($foreground, 'text');\n\n    &[disabled] {\n      &,\n      .mat-menu-submenu-icon,\n      .mat-icon-no-color {\n        color: theming.get-color-from-palette($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-submenu-icon {\n    color: theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n}\n\n/// @deprecated Use `mat.menu-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-menu-item {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.menu-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n/// @deprecated Use `mat.list-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-list-option {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-subheader {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-list-item-disabled {\n      background-color: theming.get-color-from-palette($background, disabled-list-option);\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n}\n\n/// @deprecated Use `mat.list-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  $font-family: typography-utils.font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: typography-utils.font-family($config, body-2);\n      font-size: typography-utils.font-size($config, body-2);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: typography-utils.font-size($config, caption);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.list-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './paginator-variables';\n\n/// @deprecated Use `mat.paginator-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-paginator {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: typography-utils.font-family($config, caption);\n      size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/style/private';\n\n/// @deprecated Use `mat.snack-bar-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\n\n    @include private.private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\n  }\n}\n\n/// @deprecated Use `mat.snack-bar-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-simple-snackbar {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.snack-bar-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n/// @deprecated Use `mat.table-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-table {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n/// @deprecated Use `mat.table-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-table {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: typography-utils.font-size($config, caption);\n    font-weight: typography-utils.font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.table-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@angular/cdk';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include mdc-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n","// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'variables';\n@use '@material/elevation/elevation-theme' as mdc-elevation;\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: null) {\n  @if meta.type-of($color) == color and $opacity == null {\n    @include mdc-elevation.elevation($zValue, $color);\n  }\n  @else {\n    // Copied from @material/elevation/_elevation-theme.scss#_box-shadow\n    // TODO(mmalerba): Add support for graceful handling of CSS var color to MDC.\n    $shadow-color:\n      if(meta.type-of($color) == color and $opacity != null, rgba($color, $opacity), $color);\n    $umbra-z-value: map.get(mdc-elevation.$umbra-map, $zValue);\n    $penumbra-z-value: map.get(mdc-elevation.$penumbra-map, $zValue);\n    $ambient-z-value: map.get(mdc-elevation.$ambient-map, $zValue);\n    $box-shadow: (\n      #{'#{$umbra-z-value} #{$shadow-color}'},\n      #{'#{$penumbra-z-value} #{$shadow-color}'},\n      #{$ambient-z-value} $shadow-color\n    );\n    @include mdc-elevation.shadow($box-shadow);\n  }\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation($zValue, $color: $color) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use '@material/button/button' as mdc-button;\n@use '@material/button/button-theme' as mdc-button-theme;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _button-variant($color) {\n  @include mdc-button-text-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin _unelevated-button-variant($foreground, $background) {\n  @include mdc-button-filled-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _raised-button-variant($foreground, $background) {\n  @include mdc-button-protected-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _outlined-button-variant($color) {\n  @include mdc-button-outlined-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n    $disabled-ink-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n    $disabled-container-color: rgba($on-surface, 0.12);\n    $primary: mdc-theme-color.prop-value(primary);\n    $on-primary: mdc-theme-color.prop-value(on-primary);\n    $secondary: mdc-theme-color.prop-value(secondary);\n    $on-secondary: mdc-theme-color.prop-value(on-secondary);\n    $error: mdc-theme-color.prop-value(error);\n    $on-error: mdc-theme-color.prop-value(on-error);\n\n    .mat-mdc-button {\n      &.mat-unthemed {\n        @include _button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-text-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-label-text-color: $disabled-ink-color,\n          label-text-color: $disabled-ink-color\n        ));\n      }\n    }\n\n    .mat-mdc-unelevated-button {\n      &.mat-unthemed {\n        @include _unelevated-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _unelevated-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _unelevated-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _unelevated-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-filled-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n        ));\n      }\n    }\n\n    .mat-mdc-raised-button {\n      &.mat-unthemed {\n        @include _raised-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _raised-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _raised-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _raised-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-protected-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n          container-elevation: 0,\n        ));\n      }\n    }\n\n    .mat-mdc-outlined-button {\n      @include mdc-button-outlined-theme.theme((\n        outline-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12)\n      ));\n\n      &.mat-unthemed {\n        @include _outlined-button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _outlined-button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _outlined-button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _outlined-button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-outlined-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          label-text-color: $disabled-ink-color,\n          disabled-label-text-color: $disabled-ink-color,\n          outline-color: rgba($on-surface, 0.12),\n          disabled-outline-color: rgba($on-surface, 0.12),\n        ));\n      }\n    }\n\n    // Ripple colors\n    .mat-mdc-button, .mat-mdc-outlined-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n    }\n\n    .mat-mdc-raised-button, .mat-mdc-unelevated-button {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-button,\n  .mat-mdc-raised-button,\n  .mat-mdc-unelevated-button,\n  .mat-mdc-outlined-button {\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n    &.mat-mdc-button-base {\n      @include mdc-button-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n      @include button-theme-private.touch-target-density($density-scale);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/ripple/ripple-theme' as mdc-ripple-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use '../core/mdc-helpers/mdc-helpers';\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@mixin ripple-theme-styles($config, $is-filled) {\n  $opacities: if(map.get($config, is-dark),\n    mdc-ripple-theme.$light-ink-opacities, mdc-ripple-theme.$dark-ink-opacities);\n\n  // Ideally these styles would be structural, but MDC bases some of the opacities on the theme.\n  &:hover .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, hover);\n  }\n\n  &.cdk-program-focused,\n  &.cdk-keyboard-focused {\n    .mat-mdc-button-persistent-ripple::before {\n      opacity: map.get($opacities, focus);\n    }\n  }\n\n  &:active .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, press);\n  }\n\n  @include _ripple-color(mdc-theme-color.prop-value(on-surface));\n\n  &.mat-primary {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-primary, primary)));\n  }\n\n  &.mat-accent {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-secondary, secondary)));\n  }\n\n  &.mat-warn {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-error, error)));\n  }\n}\n\n// Wraps the content style in a selector for the disabled state.\n// MDC adds theme color by using :not(:disabled), so just using [disabled] once will not\n// override this, neither will it apply to anchor tags. This needs to override the\n// previously set theme color, so it must be ordered after the theme styles.\n// TODO(andrewseguin): Discuss with the MDC team to see if we can avoid the :not(:disabled) by\n// manually styling disabled buttons with a [disabled] selector.\n@mixin apply-disabled-style() {\n  &[disabled][disabled] {\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/icon-button/mixins' as mdc-icon-button;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $disabled-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n\n    .mat-mdc-icon-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n\n      &.mat-primary {\n        @include mdc-icon-button-theme.theme((icon-color: mdc-theme-color.prop-value(primary)));\n      }\n\n      &.mat-accent {\n        @include mdc-icon-button-theme.theme((icon-color: mdc-theme-color.prop-value(secondary)));\n      }\n\n      &.mat-warn {\n        @include mdc-icon-button-theme.theme((icon-color: (mdc-theme-color.prop-value(error))));\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-icon-button-theme.theme((\n          icon-color: $disabled-color,\n          disabled-icon-color: $disabled-color,\n        ));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-icon-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    @include mdc-icon-button.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n    @include button-theme-private.touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: calc(($size - $icon-size) / 2);\n  }\n\n  .mdc-icon-button__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $size;\n      max-width: $size;\n    }\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with\n    // densities -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if math.unit($size) == 'px' and ($size >= 40px and $size <= 48px) {\n      $component-size: 40px;\n    }\n\n    .mdc-icon-button__ripple {\n      @include feature-targeting.targets($feat-structure) {\n        width: $component-size;\n        height: $component-size;\n      }\n\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n\n    .mdc-icon-button__focus-ring {\n      @include feature-targeting.targets($feat-structure) {\n        max-height: $component-size;\n        max-width: $component-size;\n      }\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $component-width: $width + $padding * 2;\n  $component-height: $height + $padding * 2;\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $component-width;\n    height: $component-height;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include ink-color_($color, $query: $query);\n    @include ripple-theme.states(\n      $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  .mdc-button__icon {\n    @include theme.property(font-size, $size);\n  }\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/custom-properties';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @if keys.is-key($touch-target-height) or\n      keys.is-key($component-height) or\n      custom-properties.is-custom-prop($touch-target-height) or\n      custom-properties.is-custom-prop($component-height)\n    {\n      // Custom properties\n      @include theme.property(\n        margin-top,\n        'max((touch-target-height - component-height) / 2, 0px)',\n        $replace: (\n          component-height: $component-height,\n          touch-target-height: $touch-target-height\n        )\n      );\n      @include theme.property(\n        margin-bottom,\n        'max((touch-target-height - component-height) / 2, 0px)',\n        $replace: (\n          component-height: $component-height,\n          touch-target-height: $touch-target-height\n        )\n      );\n    } @else {\n      // Static values\n      $vertical-margin-value: math.div(\n        $touch-target-height - $component-height,\n        2\n      );\n      margin-top: $vertical-margin-value;\n      margin-bottom: $vertical-margin-value;\n    }\n  }\n\n  @if $component-width {\n    @include feature-targeting.targets($feat-structure) {\n      @if keys.is-key($touch-target-width) or\n        keys.is-key($component-width) or\n        custom-properties.is-custom-prop($touch-target-width) or\n        custom-properties.is-custom-prop($component-width)\n      {\n        // Custom properties\n        @include theme.property(\n          margin-right,\n          'max((touch-target-width - component-width) / 2, 0px)',\n          $replace: (\n            component-width: $component-width,\n            touch-target-width: $touch-target-width\n          )\n        );\n        @include theme.property(\n          margin-left,\n          'max((touch-target-width - component-width) / 2), 0px',\n          $replace: (\n            component-width: $component-width,\n            touch-target-width: $touch-target-width\n          )\n        );\n      } @else {\n        // Static values\n        $horizontal-margin-value: math.div(\n          $touch-target-width - $component-width,\n          2\n        );\n        margin-right: $horizontal-margin-value;\n        margin-left: $horizontal-margin-value;\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $background: theming.get-color-from-palette(map.get($config, background), background);\n  $secondary-text: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/ripple/ripple-theme';\n@use '../core/selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use '../core/style/elevation';\n@use '../core/style/private';\n\n/// @deprecated Use `mat.core-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{elevation.$prefix}#{$zValue} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n/// @deprecated Use `mat.core-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-core') {\n    // Legacy-specific themes.\n    @include option-theme.theme($theme);\n    @include optgroup-theme.theme($theme);\n\n    // Non-legacy themes that are forwarded.\n    @include ripple-theme.theme($theme);\n    @include pseudo-checkbox-theme.theme($theme);\n\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../core/theming/theming';\n\n// Approximates the correct buffer color by using a mix between the theme color\n// and the theme's background color.\n@function _get-buffer-color($theme, $background) {\n  $theme-color: theming.get-color-from-palette($theme);\n  // Return fallback color if the theme uses variables to define colors.\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\n    @return theming.get-color-from-palette($theme, lighter);\n  }\n  @return color.mix($theme-color, $background, $weight: 25%);\n}\n\n/// @deprecated Use `mat.progress-bar-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get(map.get($config, background), background);\n\n  .mat-progress-bar-background {\n    fill: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.progress-bar-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.progress-bar-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n/// @deprecated Use `mat.progress-spinner-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.progress-spinner-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.progress-spinner-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// stylelint-disable material/no-prefixes\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  // Note: this isn't necessary anymore since we don't support\n  // IE, but it caused some presubmit failures in #23416.\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin color-adjust($value) {\n  -webkit-print-color-adjust: $value;\n  color-adjust: $value;\n}\n\n@mixin private-background-clip($value) {\n  -webkit-background-clip: $value;\n  background-clip: $value;\n}\n\n@mixin clip-path($value) {\n  -webkit-clip-path: $value;\n  clip-path: $value;\n}\n// stylelint-enable\n","@use 'sass:map';\n@use '../theming/theming';\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function private-control-placeholder-color($config) {\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  @return theming.get-color-from-palette($foreground, secondary-text,\n    if($is-dark-theme, 0.5, 0.42));\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-standard-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-standard-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-typography($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-private-form-field-standard-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-standard-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-standard-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include standard-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include standard-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n/// @deprecated Use `mat.autocomplete-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-autocomplete-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: theming.get-color-from-palette($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: theming.get-color-from-palette($foreground, text);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.autocomplete-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.autocomplete-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/list/evolution-mixins' as mdc-list-mixins;\n@use '@material/typography' as mdc-typography;\n@use '@material/ripple' as mdc-ripple;\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-option {\n      // Since this will usually be rendered in an overlay,\n      // we have explicitly set the default color.\n      @include mdc-theme.prop(color, text-primary-on-background);\n\n      &:hover:not(.mdc-list-item--disabled),\n      &:focus:not(.mdc-list-item--disabled),\n      &.mat-mdc-option-active,\n\n      // In multiple mode there is a checkbox to show that the option is selected.\n      &.mdc-list-item--selected:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n        $color: mdc-theme-color.$on-surface;\n        background: rgba($color, mdc-ripple.states-opacity($color, hover));\n      }\n    }\n\n    .mat-primary {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(primary,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-accent {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(secondary,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-warn {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(error,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include mdc-helpers.using-mdc-typography($config) {\n    // MDC uses the `subtitle1` level for list items, but\n    // the spec shows `body1` as the correct level.\n    .mat-mdc-option {\n      @include mdc-typography.typography(body1,\n        $query: mdc-helpers.$mdc-typography-styles-query,\n        // Exclude these properties, because they cause some build\n        // issues internally and they aren't used for anything.\n        $exclude-props: (text-decoration, text-transform)\n      );\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n","@use '@material/theme/theme' as mdc-theme;\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-optgroup-label {\n      // Since this will usually be rendered in an overlay,\n      // we have to explicitly set the default color.\n      @include mdc-theme.prop(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include ripple-theme.color($config);\n  @include option-theme.color($config);\n  @include optgroup-theme.color($config);\n  @include pseudo-checkbox-theme.color($config);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include option-theme.typography($config);\n  @include optgroup-theme.typography($config);\n  @include pseudo-checkbox-theme.typography($config);\n  // TODO(mmalerba): add typography mixin for this.\n  // @include ripple-theme.typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include option-theme.density($density-scale);\n  @include optgroup-theme.density($density-scale);\n  // TODO(mmalerba): add density mixins for these.\n  // @include ripple-theme.density($density-scale);\n  // @include pseudo-checkbox-theme.density($density-scale);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '@material/card/elevated-card-theme' as mdc-elevated-card-theme;\n@use '@material/card/outlined-card-theme' as mdc-outlined-card-theme;\n@use '@material/typography' as mdc-typography;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n\n    .mat-mdc-card {\n      // MDC's theme has `container-elevation` and `container-shadow-color` tokens, but we can't\n      // use them because they output under a `.mdc-card` selector whereas the rest of the theme\n      // isn't under any selector. Even if the mixin is pulled out of the selector, it throws a\n      // different error.\n      @include private.private-theme-elevation(1, $config);\n      @include mdc-elevated-card-theme.theme((\n        container-color: $surface,\n      ));\n    }\n\n    .mat-mdc-card-outlined {\n      @include private.private-theme-elevation(0, $config);\n      @include mdc-outlined-card-theme.theme((\n        outline-color: if(\n          meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n          color.mix($on-surface, $surface, 12%),\n          $on-surface\n        )\n      ));\n    }\n\n    // Card subtitles are an Angular Material construct (not MDC), so we explicitly set their\n    // color to secondary text here.\n    .mat-mdc-card-subtitle {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    // Card subtitles and titles are an Angular Material construct (not MDC), so we explicitly\n    // set their typographic styles here.\n    .mat-mdc-card-title {\n      @include mdc-typography.typography(headline6);\n    }\n\n    .mat-mdc-card-subtitle {\n      @include mdc-typography.typography(subtitle2);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n@use 'sass:color';\n@use 'sass:meta';\n\n\n@mixin _palette-styles($color) {\n  $color-value: mdc-theme-color.prop-value($color);\n\n  // We can't set the `track-color` using `theme`, because it isn't possible for it to use a CSS\n  // variable since MDC's buffer animation works by constructing an SVG string from this color.\n  @include mdc-linear-progress-theme.theme-styles((\n    // TODO(crisbeto): the buffer color should come from somewhere in MDC, however at the time of\n    // writing, their buffer color is hardcoded to #e6e6e6 which both doesn't account for theming\n    // and doesn't match the Material design spec. For now we approximate the buffer background by\n    // applying an opacity to the color of the bar.\n    track-color: if(\n      meta.type-of($color-value) == color,\n      color.adjust($color-value, $alpha: -0.75),\n      $color-value\n    ),\n  ));\n\n  @include mdc-linear-progress-theme.theme((\n    active-indicator-color: $color-value,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-progress-bar {\n      @include _palette-styles(primary);\n\n      &.mat-accent {\n        @include _palette-styles(secondary);\n      }\n\n      &.mat-warn {\n        @include _palette-styles(error);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n\n$custom-property-prefix: 'linear-progress';\n\n// TODO(b/254889918): Support all linear progress tokens.\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  track-color: $baseline-buffer-color,\n  track-height: 4px,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include bar-color(map.get($theme, active-indicator-color));\n  @include buffer-color(map.get($theme, track-color));\n  @include track-height(map.get($theme, track-height));\n  // TODO(b/155129310): Add styles for 4-color linear progress once this variant\n  // is supported.\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $color-value-for-css: theme-color.prop-value($color);\n  $color-value-for-svg: str-replace_(\n    string.unquote('#{$color-value-for-css}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      // stylelint-disable function-url-quotes -- SVG data URI\n      // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n      @include theme.property(\n        background-image,\n        url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='color-value-for-svg'/%3E%3C/svg%3E\"),\n        $replace: (color-value-for-svg: $color-value-for-svg)\n      );\n      // stylelint-enable function-url-quotes\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color-value-for-css);\n    }\n  }\n}\n\n@mixin track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n\n    &__bar-inner {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(border-top-width, $height);\n      }\n    }\n\n    &__buffer-dots {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(\n          background-size,\n          10px height,\n          $replace: (height: $height)\n        );\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n","@use 'sass:map';\n@use '@material/tooltip/plain-tooltip-theme';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-tooltip {\n      @include plain-tooltip-theme.theme((\n        container-color: map.get(palette.$light-theme-background-palette, tooltip),\n        supporting-text-color: mdc-theme-color.prop-value(text-primary-on-dark)\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-tooltip {\n      @include plain-tooltip-theme.theme((\n        supporting-text-font: mdc-typography.get-font(caption),\n        supporting-text-size: mdc-typography.get-size(caption),\n        supporting-text-weight: mdc-typography.get-weight(caption),\n        supporting-text-tracking: mdc-typography.get-tracking(caption),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:map';\n@use '@material/animation/animation';\n@use '@material/theme/css';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/dom';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use 'helper-text/mixins' as helper-text-mixins;\n@use 'character-counter/mixins' as character-counter-mixins;\n@use 'icon/mixins' as icon-mixins;\n@use 'icon/variables' as icon-variables;\n@use './variables';\n@use '@material/rtl/rtl';\n\n$_density-config: map.merge(\n  variables.$density-config,\n  (\n    minimum: math.min(variables.$minimum-height, 36px),\n  )\n);\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include ripple($query);\n  @include without-ripple($query);\n  @include helper-text-mixins.helper-text-core-styles($query);\n  @include character-counter-mixins.character-counter-core-styles($query);\n  @include icon-mixins.icon-core-styles($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Baseline\n  // postcss-bem-linter: define text-field\n  .mdc-text-field {\n    @include _base($query);\n  }\n\n  .mdc-text-field__input {\n    @include _input($query);\n\n    @include placeholder-selector_ {\n      @include _input-placeholder($query);\n    }\n\n    // Always show placeholder for text fields that has no\n    // label and show only on focused state when label is present.\n    .mdc-text-field--no-label &,\n    .mdc-text-field--focused & {\n      @include placeholder-selector_ {\n        @include _input-placeholder-visible($query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix {\n    @include _affix($query: $query);\n\n    .mdc-text-field--label-floating &,\n    .mdc-text-field--no-label & {\n      @include _affix-visible($query: $query);\n    }\n\n    // Safari only\n    @supports (-webkit-hyphens: none) {\n      .mdc-text-field--outlined & {\n        @include _centered-affix-safari-support($query: $query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix--prefix {\n    @include _prefix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _prefix-end-aligned($query: $query);\n    }\n  }\n\n  .mdc-text-field__affix--suffix {\n    @include _suffix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _suffix-end-aligned($query: $query);\n    }\n  }\n\n  // Variants\n\n  .mdc-text-field--filled {\n    @include _filled($query);\n\n    &.mdc-text-field--no-label {\n      @include _filled-no-label($query);\n    }\n  }\n\n  .mdc-text-field--outlined {\n    @include outlined_($query);\n\n    .mdc-notched-outline {\n      @include _outlined-notched-outline($query);\n    }\n  }\n\n  // Other Variations\n\n  .mdc-text-field--textarea {\n    @include textarea_($query);\n\n    .mdc-text-field__input {\n      @include _textarea-input($query);\n    }\n\n    &.mdc-text-field--filled {\n      @include _textarea-filled($query);\n\n      .mdc-text-field__input {\n        @include _textarea-filled-input($query);\n      }\n\n      &.mdc-text-field--no-label {\n        .mdc-text-field__input {\n          @include _textarea-filled-no-label-input($query);\n        }\n      }\n    }\n\n    &.mdc-text-field--outlined {\n      @include _textarea-outlined($query);\n\n      .mdc-text-field__input {\n        @include _textarea-outlined-input($query);\n      }\n\n      .mdc-floating-label {\n        @include _textarea-outlined-floating-label($query);\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        @include _textarea-input-with-internal-counter($query);\n      }\n\n      .mdc-text-field-character-counter {\n        @include _textarea-internal-counter($query);\n      }\n    }\n  }\n\n  // Resizer element does not need to be under mdc-text-field--textarea, that\n  // just adds specificity\n  .mdc-text-field__resizer {\n    @include _textarea-resizer($query);\n\n    .mdc-text-field--filled & {\n      @include _textarea-filled-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-filled-resizer-children($query);\n      }\n    }\n\n    .mdc-text-field--outlined & {\n      @include _textarea-outlined-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-outlined-resizer-children($query);\n      }\n    }\n  }\n\n  .mdc-text-field--with-leading-icon {\n    @include _padding-horizontal-with-leading-icon($query);\n\n    &.mdc-text-field--filled {\n      @include with-leading-icon_($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include outlined-with-leading-icon_($query);\n    }\n  }\n\n  .mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-trailing-icon($query);\n\n    &.mdc-text-field--filled {\n      @include _with-trailing-icon($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include _outlined-with-trailing-icon($query);\n    }\n  }\n\n  .mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-both-icons($query);\n\n    &.mdc-text-field--filled {\n      @include _with-leading-and-trailing-icon($query);\n    }\n  }\n\n  // postcss-bem-linter: define text-field-helper-text\n  .mdc-text-field-helper-line {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      justify-content: space-between;\n      box-sizing: border-box;\n    }\n\n    .mdc-text-field + & {\n      @include feature-targeting.targets($feat-structure) {\n        padding-right: variables.$helper-line-padding;\n        padding-left: variables.$helper-line-padding;\n      }\n    }\n  }\n  // postcss-bem-linter: end\n\n  // mdc-form-field tweaks to align text field label correctly\n  // stylelint-disable selector-max-type --\n  // TODO: document why this disable is neccessary\n  .mdc-form-field > .mdc-text-field + label {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  // States\n  .mdc-text-field--focused {\n    @include focused_($query);\n\n    &.mdc-text-field--outlined {\n      @include _focused-outlined($query);\n\n      &.mdc-text-field--textarea {\n        @include _focused-outlined-textarea($query);\n      }\n    }\n  }\n\n  .mdc-text-field--invalid {\n    @include invalid_($query);\n  }\n\n  .mdc-text-field--disabled {\n    @include disabled_($query);\n\n    &.mdc-text-field--filled {\n      @include _disabled-filled($query);\n    }\n\n    .mdc-text-field__input {\n      @include _disabled-input($query);\n    }\n  }\n\n  .mdc-text-field--end-aligned {\n    @include end-aligned_($query);\n  }\n\n  .mdc-text-field--ltr-text {\n    @include _ltr-text($query);\n\n    &.mdc-text-field--end-aligned {\n      @include _ltr-text-end-aligned($query);\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other text field styles. It is recommended that most users use `mdc-text-field-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-text-field--filled {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n///\n/// Sets density scale for default text field variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n///\n@mixin density(\n  $density-scale,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field (Excluding outlined text field with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for filled textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin filled-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $textfield-height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $no-label-margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-top,\n  );\n  $no-label-margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and filled). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--filled {\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    @if $density-scale >= -1 {\n      $keyframe-suffix: text-field-filled-#{$density-scale};\n      $label-top: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-label-density-config,\n        $density-scale: math.div($density-scale, 2),\n        $property-name: top,\n      );\n\n      // Adjust the floating position and animation/keyframes of the floating\n      // label by the new position of the resting label\n      $label-top-difference: variables.$textarea-outlined-label-top -\n        $label-top;\n\n      // Floating label position\n      @include floating-label-mixins.float-position(\n        variables.$textarea-filled-label-position-y - $label-top-difference,\n        $query: $query\n      );\n\n      // Floating label animation\n      @include floating-label-mixins.shake-animation(\n        $keyframe-suffix,\n        $query: $query\n      );\n      @at-root {\n        @include floating-label-mixins.shake-keyframes(\n          $keyframe-suffix,\n          variables.$textarea-filled-label-position-y - $label-top-difference,\n          0%,\n          $query: $query\n        );\n      }\n\n      // Resting label position\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          top: $label-top;\n        }\n      }\n\n      $margin-bottom: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-density-config,\n        $density-scale: $density-scale,\n        $property-name: margin-bottom,\n      );\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-bottom: $margin-bottom;\n        }\n      }\n    } @else {\n      // The textarea is too dense to show a floating label\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          display: none;\n        }\n      }\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--no-label {\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for outlined textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $keyframe-suffix: text-field-outlined-#{$density-scale};\n  $label-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: top,\n  );\n  $textfield-height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-top,\n  );\n  $margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and outlined). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--outlined {\n    // Adjust the floating position and animation/keyframes of the floating\n    // label by the new position of the resting label\n    $label-top-difference: variables.$textarea-outlined-label-top - $label-top;\n\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      variables.$textarea-outlined-label-position-y - $label-top-difference,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        variables.$textarea-outlined-label-position-y - $label-top-difference,\n        0%,\n        $query: $query\n      );\n    }\n\n    // Resting label position\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        top: $label-top;\n      }\n    }\n\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: $margin-top;\n        margin-bottom: $margin-bottom;\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets the minimum number of rows for a textarea a textarea may be resized to.\n///\n/// For IE11 this mixin can be used instead of the rows attribute.\n///\n/// @param {Number} $rows - The minimum number of rows for a textarea.\n/// @param {Number} $line-height - The line-height of the textarea.\n///\n@mixin textarea-min-rows(\n  $rows,\n  $line-height: variables.$textarea-line-height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $rows * $line-height;\n    }\n  }\n}\n\n///\n/// Sets height of default text field variant.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n/// @access public\n///\n@mixin height(\n  $height,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(height, $height);\n  }\n\n  // We can only hide the label (when there's not enough vertical space for it)\n  // if we know the container height at compilation time.\n  // That's not the case when $height is a custom property.\n  @if not custom-properties.is-custom-prop($height) {\n    @if $height < $minimum-height-for-filled-label {\n      @include _filled-no-label($query: $query);\n    }\n  }\n}\n\n///\n/// Sets height of outlined text field variant (Excluding outlined text field with leading icon).\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-height(\n  $height,\n  $keyframe-suffix: text-field-outlined-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      $query: $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets height of outlined text field with leading icon variant.\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-with-leading-icon-height(\n  $height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // This extra specificity is needed because textfield applies the below mixin\n  // already to two selectors (outlined + with-leading-icon). To override\n  // them with a new label position and animation, another selector is needed.\n  &.mdc-text-field--outlined {\n    @include _outlined-with-leading-icon-floating-label-position-animation(\n      $height,\n      $keyframe-suffix,\n      $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n// Mixin that sets the floating label position and animations for a given height.\n// This mixin is separate to allow outlined-with-leading-icon-height() to\n// provide greater specificity over the default mixin that adds styles for\n// outlined with leading icons.\n@mixin _outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $keyframe-suffix: text-field-outlined-with-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    variables.$outlined-with-leading-icon-label-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      variables.$outlined-with-leading-icon-label-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $positionY,\n      -(variables.$outlined-with-leading-icon-label-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets shape radius of default text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of default text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if (meta.type-of($radius) == 'list') and\n    (list.length($radius) > 2) and\n    (list.nth($radius, 3) != 0 or list.nth($radius, 4) != 0)\n  {\n    @error \"mdc-textfield: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  $fallback: if(\n    custom-properties.is-custom-prop($radius),\n    custom-properties.get-fallback($radius),\n    null\n  );\n\n  @if meta.type-of($fallback) == 'list' {\n    $fallback: css.unpack-value($fallback);\n    $first: list.nth($masked-radius, 1);\n    $second: list.nth($masked-radius, 2);\n    $third: list.nth($masked-radius, 3);\n    $fourth: list.nth($masked-radius, 4);\n    $masked-radius: (\n      if(\n        custom-properties.is-custom-prop($first),\n        custom-properties.set-fallback($first, list.nth($fallback, 1)),\n        $first\n      ),\n      if(\n        custom-properties.is-custom-prop($second),\n        custom-properties.set-fallback($second, list.nth($fallback, 2)),\n        $second\n      ),\n      if(\n        custom-properties.is-custom-prop($third),\n        custom-properties.set-fallback($third, list.nth($fallback, 3)),\n        $third\n      ),\n      if(\n        custom-properties.is-custom-prop($fourth),\n        custom-properties.set-fallback($fourth, list.nth($fallback, 4)),\n        $fourth\n      )\n    );\n  }\n\n  @include shape-mixins.radius(\n    $masked-radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n}\n\n@mixin textarea-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n///\n/// Customizes the color of the text entered into an enabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the entered text in a disabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in an enabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in a disabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin disabled-placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when enabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when disabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin disabled-fill-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the disabled text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin disabled-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the hover text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin hover-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the default line ripple of the text field.\n/// @param {Color} $color - The desired line ripple color.\n///\n@mixin line-ripple-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include line-ripple-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in an enabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin label-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in a disabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin disabled-label-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the border color of the outlined text field or textarea.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is hovered.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin hover-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is focused.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin focused-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include focused-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is disabled.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin disabled-outline-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the caret color of the text field or textarea.\n/// @param {Color} $color - The desired caret color.\n///\n@mixin caret-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(caret-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes the color of the prefix text for an enabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin prefix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the prefix text for a disabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin disabled-prefix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for an enabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin suffix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for a disabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin disabled-suffix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets shape radius of outlined text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of outlined text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-radius: list.nth($unpacked-radius, 2);\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-right-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    // The horizontal padding only needs to be overriden from the base padding\n    // if the radius is a custom property, or if the top-left radius is a value\n    // that is large than that default notched outline's leading width.\n    @include _outline-shape-radius-horizontal-padding(\n      $top-left-radius,\n      $top-right-radius,\n      $query: $query\n    );\n\n    + .mdc-text-field-helper-line {\n      @include _outline-shape-radius-horizontal-padding(\n        $top-left-radius,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n\n    // Ensure that leading/trailing icon padding is overriden. Even if the\n    // top left/right isn't a custom property or the leading isn't larger, we\n    // still need to override. The above left/right padding rules have more\n    // specificty than the original leading/trailing icon rules, so we need to\n    // re-apply them.\n    // Additionally, if the top left/right radii _are_ custom properties, we\n    // should use those instead.\n\n    &.mdc-text-field--with-leading-icon {\n      @if ($top-right-is-custom-prop) {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-right-radius,\n          $query: $query\n        );\n\n        @include rtl.rtl {\n          @include _apply-outline-shape-padding(\n            padding-left,\n            $top-right-radius,\n            $query: $query\n          );\n          @include feature-targeting.targets($feat-structure) {\n            @include rtl.ignore-next-line();\n            padding-right: 0;\n          }\n        }\n      } @else {\n        @include _padding-horizontal-with-leading-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-trailing-icon {\n      @if (\n        $top-left-is-custom-prop or\n          $top-left-radius-px >\n          notched-outline-variables.$leading-width\n      ) {\n        @include _apply-outline-shape-padding(\n          padding-left,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-right: 0;\n        }\n\n        @include rtl.rtl {\n          @include feature-targeting.targets($feat-structure) {\n            @include rtl.ignore-next-line();\n            padding-left: 0;\n          }\n          @include _apply-outline-shape-padding(\n            padding-right,\n            $top-left-radius,\n            $add-label-padding: true,\n            $query: $query\n          );\n        }\n      } @else {\n        @include _padding-horizontal-with-trailing-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n      @include _padding-horizontal-with-both-icons($query);\n    }\n  }\n}\n\n@mixin _outline-shape-radius-horizontal-padding(\n  $top-left-radius,\n  $top-right-radius,\n  $query: feature-targeting.all()\n) {\n  @include _apply-outline-shape-padding(\n    padding-left,\n    $top-left-radius,\n    $add-label-padding: true,\n    $query: $query\n  );\n  @include _apply-outline-shape-padding(\n    padding-right,\n    $top-right-radius,\n    $query: $query\n  );\n\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n  $top-right-radius-px: $top-right-radius;\n  @if ($top-right-is-custom-prop) {\n    $top-right-radius-px: custom-properties.get-fallback($top-right-radius);\n  }\n\n  @if (\n    (\n        $top-left-is-custom-prop and\n          $top-right-is-custom-prop and not\n          custom-properties.are-equal($top-left-radius, $top-right-radius)\n      ) or\n      $top-left-radius-px !=\n      $top-right-radius-px\n  ) {\n    // Normally base horizontal padding doesn't need RTL, but if the values\n    // are different or they are two different custom properties, they need to\n    // be reversed.\n    @include rtl.rtl {\n      @include _apply-outline-shape-padding(\n        padding-right,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > variables.$padding-horizontal) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @if ($padding-is-custom-prop) {\n        // Add an alternate GSS tag b/c this was an IE11 fallback and we're\n        // going to add another property with the var() value\n        /* @alternate */\n      }\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      // Interpolation is a workaround for sass/sass#3259.\n      @supports (top: max(#{0%})) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the calculated\n        // custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{variables.$padding-horizontal}, #{$value});\n      }\n    }\n  }\n}\n\n///\n/// Sets the CSS transition for the floating label's 'float' animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin floating-label-float-transition(\n  $duration-ms,\n  $timing-function: null,\n  $query: feature-targeting.all()\n) {\n  .mdc-floating-label {\n    @include floating-label-mixins.float-transition(\n      $duration-ms,\n      $timing-function,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets custom font size of the input.\n///\n/// @param {number} $font-size - Overrides the font size.\n///\n@mixin input-font-size($font-size, $query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-typography) {\n      font-size: $font-size;\n    }\n  }\n}\n\n///\n/// Sets custom font family of the input.\n///\n/// @param {String} $font-family - Selected font family.\n///\n@mixin input-font-family($font-family, $query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-typography) {\n      font-family: $font-family;\n    }\n  }\n}\n\n// Private mixins\n\n// Base shared styles\n@mixin _base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Shape\n  @include shape-radius(variables.$shape-radius, $query: $query);\n\n  // Colors\n  @include label-color(variables.$label, $query: $query);\n  @include ink-color(variables.$ink-color, $query: $query);\n  @include placeholder-color(variables.$placeholder-ink-color, $query: $query);\n  @include caret-color(primary, $query: $query);\n  @include helper-text-mixins.helper-text-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include prefix-color(variables.$affix-color, $query: $query);\n  @include suffix-color(variables.$affix-color, $query: $query);\n\n  // Floating Label\n  @include floating-label_($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    // display and align-items are necessary to make the text field participate\n    // in baseline alignment, even though some variants are 'centered'. Those\n    // variants should use the _baseline-center-aligned() mixin\n    display: inline-flex;\n    align-items: baseline;\n    padding: 0 variables.$padding-horizontal;\n    position: relative;\n    box-sizing: border-box;\n    overflow: hidden;\n    /* @alternate */\n    will-change: opacity, transform, color;\n  }\n}\n\n// This mixin adds styles to visually center the text within the text field.\n// Sibling text will align to the baseline and appear centered next to the\n// text field.\n@mixin _baseline-center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons 'controlling' the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the 'largest'\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n\n    // IE11 does not respect this, and makes the leading icon (if present) the\n    // baseline. This is a gap with IE11 that we have accepted.\n    .mdc-text-field__input {\n      height: 100%;\n    }\n  }\n}\n\n@mixin _padding-horizontal-with-leading-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, 0, variables.$padding-horizontal);\n  }\n}\n\n@mixin _padding-horizontal-with-trailing-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, variables.$padding-horizontal, 0);\n  }\n}\n\n@mixin _padding-horizontal-with-both-icons($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    padding-left: 0;\n    @include rtl.ignore-next-line();\n    padding-right: 0;\n  }\n}\n\n@mixin floating-label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n    }\n  }\n}\n\n// Filled\n\n@mixin _filled($query: feature-targeting.all()) {\n  // Text Field intentionally omits press ripple, so each state needs to be specified individually.\n  @include ripple-theme.states-base-color(\n    variables.$ink-color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-hover-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, hover),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-focus-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, focus),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n\n  @include height(variables.$height, $query: $query);\n  @include typography.baseline-top(\n    variables.$filled-baseline-top,\n    $query: $query\n  );\n  @include fill-color(variables.$background, $query: $query);\n  @include bottom-line-color(variables.$bottom-line-idle, $query: $query);\n  @include hover-bottom-line-color(\n    variables.$bottom-line-hover,\n    $query: $query\n  );\n  @include line-ripple-color_(primary, $query: $query);\n  @include _filled-floating-label($query);\n}\n\n@mixin _filled-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, variables.$label-offset);\n    }\n  }\n\n  @include floating-label-mixins.float-position(\n    variables.$label-position-y,\n    $query: $query\n  );\n}\n\n// Filled variant with no label. This variant centers the text elements and\n// hides the label and is used with there is explicitly no label provided or\n// when the height of the text field is too small for a label to be allowed.\n@mixin _filled-no-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _baseline-center-aligned($query);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-floating-label {\n      display: none;\n    }\n\n    &::before {\n      // Remove baseline-top strut\n      display: none;\n    }\n  }\n\n  // Safari only\n  @supports (-webkit-hyphens: none) {\n    .mdc-text-field__affix {\n      @include _centered-affix-safari-support($query: $query);\n    }\n  }\n}\n\n// Outlined\n\n@mixin outlined_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include outlined-height(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined,\n    $query: $query\n  );\n  @include _baseline-center-aligned($query: $query);\n  @include outline-color(variables.$outlined-idle-border, $query: $query);\n  @include hover-outline-color(\n    variables.$outlined-hover-border,\n    $query: $query\n  );\n  @include focused-outline-color(primary, $query: $query);\n  @include outline-shape-radius(variables.$shape-radius, $query: $query);\n  @include notched-outline-mixins.notch-offset(\n    notched-outline-variables.$border-width,\n    $query: $query\n  );\n  @include ripple-theme.states-base-color(\n    transparent,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include _outlined-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // TODO(b/154349735): Investigate the neccessity of these styles\n      display: flex;\n      // stylelint-disable-next-line declaration-no-important --\n      // FF adds unwanted border in HC mode on windows.\n      border: none !important;\n      background-color: transparent;\n    }\n  }\n}\n\n@mixin _outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, notched-outline-variables.$padding);\n    }\n  }\n}\n\n@mixin _outlined-notched-outline($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Force the outline to appear \"above\" the textfield elements, even though\n    // it is absolutely positioned and comes before the input in the DOM. This\n    // is primarily for the textarea scrollbar and resize elements, which may\n    // clip with with outline border.\n    z-index: 1;\n  }\n}\n\n// States\n\n@mixin disabled_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ink-color_(variables.$disabled-ink-color, $query: $query);\n  @include placeholder-color_(\n    variables.$disabled-placeholder-ink-color,\n    $query: $query\n  );\n  @include label-ink-color_(variables.$disabled-label-color, $query: $query);\n  @include helper-text-mixins.helper-text-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include _prefix-color(variables.$disabled-affix-color, $query: $query);\n  @include _suffix-color(variables.$disabled-affix-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color_(variables.$disabled-border, $query: $query);\n  @include notched-outline-mixins.color(\n    variables.$outlined-disabled-border,\n    $query: $query\n  );\n\n  @include dom.forced-colors-mode {\n    @include placeholder-color_(GrayText, $query: $query);\n    @include label-ink-color_(GrayText, $query: $query);\n    @include helper-text-mixins.helper-text-color_(GrayText, $query: $query);\n    @include character-counter-mixins.character-counter-color_(\n      GrayText,\n      $query: $query\n    );\n    @include icon-mixins.leading-icon-color_(GrayText, $query: $query);\n    @include icon-mixins.trailing-icon-color_(GrayText, $query: $query);\n    @include _prefix-color(GrayText, $query: $query);\n    @include _suffix-color(GrayText, $query: $query);\n\n    // Mixins that are ok to include since they target variant-specific elements\n    @include bottom-line-color_(GrayText, $query: $query);\n    @include notched-outline-mixins.color(GrayText, $query: $query);\n  }\n\n  @include dom.forced-colors-mode($exclude-ie11: true) {\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        background-color: Window;\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        z-index: 1;\n      }\n    }\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n  }\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n    }\n  }\n}\n\n@mixin _disabled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // disabled inputs should still allow users to interact with them to select\n    // text and scroll for textareas\n    pointer-events: auto;\n  }\n}\n\n@mixin _disabled-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include fill-color_(variables.$disabled-background, $query: $query);\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      // prevent ripple from displaying on hover when some interactible\n      // elements like input and resize handles are hovered\n      display: none;\n    }\n  }\n}\n\n@mixin invalid_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include hover-bottom-line-color(variables.$error, $query: $query);\n  @include line-ripple-color(variables.$error, $query: $query);\n  @include label-color(variables.$error, $query: $query);\n  @include helper-text-mixins.helper-text-validation-color(\n    variables.$error,\n    $query: $query\n  );\n  @include caret-color(variables.$error, $query: $query);\n  @include icon-mixins.trailing-icon-color(variables.$error, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color(variables.$error, $query: $query);\n  @include outline-color(variables.$error, $query: $query);\n  @include hover-outline-color(variables.$error, $query: $query);\n  @include focused-outline-color(variables.$error, $query: $query);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin focused_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include label-color(variables.$focused-label-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include notched-outline-mixins.stroke-width(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n\n  + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin _focused-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n}\n\n@mixin _focused-outlined-textarea($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n}\n\n// Icons\n\n@mixin with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($icon-padding, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-padding);\n    }\n  }\n\n  $truncation: $icon-padding + variables.$padding-horizontal;\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-trailing-icon($query: feature-targeting.all()) {\n  $truncation: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right +\n    variables.$label-offset;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-leading-and-trailing-icon($query: feature-targeting.all()) {\n  $leading-icon: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $trailing-icon: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  $truncation: $leading-icon + $trailing-icon;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin outlined-with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $left-spacing: $icon-padding - notched-outline-variables.$leading-width;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $left-spacing);\n    }\n  }\n\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n\n  // Floating label position and animation\n  @include _outlined-with-leading-icon-floating-label-position-animation(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined-leading-icon,\n    $query: $query\n  );\n}\n\n///\n/// Applied to the outlined text field with a trailing icon\n///\n@mixin _outlined-with-trailing-icon($query: feature-targeting.all()) {\n  // Resting label position\n  $icon-padding: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the notched outline by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the notched outline max-width\n///\n@mixin _truncate-notched-outline-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.notch-max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include floating-label-mixins.max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount while scaling by the given scale value\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-floated-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  $scale: floating-label-variables.$float-scale;\n  @include floating-label-mixins.max-width(\n    calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n    $query: $query\n  );\n}\n\n// Textarea\n\n@mixin textarea_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include _textarea-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 0; // see below for explanation\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: none;\n  }\n}\n\n@mixin _textarea-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: stretch;\n    display: inline-flex;\n    flex-direction: column;\n    flex-grow: 1;\n    max-height: 100%;\n    max-width: 100%;\n    min-height: variables.$height;\n    // 'stretch' is the preferred rule here. It will allow the textarea to grow\n    // to the min/max width of the container, but if an explicit width is set,\n    // it cannot be resized horizontally.\n    // Stretch is still a working draft. Chrome and Firefox have it implemented\n    // with 'available' prefixes. fit-content is another good target for\n    // Safari since it works in almost all use cases except when an explicit\n    // width is set (the user can make the textarea smaller than the container).\n    // None of this matters for IE11, which doesn't support resize.\n    min-width: fit-content;\n    /* @alternate */\n    min-width: -moz-available;\n    /* @alternate */\n    min-width: -webkit-fill-available;\n    overflow: hidden;\n    resize: both;\n  }\n}\n\n@mixin _textarea-filled-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element up by a margin amount to make space for the\n  // resize handle. For filled elements, the resize handle directly touches\n  // the bottom line and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-filled-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (down) to compensate.\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-outlined-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element left/up by a margin amount to make space for the\n  // resize handle. For outlined elements, the resize handle directly touches\n  // the outline and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $x: -1 * variables.$textarea-input-handle-margin;\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    transform: translateX($x) translateY($y);\n\n    @include rtl.rtl {\n      // Flip the horizontal shifting direction for RTL\n      @include rtl.ignore-next-line();\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-outlined-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (right and down) to compensate.\n  $x: variables.$textarea-input-handle-margin;\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    transform: translateX($x) translateY($y);\n\n    @include rtl.rtl {\n      // Flip the horizontal shifting direction for RTL\n      @include rtl.ignore-next-line();\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: variables.$textarea-label-top;\n    }\n\n    // Resets center aligning the floating label.\n    &:not(.mdc-floating-label--float-above) {\n      @include feature-targeting.targets($feat-structure) {\n        transform: none;\n      }\n    }\n  }\n}\n\n@mixin _textarea-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-grow: 1;\n    height: auto;\n    min-height: variables.$textarea-line-height;\n    overflow-x: hidden; // https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    overflow-y: auto;\n    box-sizing: border-box;\n    resize: none;\n    // Textarea has horizontal padding instead of the container. This allows the\n    // resize handle to extend to the edge of the container.\n    padding: 0 variables.$padding-horizontal;\n  }\n\n  @include feature-targeting.targets($feat-typography) {\n    line-height: variables.$textarea-line-height;\n  }\n}\n\n@mixin _textarea-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.baseline-bottom(\n    variables.$textarea-internal-counter-baseline-bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    align-self: flex-end;\n    // Needed since padding is on the textarea and not the container\n    padding: 0 variables.$padding-horizontal;\n\n    &::before {\n      // Remove baseline-top\n      display: none;\n    }\n  }\n}\n\n@mixin _textarea-input-with-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-bottom: variables.$textarea-internal-counter-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    &::before {\n      // <textarea> does not align to baseline when it does not have a value,\n      // unlike <input>, so we have to use padding to fake it instead\n      display: none;\n    }\n  }\n\n  // Floating label position\n  @include floating-label-mixins.float-position(\n    variables.$textarea-filled-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-filled,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-filled,\n      variables.$textarea-filled-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-filled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-input-margin-top;\n    margin-bottom: variables.$textarea-filled-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled-no-label-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-no-label-input-margin-top;\n    margin-bottom: variables.$textarea-filled-no-label-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    variables.$textarea-outlined-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-outlined,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-outlined,\n      variables.$textarea-outlined-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    top: variables.$textarea-outlined-label-top;\n  }\n}\n\n@mixin _textarea-outlined-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-outlined-input-margin-top;\n    margin-bottom: variables.$textarea-outlined-input-margin-bottom;\n  }\n}\n\n// Text, Prefix and Suffix\n\n// Common styles for the text of the text field, including the prefix, suffix,\n// and input.\n@mixin _text($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Exclude setting line-height to keep caret (text cursor) same height as the input text in iOS browser.\n  @include typography.typography(\n    subtitle1,\n    $exclude-props: (line-height),\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    height: variables.$input-height;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation.standard(opacity, 150ms);\n  }\n}\n\n@mixin _input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n    min-width: 0; // Fixes flex issues on Firefox\n    border: none;\n    border-radius: 0;\n    background: none;\n    appearance: none;\n    padding: 0;\n\n    // Remove built-in trailing clear icon on IE11. IE vendor prefixes cannot\n    // be combined with other vendor prefixes like the webkit one below.\n    &::-ms-clear {\n      display: none;\n    }\n\n    // Remove built-in datepicker icon on Chrome\n    &::-webkit-calendar-picker-indicator {\n      display: none;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    // Remove red outline on firefox\n    &:invalid {\n      box-shadow: none;\n    }\n  }\n}\n\n@mixin _input-placeholder($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation.standard(opacity, 67ms);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n  }\n}\n\n@mixin _input-placeholder-visible($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition-delay: 40ms;\n    transition-duration: 110ms;\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _affix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n    white-space: nowrap;\n  }\n}\n\n// TODO(b/155467610): Remove when Safari supports baseline alignment\n// https://github.com/material-components/material-components-web/issues/5879\n@mixin _centered-affix-safari-support($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-items: center;\n    align-self: center;\n    display: inline-flex;\n    height: 100%;\n  }\n}\n\n@mixin _affix-visible($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(padding, right, variables.$prefix-padding);\n  }\n}\n\n@mixin _prefix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(\n      padding,\n      right,\n      variables.$prefix-end-aligned-padding\n    );\n  }\n}\n\n@mixin _suffix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(padding, left, variables.$suffix-padding);\n  }\n}\n\n@mixin _suffix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(\n      padding,\n      left,\n      variables.$suffix-end-aligned-padding\n    );\n  }\n}\n\n// End aligned\n@mixin end-aligned_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // IE11 does not support text-align: end\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix to be LTR when in an RTL environment. Other\n// elements such as labels and icons will remain RTL.\n@mixin _ltr-text($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.rtl {\n      .mdc-text-field__input,\n      .mdc-text-field__affix {\n        @include rtl.ignore-next-line();\n        direction: ltr;\n      }\n\n      .mdc-text-field__affix--prefix {\n        @include rtl.ignore-next-line();\n        padding-left: 0;\n        @include rtl.ignore-next-line();\n        padding-right: variables.$prefix-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        @include rtl.ignore-next-line();\n        padding-left: variables.$suffix-padding;\n        @include rtl.ignore-next-line();\n        padding-right: 0;\n      }\n\n      // Need to specify an order for all elements since icons maintain their\n      // original positions. We can't just reverse the container.\n      .mdc-text-field__icon--leading {\n        order: 1;\n      }\n\n      .mdc-text-field__affix--suffix {\n        order: 2;\n      }\n\n      .mdc-text-field__input {\n        order: 3;\n      }\n\n      .mdc-text-field__affix--prefix {\n        order: 4;\n      }\n\n      .mdc-text-field__icon--trailing {\n        order: 5;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix that are already forced to LTR to also be\n// end-aligned. This mixin should be used alongside the styles provided in\n// _ltr-text().\n@mixin _ltr-text-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.rtl {\n      .mdc-text-field__input {\n        // IE11 does not support text-align: end, so we need to duplicate\n        // the LTR end-aligned style here.\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n\n      .mdc-text-field__affix--prefix {\n        // padding-left: 0 provided by _ltr-text mixin\n        @include rtl.ignore-next-line();\n        padding-right: variables.$prefix-end-aligned-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        @include rtl.ignore-next-line();\n        padding-left: variables.$suffix-end-aligned-padding;\n        // padding-right: 0 provided by _ltr-text mixin\n      }\n    }\n  }\n}\n\n// Customization\n\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin placeholder-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__input {\n      @include placeholder-selector_ {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n@mixin fill-color_(\n  $color,\n  $query: feature-targeting.all(),\n  $addAlternate: false\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if ($addAlternate) {\n      /* @alternate */\n    }\n    @include theme.prop(background-color, $color);\n  }\n}\n\n@mixin bottom-line-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin hover-bottom-line-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &:hover .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin line-ripple-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.active-color($color, $query: $query);\n  }\n}\n\n@mixin hover-outline-color_($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--focused):hover {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin focused-outline-color_($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--focused {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin label-ink-color_($color, $query: feature-targeting.all()) {\n  .mdc-floating-label {\n    @include floating-label-mixins.ink-color($color, $query: $query);\n  }\n}\n\n@mixin _prefix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--prefix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin _suffix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--suffix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n// Selectors\n\n@mixin placeholder-selector_ {\n  // GSS will combine selectors with the same content, and some browsers have a\n  // CSS quirk where it drops a rule if it does not recognize one of the\n  // selectors.\n  // To avoid GSS combining the ::placeholder and :-ms-input-placeholder\n  // selectors, we wrap them in `@media all`.\n  // TODO(b/142329051)\n  @media all {\n    // ::placeholder needs to be wrapped because IE11 will drop other selectors\n    // with the same content\n    &::placeholder {\n      @content;\n    }\n  }\n\n  @media all {\n    // :-ms-input-placeholder needs to be wrapped because Firefox will drop\n    // other selectors with the same content\n    &:-ms-input-placeholder {\n      @content;\n    }\n  }\n}\n\n// State qualifiers\n\n///\n/// Helps style the text-field only when it's enabled.\n/// @access private\n///\n@mixin if-enabled_ {\n  &:not(.mdc-text-field--disabled) {\n    @content;\n  }\n}\n\n///\n/// Helps style the text-field only when it's disabled.\n/// @access private\n///\n@mixin if-disabled_ {\n  &.mdc-text-field--disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/animation';\n@use '@material/animation/variables';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n\n// Public mixins\n\n@mixin helper-text-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define text-field-helper-text\n\n  .mdc-text-field-helper-text {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      opacity: 0;\n      will-change: opacity;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation.standard(opacity, 150ms);\n    }\n  }\n\n  .mdc-text-field-helper-text--persistent {\n    @include feature-targeting.targets($feat-animation) {\n      transition: none;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n      will-change: initial;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the helper text following an enabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin helper-text-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the helper text following a disabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin disabled-helper-text-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n@mixin helper-text-validation-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-validation-color_($color, $query);\n  }\n}\n\n// Private mixins\n\n@mixin helper-text-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin helper-text-validation-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-text-field--invalid\n    + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/theme/theme';\n@use '@material/rtl/rtl';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n\n// Public mixins\n\n@mixin character-counter-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define text-field-character-counter\n\n  .mdc-text-field-character-counter {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Keep flex item align to trailing side on absence of helper text.\n      @include rtl.reflexive-box(margin, left, auto);\n      @include rtl.reflexive-box(padding, left, 16px);\n\n      white-space: nowrap;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the character counter associated with an enabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin character-counter-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the character counter associated with a disabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin disabled-character-counter-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  &.mdc-text-field--disabled {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n@mixin character-counter-position(\n  $xOffset,\n  $yOffset,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(right, $xOffset);\n      position: absolute;\n      bottom: $yOffset;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin character-counter-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Character counter is placed inside mdc-textfield element (for textarea variant) or\n  // inside helper line which is sibling to mdc-textfield.\n  .mdc-text-field-character-counter,\n  + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n\n// Public mixins\n\n@mixin icon-core-styles($query: feature-targeting.all()) {\n  .mdc-text-field__icon {\n    @include icon_($query: $query);\n\n    svg {\n      @include _icon-svg($query: $query);\n    }\n  }\n\n  .mdc-text-field__icon--leading {\n    @include leading-icon_($query: $query);\n  }\n\n  .mdc-text-field__icon--trailing {\n    @include trailing-icon_($query: $query);\n  }\n}\n\n///\n/// Customizes the color for the leading icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin leading-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include leading-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the trailing icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin trailing-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the leading icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-leading-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include leading-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the trailing icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-trailing-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the leading/trailing icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  @include disabled-leading-icon-color($color, $query);\n  @include disabled-trailing-icon-color($color, $query);\n}\n\n/// Sets the size of the leading and trailing icons.\n///\n/// @param {Number} $size - the size of the icon in px\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-text-field__icon {\n      font-size: $size;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: center;\n    cursor: pointer;\n  }\n\n  &:not([tabindex]),\n  &[tabindex='-1'] {\n    @include feature-targeting.targets($feat-color) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin _icon-svg($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // SVG children can cause misalignment when displayed as inline since\n    // line-height will be inherited and cause additional vertical space.\n    // Setting the display to block prevents this.\n    display: block;\n  }\n}\n\n@mixin leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(\n      margin,\n      variables.$leading-icon-padding-left,\n      variables.$leading-icon-padding-right\n    );\n  }\n}\n\n@mixin trailing-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    $padding: math.div(variables.$touch-target-size - variables.$icon-size, 2);\n    $left-margin: variables.$trailing-icon-padding-left - $padding;\n    $right-margin: variables.$trailing-icon-padding-right - $padding;\n\n    padding: $padding;\n    @include rtl.reflexive-property(margin, $left-margin, $right-margin);\n  }\n}\n\n@mixin leading-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--leading {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin trailing-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-styles($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use './functions';\n\n// Public\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define line-ripple\n  .mdc-line-ripple {\n    @include feature-targeting.targets($feat-structure) {\n      &::before,\n      &::after {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        border-bottom-style: solid;\n        content: '';\n      }\n\n      @include height(1px);\n      @include active-height(2px);\n\n      &::before {\n        z-index: 1;\n      }\n\n      &::after {\n        transform: scaleX(0);\n        opacity: 0;\n        z-index: 2;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      &::after {\n        transition: functions.transition-value(transform),\n          functions.transition-value(opacity);\n      }\n    }\n  }\n\n  .mdc-line-ripple--active::after {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scaleX(1);\n      opacity: 1;\n    }\n  }\n\n  .mdc-line-ripple--deactivating::after {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n}\n\n@mixin height($height) {\n  &::before {\n    @include theme.property(border-bottom-width, $height);\n  }\n}\n\n@mixin active-height($height) {\n  &::after {\n    @include theme.property(border-bottom-width, $height);\n  }\n}\n\n@mixin active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::after {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin inactive-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::before {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-width, $width);\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $float-positionY: if(\n    meta.type-of($positionY) == 'calculation',\n    calc($positionY + variables.$label-adjust-absolute),\n    $positionY + variables.$label-adjust-absolute\n  );\n\n  @include floating-label-mixins.float-position(\n    $float-positionY,\n    $positionX,\n    $scale: 1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/typography' as mdc-typography;\n@use '@material/textfield/variables' as mdc-textfield-variables;\n\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use './form-field-sizing';\n\n@mixin private-form-field-subscript() {\n  // Wrapper for the hints and error messages.\n  .mat-mdc-form-field-subscript-wrapper {\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n\n  .mat-mdc-form-field-hint-wrapper,\n  .mat-mdc-form-field-error-wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: 0 mdc-textfield-variables.$padding-horizontal;\n  }\n\n  .mat-mdc-form-field-subscript-dynamic-size {\n    .mat-mdc-form-field-hint-wrapper,\n    .mat-mdc-form-field-error-wrapper {\n      position: static;\n    }\n  }\n\n  .mat-mdc-form-field-bottom-align::before {\n    content: '';\n    display: inline-block;\n    height: 16px;\n  }\n\n  .mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before {\n    content: unset;\n  }\n\n  .mat-mdc-form-field-hint-end {\n    order: 1;\n  }\n\n  // Clears the floats on the hints. This is necessary for the hint animation to work.\n  .mat-mdc-form-field-hint-wrapper {\n    display: flex;\n  }\n\n  // Spacer used to make sure start and end hints have enough space between them.\n  .mat-mdc-form-field-hint-spacer {\n    flex: 1 0 form-field-sizing.$mat-form-field-hint-min-space;\n  }\n\n  // Single error message displayed beneath the form field underline.\n  .mat-mdc-form-field-error {\n    display: block;\n  }\n}\n\n@mixin private-form-field-subscript-color() {\n  // MDC does not have built-in error treatment.\n  .mat-mdc-form-field-error {\n    @include mdc-theme.prop(color, mdc-textfield.$error);\n  }\n}\n\n// We need to define our own typography for the subscript because we don't include MDC's\n// helper text in our MDC based form field\n@mixin private-form-field-subscript-typography($config-or-theme) {\n  $config: theming.get-typography-config($config-or-theme);\n\n  // The subscript wrapper has a minimum height to avoid that the form-field\n  // jumps when hints or errors are displayed.\n  .mat-mdc-form-field-subscript-wrapper,\n  .mat-mdc-form-field-bottom-align::before {\n    @include mdc-typography.typography(caption, $query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n","@use '@material/ripple/functions' as mdc-ripple-functions;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/style/layout-common';\n\n// MDC text-field uses `@material/ripple` in order to show a focus and hover effect for\n// text-fields. This is unnecessary because the ripples bring in a lot of unnecessary\n// styles and runtime code while the actual goal for the text-field is simply showing a\n// focus and hover effect. The ripples will unnecessarily provide CSS selectors and JS\n// runtime code for launching interaction ripples at pointer location. This is not needed\n// for the text-field, so we create our own minimal focus overlay styles. Our focus overlay\n// uses the exact same logic to compute the colors as in the default MDC text-field ripples.\n@mixin private-form-field-focus-overlay() {\n  .mat-mdc-form-field-focus-overlay {\n    @include layout-common.fill;\n    opacity: 0;\n    // Make sure we don't block click on the prefix/suffix.\n    pointer-events: none;\n  }\n}\n\n@mixin private-form-field-focus-overlay-color() {\n  $focus-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, focus);\n  $hover-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, hover);\n\n  .mat-mdc-form-field-focus-overlay {\n    background-color: mdc-textfield.$ink-color;\n  }\n\n  .mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay {\n    opacity: $hover-opacity;\n  }\n\n  .mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {\n    opacity: $focus-opacity;\n  }\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use 'sass:color';\n@use 'sass:meta';\n\n// Mixin that refreshes the MDC text-field theming variables. This mixin should be used when\n// the base MDC theming variables have been explicitly updated, but the component specific\n// theming-based variables are still based on the old MDC base theming variables. The mixin\n// restores the previous values for the variables to avoid unexpected global side effects.\n@mixin private-text-field-refresh-theme-variables() {\n  $_disabled-border: mdc-textfield.$disabled-border;\n  mdc-textfield.$disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_bottom-line-hover: mdc-textfield.$bottom-line-hover;\n  mdc-textfield.$bottom-line-hover:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_bottom-line-idle: mdc-textfield.$bottom-line-idle;\n  mdc-textfield.$bottom-line-idle:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.42);\n  $_label: mdc-textfield.$label;\n  mdc-textfield.$label: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_ink-color: mdc-textfield.$ink-color;\n  mdc-textfield.$ink-color: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_focused-label-color: mdc-textfield.$focused-label-color;\n  mdc-textfield.$focused-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(primary), 0.87);\n  $_placeholder-ink-color: mdc-textfield.$placeholder-ink-color;\n  mdc-textfield.$placeholder-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_disabled-label-color: mdc-textfield.$disabled-label-color;\n  mdc-textfield.$disabled-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-ink-color: mdc-textfield.$disabled-ink-color;\n  mdc-textfield.$disabled-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-placeholder-ink-color: mdc-textfield.$disabled-placeholder-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color:\n      _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_background: mdc-textfield.$background;\n  mdc-textfield.$background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 4%);\n  $_disabled-background: mdc-textfield.$disabled-background;\n  mdc-textfield.$disabled-background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 2%);\n  $_outlined-idle-border: mdc-textfield.$outlined-idle-border;\n  mdc-textfield.$outlined-idle-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_outlined-disabled-border: mdc-textfield.$outlined-disabled-border;\n  mdc-textfield.$outlined-disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_outlined-hover-border: mdc-textfield.$outlined-hover-border;\n  mdc-textfield.$outlined-hover-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n\n  // The content will be generated with the refreshed MDC text-field theming variables.\n  @content;\n\n  // Reset all variables to ensure that this mixin does not cause unexpected side effects.\n  mdc-textfield.$disabled-border: $_disabled-border;\n  mdc-textfield.$bottom-line-hover: $_bottom-line-hover;\n  mdc-textfield.$bottom-line-idle: $_bottom-line-idle;\n  mdc-textfield.$label: $_label;\n  mdc-textfield.$ink-color: $_ink-color;\n  mdc-textfield.$focused-label-color: $_focused-label-color;\n  mdc-textfield.$placeholder-ink-color: $_placeholder-ink-color;\n  mdc-textfield.$disabled-label-color: $_disabled-label-color;\n  mdc-textfield.$disabled-ink-color: $_disabled-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color: $_disabled-placeholder-ink-color;\n  mdc-textfield.$background: $_background;\n  mdc-textfield.$disabled-background: $_disabled-background;\n  mdc-textfield.$outlined-idle-border: $_outlined-idle-border;\n  mdc-textfield.$outlined-disabled-border: $_outlined-disabled-border;\n  mdc-textfield.$outlined-hover-border: $_outlined-hover-border;\n}\n\n@function _variable-safe-rgba($color, $opacity) {\n  @if (meta.type-of($color) == color) {\n    @return rgba($color, $opacity);\n  }\n  @return $color;\n}\n\n@function _variable-safe-mix($first-color, $second-color, $amount) {\n  @if (meta.type-of($first-color) == color and meta.type-of($second-color) == color) {\n    @return color.mix($first-color, $second-color, $amount);\n  }\n  @return $first-color;\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/theming/palette';\n@use '../core/mdc-helpers/mdc-helpers';\n\n// Width of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-width: 10px;\n// Height of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-height: 5px;\n// Horizontal padding that needs to be applied to the native select in an form-field so\n// that the absolute positioned arrow does not overlap the select content.\n$mat-form-field-select-horizontal-end-padding: $mat-form-field-select-arrow-width + 5px;\n\n// Mixin that creates styles for native select controls in a form-field.\n@mixin private-form-field-native-select() {\n  // Remove the native select down arrow and ensure that the native appearance\n  // does not conflict with the form-field. e.g. Focus indication of the native\n  // select is undesired since we handle focus as part of the form-field.\n  select.mat-mdc-form-field-input-control {\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    background-color: transparent;\n    display: inline-flex;\n    box-sizing: border-box;\n\n    // By default the cursor does not change when hovering over a select. We want to\n    // change this for non-disabled select elements so that it's more obvious that the\n    // control can be clicked.\n    &:not(:disabled) {\n      cursor: pointer;\n    }\n  }\n\n  // Native select elements with the `matInput` directive should have Material Design\n  // styling. This means that we add an arrow to the form-field that is based on the\n  // Material Design specification. We achieve this by adding a pseudo element to the\n  // form-field infix.\n  .mat-mdc-form-field-type-mat-native-select {\n    .mat-mdc-form-field-infix::after {\n      content: '';\n      width: 0;\n      height: 0;\n      border-left: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-right: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-top: $mat-form-field-select-arrow-height solid;\n      position: absolute;\n      right: 0;\n      top: 50%;\n      margin-top: -#{math.div($mat-form-field-select-arrow-height, 2)};\n\n      // Make the arrow non-clickable so the user can click on the form control under it.\n      pointer-events: none;\n\n      [dir='rtl'] & {\n        right: auto;\n        left: 0;\n      }\n    }\n\n    // Add padding on the end of the native select so that the content does not\n    // overlap with the Material Design arrow.\n    .mat-mdc-form-field-input-control {\n      padding-right: $mat-form-field-select-horizontal-end-padding;\n      [dir='rtl'] & {\n        padding-right: 0;\n        padding-left: $mat-form-field-select-horizontal-end-padding;\n      }\n    }\n  }\n}\n\n// Gets the color to use for some text that is highlighted while a select has focus.\n@function _get-focused-arrow-color($palette) {\n  @return rgba(mdc-theme-color.prop-value($palette), 0.87);\n}\n\n@mixin private-form-field-native-select-color($config) {\n  @include mdc-helpers.using-mdc-theme($config) {\n    // These values are taken from the MDC select implementation:\n    // https://github.com/material-components/material-components-web/blob/master/packages/mdc-select/_select-theme.scss\n    $dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.54);\n    $disabled-dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.38);\n\n    select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) {\n      // On dark themes we set the native `select` color to some shade of white,\n      // however the color propagates to all of the `option` elements, which are\n      // always on a white background inside the dropdown, causing them to blend in.\n      // Since we can't change background of the dropdown, we need to explicitly\n      // reset the color of the options to something dark.\n      @if (map.get($config, is-dark)) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n\n    .mat-mdc-form-field-type-mat-native-select {\n      .mat-mdc-form-field-infix::after {\n        color: $dropdown-icon-color;\n      }\n\n      &.mat-focused {\n        &.mat-primary {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(primary);\n          }\n        }\n\n        &.mat-accent {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(secondary);\n          }\n        }\n\n        &.mat-warn {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(error);\n          }\n        }\n      }\n\n      &.mat-form-field-disabled {\n        .mat-mdc-form-field-infix::after {\n          color: $disabled-dropdown-icon-color;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$red-palette: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$pink-palette: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$purple-palette: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$deep-purple-palette: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$indigo-palette: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$blue-palette: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$light-blue-palette: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$cyan-palette: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$teal-palette: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$green-palette: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$light-green-palette: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$lime-palette: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$yellow-palette: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$amber-palette: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$orange-palette: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$deep-orange-palette: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$brown-palette: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$grey-palette: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$gray-palette: $grey-palette;\n\n$blue-grey-palette: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$blue-gray-palette: $blue-grey-palette;\n\n\n// Background palette for light themes.\n$light-theme-background-palette: (\n  status-bar: map.get($grey-palette, 300),\n  app-bar:    map.get($grey-palette, 100),\n  background: map.get($grey-palette, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map.get($grey-palette, 300),\n  selected-disabled-button: map.get($grey-palette, 400),\n  disabled-button-toggle: map.get($grey-palette, 200),\n  unselected-chip: map.get($grey-palette, 300),\n  disabled-list-option: map.get($grey-palette, 200),\n  tooltip: map.get($grey-palette, 700),\n);\n\n// Background palette for dark themes.\n$dark-theme-background-palette: (\n  status-bar: black,\n  app-bar:    map.get($grey-palette, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map.get($grey-palette, 800),\n  dialog:     map.get($grey-palette, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map.get($grey-palette, 800),\n  focused-button: $light-focused,\n  selected-button: map.get($grey-palette, 900),\n  selected-disabled-button: map.get($grey-palette, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map.get($grey-palette, 700),\n  disabled-list-option: rgba(white, 0.12),\n  tooltip: map.get($grey-palette, 700),\n);\n\n// Foreground palette for light themes.\n$light-theme-foreground-palette: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$dark-theme-foreground-palette: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/floating-label' as mdc-floating-label;\n@use '@material/notched-outline' as mdc-notched-outline;\n@use '@material/line-ripple' as mdc-line-ripple;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use './form-field-density';\n@use './form-field-subscript';\n@use './form-field-focus-overlay';\n@use './form-field-native-select';\n@use './mdc-text-field-theme-variable-refresh';\n\n\n// Mixin that overwrites the default MDC text-field color styles to be based on\n// the given theme palette. The MDC text-field is styled using `primary` by default.\n@mixin _color-styles($palette-name,\n  $query: mdc-helpers.$mdc-theme-styles-query) {\n  $orig-focused-label-color: mdc-textfield.$focused-label-color;\n  mdc-textfield.$focused-label-color: rgba(mdc-theme-color.prop-value($palette-name), 0.87);\n\n  @include mdc-textfield.caret-color($palette-name, $query);\n  @include mdc-textfield.line-ripple-color($palette-name, $query);\n\n  .mdc-text-field--focused {\n    @include mdc-textfield.focused_($query);\n  }\n\n  .mdc-text-field--invalid {\n    @include mdc-textfield.invalid_($query);\n  }\n\n  .mdc-text-field--outlined {\n    @include mdc-textfield.focused-outline-color($palette-name, $query);\n  }\n\n  mdc-textfield.$focused-label-color: $orig-focused-label-color;\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include mdc-text-field-theme-variable-refresh.private-text-field-refresh-theme-variables() {\n      @include mdc-textfield.without-ripple($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-floating-label.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-notched-outline.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-line-ripple.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include form-field-subscript.private-form-field-subscript-color();\n      @include form-field-focus-overlay.private-form-field-focus-overlay-color();\n      @include form-field-native-select.private-form-field-native-select-color($config);\n\n      .mat-mdc-form-field.mat-accent {\n        @include _color-styles(secondary);\n      }\n\n      .mat-mdc-form-field.mat-warn {\n        @include _color-styles(error);\n      }\n\n      // This fixes an issue where the notch appears to be thicker than the rest of the outline when\n      // zoomed in on Chrome. The border inconsistency seems to be some kind of rendering artifact\n      // that arises from a combination of the fact that the notch contains text, while the leading\n      // and trailing outline do not, combined with the fact that the border is semi-transparent.\n      // Experimentally, I discovered that adding a transparent left border fixes the inconsistency.\n      // Note: class name is repeated to achieve sufficient specificity over the various MDC states.\n      // (hover, focus, etc.)\n      // TODO(mmalerba): port this fix into MDC\n      .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n        &.mat-mdc-form-field .mdc-notched-outline__notch {\n          border-left: 1px solid transparent;\n        }\n      }\n\n      [dir='rtl'] {\n        .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n          &.mat-mdc-form-field .mdc-notched-outline__notch {\n            border-left: none;\n            border-right: 1px solid transparent;\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-textfield.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-floating-label.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-notched-outline.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-line-ripple.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include form-field-subscript.private-form-field-subscript-typography($config);\n\n    // MDC uses `subtitle1` for the input value, placeholder and floating label. The spec\n    // shows `body1` for text fields though, so we manually override the typography.\n    // Note: Form controls inherit the typography from the parent form field.\n    .mat-mdc-form-field,\n    .mat-mdc-floating-label {\n      @include mdc-typography.typography(body1, $query: mdc-helpers.$mdc-typography-styles-query);\n    }\n\n    // Above, we updated the floating label to use the `body1` typography level. The MDC notched\n    // outline overrides this accidentally (only when the label floats) to a `rem`-based value.\n    // This results in different label widths when floated/docked and ultimately breaks the notch\n    // width as it has been measured in the docked state (where `body1` is applied). We try to\n    // unset these styles set by the `mdc-notched-outline`:\n    // https://github.com/material-components/material-components-web/blob/master/packages/mdc-notched-outline/_mixins.scss#L272-L292.\n    .mat-mdc-form-field .mdc-text-field--outlined {\n      // For the non-upgraded notch label (i.e. when rendered on the server), also\n      // use the correct `body1` typography level.\n      .mdc-floating-label--float-above {\n        font-size: calc(#{\n            mdc-typography.get-size(body1)} * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n      }\n      .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n        font-size: mdc-typography.get-size(body1);\n      }\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-density.private-form-field-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/rtl/rtl';\n@use './variables';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define menu-surface\n  .mdc-menu-surface {\n    @include base_($query);\n    @include elevation-mixins.elevation($z-value: 8, $query: $query);\n    @include fill-color(surface, $query);\n    @include ink-color(on-surface, $query);\n    @include shape-radius(variables.$shape-radius, false, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(transform-origin, top left, top right);\n    }\n  }\n\n  .mdc-menu-surface--anchor {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      overflow: visible;\n    }\n  }\n\n  .mdc-menu-surface--fixed {\n    @include feature-targeting.targets($feat-structure) {\n      position: fixed;\n    }\n  }\n\n  .mdc-menu-surface--fullwidth {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n}\n\n// Used by filled variants of GM components to conditionally flatten the top\n// corners of the menu.\n@mixin flatten-top-when-opened-below($query: feature-targeting.all()) {\n  .mdc-menu-surface--is-open-below {\n    $feat-structure: feature-targeting.create-target($query, structure);\n\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: 0px;\n      border-top-right-radius: 0px;\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: none;\n    position: absolute;\n    box-sizing: border-box;\n\n    $max-width: custom-properties.create(\n      --mdc-menu-max-width,\n      calc(100vw - #{variables.$min-distance-from-edge})\n    );\n    @include theme.property(max-width, $max-width);\n    $max-height: custom-properties.create(\n      --mdc-menu-max-height,\n      calc(100vh - #{variables.$min-distance-from-edge})\n    );\n    @include theme.property(max-height, $max-height);\n    margin: 0;\n    padding: 0;\n    transform: scale(1);\n    transform-origin: top left;\n    opacity: 0;\n    overflow: auto;\n    will-change: transform, opacity;\n    z-index: variables.$z-index;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity variables.$fade-in-duration linear,\n      transform variables.$scale-duration\n        animation-variables.$deceleration-curve-timing-function,\n      height 250ms animation-variables.$deceleration-curve-timing-function;\n  }\n\n  &:focus {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &--animating-open {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      transform: scale(0.8);\n      opacity: 0;\n    }\n  }\n\n  // Render this after `--animating-open` to override `opacity` & `transform`\n  // CSS properties.\n  &--open {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n\n  &--animating-closed {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      opacity: 0;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity variables.$fade-out-duration linear;\n    }\n  }\n}\n","@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/menu-surface' as mdc-menu-surface;\n@use '@material/list/evolution-mixins' as mdc-list;\n@use '@material/typography' as mdc-typography;\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n\n\n// Gets the color to use for some text that is highlighted while a select has focus.\n@function _get-mdc-focused-text-color($palette) {\n  @return rgba(mdc-theme-color.prop-value($palette), 0.87);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    $disabled-color: rgba(mdc-theme-color.prop-value(on-surface), 0.38);\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-theme-styles-query);\n    @include mdc-list.without-ripple(mdc-helpers.$mdc-theme-styles-query);\n\n    .mat-mdc-select-value {\n      color: rgba(mdc-theme-color.prop-value(on-surface), 0.87);\n    }\n\n    .mat-mdc-select-placeholder {\n      color: rgba(mdc-theme-color.prop-value(on-surface), 0.6);\n    }\n\n    .mat-mdc-select-disabled .mat-mdc-select-value {\n      color: $disabled-color;\n    }\n\n    .mat-mdc-select-arrow {\n      color: rgba(mdc-theme-color.prop-value(on-surface), 0.54);\n    }\n\n    .mat-mdc-form-field {\n      &.mat-focused {\n        &.mat-primary .mat-mdc-select-arrow {\n          color: _get-mdc-focused-text-color(primary);\n        }\n\n        &.mat-accent .mat-mdc-select-arrow {\n          color: _get-mdc-focused-text-color(secondary);\n        }\n\n        &.mat-warn .mat-mdc-select-arrow {\n          color: _get-mdc-focused-text-color(error);\n        }\n      }\n\n      .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow {\n        color: _get-mdc-focused-text-color(error);\n      }\n\n      .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow {\n        color: $disabled-color;\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-typography-styles-query);\n\n    .mat-mdc-select-panel {\n      @include mdc-list.list-base(mdc-helpers.$mdc-typography-styles-query);\n    }\n\n    .mat-mdc-select {\n      @include mdc-typography.typography(body1, $query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/dialog' as mdc-dialog;\n@use '@material/dialog/dialog-theme' as mdc-dialog-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography' as mdc-typography;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-dialog-container {\n      $on-surface: mdc-theme-color.$on-surface;\n      $text-emphasis-high: mdc-theme-color.text-emphasis(high);\n      $text-emphasis-medium: mdc-theme-color.text-emphasis(medium);\n\n      @include mdc-dialog-theme.theme((\n        container-color: theming.get-color-from-palette($background, dialog),\n        with-divider-divider-color: rgba($on-surface, mdc-dialog.$scroll-divider-opacity),\n        subhead-color: rgba($on-surface, $text-emphasis-high),\n        supporting-text-color: rgba($on-surface, $text-emphasis-medium),\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-dialog-container {\n      $styles: mdc-typography.$styles;\n      $headline6: map.get($styles, headline6);\n\n      @include mdc-dialog-theme.theme((\n        subhead-font: map.get($headline6, font-family),\n        subhead-line-height: map.get($styles, headline6, line-height),\n        subhead-size: map.get($styles, headline6, font-size),\n        subhead-weight: map.get($styles, headline6, font-weight),\n        subhead-tracking: map.get($styles, headline6, letter-spacing),\n\n        supporting-text-font: map.get($styles, body1, font-family),\n        supporting-text-line-height: map.get($styles, body1, line-height),\n        supporting-text-size: map.get($styles, body1, font-size),\n        supporting-text-weight: map.get($styles, body1, font-weight),\n        supporting-text-tracking: map.get($styles, body1, letter-spacing),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/chips/chip-theme' as mdc-chip-theme;\n@use '@material/chips/chip-set' as mdc-chip-set;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/color-palette' as mdc-color-palette;\n@use '@material/typography' as mdc-typography;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _chip-variant($background, $foreground) {\n  @include mdc-chip-theme.theme((\n    elevated-container-color: $background,\n    elevated-disabled-container-color: $background,\n    label-text-color: $foreground,\n    disabled-label-text-color: $foreground,\n    with-icon-icon-color: $foreground,\n    with-icon-disabled-icon-color: $foreground,\n    with-trailing-icon-disabled-trailing-icon-color: $foreground,\n    with-trailing-icon-trailing-icon-color: $foreground,\n    with-icon-selected-icon-color: $foreground,\n  ));\n}\n\n@mixin _colored-chip($palette) {\n  $background: theming.get-color-from-palette($palette);\n  $foreground: theming.get-color-from-palette($palette, default-contrast);\n\n  &.mat-mdc-chip-selected,\n  &.mat-mdc-chip-highlighted {\n    @include _chip-variant($background, $foreground);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark: map.get($config, is-dark);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n\n    .mat-mdc-standard-chip {\n      $standard-background: if(\n        meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n        color.mix($on-surface, $surface, 12%),\n        $on-surface\n      );\n\n      @include _chip-variant(\n        $standard-background,\n        if($is-dark, mdc-color-palette.$grey-50, mdc-color-palette.$grey-900)\n      );\n\n      &.mat-primary {\n        @include _colored-chip($primary);\n      }\n\n      &.mat-accent {\n        @include _colored-chip($accent);\n      }\n\n      &.mat-warn {\n        @include _colored-chip($warn);\n      }\n    }\n  }\n\n  .mat-mdc-chip-focus-overlay {\n    background: map.get($foreground, base);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-chip-set.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  @include mdc-helpers.using-mdc-typography($config) {\n    // Note that we don't go through MDC's typography mixin, because it assigns the styles to\n    // an inner element which makes it difficult for clients to customize. Instead we apply the\n    // same styles ourselves to the root.\n    .mat-mdc-standard-chip {\n      @include mdc-typography.typography(body2, $query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $density-scale: theming.clamp-density($density-scale, -2);\n  .mat-mdc-chip {\n    @include mdc-chip-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:color';\n@use '@material/switch/switch-theme' as mdc-switch-theme;\n@use '@material/theme/color-palette' as mdc-color-palette;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n\n\n// Generates all color mapping for the properties that only change based on the theme.\n@function _get-theme-base-map($is-dark) {\n  $on-surface: if($is-dark, mdc-color-palette.$grey-100, mdc-color-palette.$grey-800);\n  $hairline: if($is-dark, mdc-color-palette.$grey-700, mdc-color-palette.$grey-300);\n  $on-surface-variant: if($is-dark, mdc-color-palette.$grey-500, mdc-color-palette.$grey-700);\n  $on-surface-state-content: if($is-dark, mdc-color-palette.$grey-50, mdc-color-palette.$grey-900);\n  $disabled-handle-color: if($is-dark, #000, mdc-color-palette.$grey-800);\n  $icon-color: if($is-dark, mdc-color-palette.$grey-900, #fff);\n\n  @return (\n    disabled-selected-handle-color: $disabled-handle-color,\n    disabled-unselected-handle-color: $disabled-handle-color,\n\n    disabled-selected-track-color: $on-surface,\n    disabled-unselected-track-color: $on-surface,\n    unselected-focus-state-layer-color: $on-surface,\n    unselected-pressed-state-layer-color: $on-surface,\n    unselected-hover-state-layer-color: $on-surface,\n\n    unselected-focus-track-color: $hairline,\n    unselected-hover-track-color: $hairline,\n    unselected-pressed-track-color: $hairline,\n    unselected-track-color: $hairline,\n\n    unselected-focus-handle-color: $on-surface-state-content,\n    unselected-hover-handle-color: $on-surface-state-content,\n    unselected-pressed-handle-color: $on-surface-state-content,\n\n    handle-surface-color: surface,\n    unselected-handle-color: $on-surface-variant,\n\n    selected-icon-color: $icon-color,\n    disabled-selected-icon-color: $icon-color,\n    disabled-unselected-icon-color: $icon-color,\n    unselected-icon-color: $icon-color,\n  );\n}\n\n// Generates the mapping for the properties that change based on the slide toggle color.\n@function _get-theme-color-map($color-palette, $is-dark) {\n  $primary: theming.get-color-from-palette($color-palette, if($is-dark, 300, 600));\n  $state-content: theming.get-color-from-palette($color-palette, if($is-dark, 200, 900));\n  $inverse: theming.get-color-from-palette($color-palette, if($is-dark, 600, 300));\n\n  @return (\n    selected-focus-state-layer-color: $primary,\n    selected-handle-color: $primary,\n    selected-hover-state-layer-color: $primary,\n    selected-pressed-state-layer-color: $primary,\n\n    selected-focus-handle-color: $state-content,\n    selected-hover-handle-color: $state-content,\n    selected-pressed-handle-color: $state-content,\n\n    selected-focus-track-color: $inverse,\n    selected-hover-track-color: $inverse,\n    selected-pressed-track-color: $inverse,\n    selected-track-color: $inverse,\n  );\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $is-dark: map.get($config, is-dark);\n  $foreground: map.get($config, foreground);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    // MDC's switch doesn't support a `color` property. We add support\n    // for it by adding a CSS class for accent and warn style.\n    .mat-mdc-slide-toggle {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-switch-theme.theme(_get-theme-base-map($is-dark));\n\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      .mdc-switch--disabled + label {\n        color: theming.get-color-from-palette($foreground, disabled-text);\n      }\n\n      &.mat-primary {\n        @include mdc-switch-theme.theme(_get-theme-color-map($primary, $is-dark));\n      }\n\n      &.mat-accent {\n        @include mdc-switch-theme.theme(_get-theme-color-map($accent, $is-dark));\n      }\n\n      &.mat-warn {\n        @include mdc-switch-theme.theme(_get-theme-color-map($warn, $is-dark));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-slide-toggle {\n    @include mdc-switch-theme.theme(mdc-switch-theme.density($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      &[hidden] {\n        display: none;\n      }\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n","@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use 'sass:map';\n\n$private-radio-theme-config: map.merge(mdc-radio-theme.$light-theme, (\n  // Exclude the styles we don't need.\n  selected-focus-state-layer-color: null,\n  selected-focus-state-layer-opacity: null,\n  selected-hover-state-layer-color: null,\n  selected-hover-state-layer-opacity: null,\n  selected-pressed-state-layer-color: null,\n  selected-pressed-state-layer-opacity: null,\n  unselected-focus-icon-color: null,\n  unselected-focus-state-layer-color: null,\n  unselected-focus-state-layer-opacity: null,\n  unselected-hover-state-layer-color: null,\n  unselected-hover-state-layer-opacity: null,\n  unselected-pressed-state-layer-color: null,\n  unselected-pressed-state-layer-opacity: null,\n));\n\n@mixin private-radio-color($color-config, $color-palette) {\n  $foreground: map.get($color-config, foreground);\n\n  $on-surface: rgba(mdc-theme-color.$on-surface, 0.54);\n  $is-dark: map.get($color-config, is-dark);\n  $active-border-color: if(\n          $is-dark,\n          theming.get-color-from-palette(palette.$gray-palette, 200),\n          theming.get-color-from-palette(palette.$gray-palette, 900)\n  );\n\n  & {\n    @include mdc-radio-theme.theme((\n      // The disabled colors don't use the `rgba` version, because\n      // MDC applies a separate opacity to disabled buttons.\n      disabled-selected-icon-color: mdc-theme-color.$on-surface,\n      disabled-unselected-icon-color: mdc-theme-color.$on-surface,\n      unselected-focus-icon-color: $active-border-color,\n      unselected-hover-icon-color: $active-border-color,\n      unselected-icon-color: $on-surface,\n      unselected-pressed-icon-color: $on-surface,\n      selected-focus-icon-color: $color-palette,\n      selected-hover-icon-color: $color-palette,\n      selected-icon-color: $color-palette,\n      selected-pressed-icon-color: $color-palette,\n    ));\n\n    --mat-mdc-radio-ripple-color: #{mdc-theme-color.prop-value(on-surface)};\n\n    // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n    .mdc-radio--disabled + label {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n\n    --mat-mdc-radio-checked-ripple-color: #{$color-palette};\n  }\n}\n","@use 'sass:map';\n\n@use '@material/slider/slider-theme' as mdc-slider-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-slider {\n      $is-dark: map.get($config, is-dark);\n      $on-surface: mdc-theme-color.prop-value(on-surface);\n\n      @include mdc-slider-theme.theme((\n        label-container-color: if($is-dark, white, black),\n        label-label-text-color: if($is-dark, black, white),\n        disabled-handle-color: $on-surface,\n        disabled-active-track-color: $on-surface,\n        disabled-inactive-track-color: $on-surface,\n        with-tick-marks-disabled-container-color: $on-surface,\n      ));\n\n      // Note that technically we can control this using an `rgba` color in `label-container-color`.\n      // We don't do it, because the shapes MDC uses to construct the indicator overlap which causes\n      // their color opacities to stack with an `rgba` color.\n      --mat-mdc-slider-value-indicator-opacity: #{if($is-dark, 0.9, 0.6)};\n\n      &.mat-primary {\n        @include _slider-color(primary, on-primary);\n      }\n\n      &.mat-accent {\n        @include _slider-color(secondary, on-secondary);\n      }\n\n      &.mat-warn {\n        @include _slider-color(error, on-error);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-slider {\n      @include mdc-slider-theme.theme((\n        label-label-text-font: mdc-typography.get-font(subtitle2),\n        label-label-text-size: mdc-typography.get-size(subtitle2),\n        label-label-text-line-height: mdc-typography.get-line-height(subtitle2),\n        label-label-text-tracking: mdc-typography.get-tracking(subtitle2),\n        label-label-text-weight: mdc-typography.get-weight(subtitle2),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin _slider-color($color, $on-color) {\n  $ripple-color: map.get(mdc-theme-variables.$property-values, $color);\n  $resolved-color: mdc-theme-color.prop-value($color);\n  $resolved-on-color: mdc-theme-color.prop-value($on-color);\n\n  @include mdc-slider-theme.theme((\n    handle-color: $resolved-color,\n    focus-handle-color: $resolved-color,\n    hover-handle-color: $resolved-color,\n    active-track-color: $resolved-color,\n    inactive-track-color: $resolved-color,\n    with-tick-marks-active-container-color: $resolved-on-color,\n    with-tick-marks-inactive-container-color: $resolved-color,\n  ));\n\n  --mat-mdc-slider-ripple-color: #{$ripple-color};\n  --mat-mdc-slider-hover-ripple-color: #{rgba($ripple-color, 0.05)};\n  --mat-mdc-slider-focus-ripple-color: #{rgba($ripple-color, 0.2)};\n}\n","@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/menu-surface' as mdc-menu-surface;\n@use '@material/list/evolution-mixins' as mdc-list;\n@use '@material/typography' as mdc-typography;\n@use '@material/ripple' as mdc-ripple;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-theme-styles-query);\n    @include mdc-list.without-ripple(mdc-helpers.$mdc-theme-styles-query);\n\n    // MDC doesn't appear to have disabled styling for menu\n    // items so we have to grey them out ourselves.\n    .mat-mdc-menu-item[disabled] {\n      &,\n      .mat-mdc-menu-submenu-icon,\n      .mat-icon-no-color {\n        @include mdc-theme.prop(color, text-disabled-on-background);\n      }\n    }\n\n    // Since we're creating `mat-icon` and the submenu trigger\n    // chevron ourselves, we have to handle the color as well.\n    .mat-mdc-menu-item .mat-icon-no-color,\n    .mat-mdc-menu-submenu-icon {\n      @include mdc-theme.prop(color, text-primary-on-background);\n    }\n\n    // MDC's hover and focus styles are tied to their ripples which we aren't using.\n    .mat-mdc-menu-item:hover,\n    .mat-mdc-menu-item.cdk-program-focused,\n    .mat-mdc-menu-item.cdk-keyboard-focused,\n    .mat-mdc-menu-item-highlighted {\n      &:not([disabled]) {\n        $color: mdc-theme-color.$on-surface;\n        background: rgba($color, mdc-ripple.states-opacity($color, hover));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-typography-styles-query);\n\n    .mat-mdc-menu-content {\n      // Note that we include this private mixin, because the public\n      // one adds a bunch of styles that we aren't using for the menu.\n      @include mdc-list.list-base(mdc-helpers.$mdc-typography-styles-query);\n\n      // MDC uses the `subtitle1` level for list items, but the spec shows `body1` as the correct\n      // level.\n      &,\n      .mat-mdc-menu-item .mdc-list-item__primary-text {\n        @include mdc-typography.typography(body1, $query: mdc-helpers.$mdc-typography-styles-query);\n      }\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '@material/list/evolution-mixins';\n@use '@material/list/list-theme' as mdc-list-theme;\n\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/list' as m2-mdc-list;\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/mdc-helpers/mdc-helpers';\n@use './list-option-theme';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $mdc-list-color-tokens: m2-mdc-list.get-color-tokens($config);\n\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-color-tokens);\n  }\n\n  // TODO(mmalerba): This should use MDC checkbox's token API instead.\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-list-option {\n      @include list-option-theme.private-list-option-color-override($config, $primary, primary);\n    }\n    .mat-mdc-list-option.mat-accent {\n      @include list-option-theme.private-list-option-color-override($config, $accent, secondary);\n    }\n    .mat-mdc-list-option.mat-warn {\n      @include list-option-theme.private-list-option-color-override($config, $warn, error);\n    }\n  }\n\n  // There is no token for activated color on nav list.\n  // TODO(mmalerba): Add a token to MDC or make a custom one.\n  .mat-mdc-list-base.mat-mdc-list-base {\n    @include evolution-mixins.list-selected-ink-color($primary);\n  }\n\n  // TODO(mmalerba): Leaking styles from the old MDC list mixins used in other components can cause\n  //  opacity issues, so we need this override for now. We can remove it when all Angular Material\n  //  components stop using the old MDC mixins.\n  .mat-mdc-list-base .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-list-density-tokens: m2-mdc-list.get-density-tokens($density-scale);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-density-tokens);\n  }\n\n  // TODO(mmalerba): This is added to maintain the same style MDC used prior to the token-based API,\n  //  to avoid screenshot diffs. We should remove it in favor of following MDC's current style, or\n  //  add custom tokens for it.\n  $clamped-density-scale: theming.clamp-density($density-scale, -5);\n  .mat-mdc-list-item {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-icon {\n      &.mdc-list-item--with-one-line {\n        height: map.get((\n            0: 56px,\n            -1: 52px,\n            -2: 48px,\n            -3: 44px,\n            -4: 40px,\n            -5: 40px,\n        ), $clamped-density-scale);\n      }\n\n      &.mdc-list-item--with-two-lines {\n        height: map.get((\n            0: 72px,\n            -1: 68px,\n            -2: 64px,\n            -3: 60px,\n            -4: 56px,\n            -5: 56px,\n        ), $clamped-density-scale);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-list-typography-tokens: m2-mdc-list.get-typography-tokens($config);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-typography-tokens);\n  }\n\n  // MDC does not have tokens for the subheader.\n  // TODO(mmalerba): Discuss with MDC about adding them, or create custom tokens.\n  .mdc-list-group__subheader {\n    @include typography-utils.typography-level($config, subtitle-1);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../checkbox/checkbox-private';\n@use '../radio/radio-private';\n\n// Mixin that overrides the selected item and toggle indicator colors for list\n// options. By default, the MDC list uses the `primary` color for list items.\n// The MDC radio/checkbox inside list options by default uses the `primary`\n// color too.\n@mixin private-list-option-color-override($color-config, $color, $mdc-color) {\n  & .mdc-list-item__start, & .mdc-list-item__end {\n    @include checkbox-private.private-checkbox-styles-with-color($color-config, $color, $mdc-color);\n    @include radio-private.private-radio-color($color-config, $color);\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density' as mdc-density;\n@use '@material/typography' as mdc-typography;\n\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../form-field/form-field-density';\n@use './paginator-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $icon-color: rgba(theming.get-color-from-palette($foreground, base), 0.54);\n  $disabled-color: rgba(theming.get-color-from-palette($foreground, base), 0.12);\n\n  .mat-mdc-paginator {\n    background: theming.get-color-from-palette($background, card);\n    color: rgba(theming.get-color-from-palette($foreground, base), 0.87);\n  }\n\n  .mat-mdc-paginator-icon {\n    fill: $icon-color;\n  }\n\n  .mat-mdc-paginator-decrement,\n  .mat-mdc-paginator-increment {\n    border-top: 2px solid $icon-color;\n    border-right: 2px solid $icon-color;\n  }\n\n  .mat-mdc-paginator-first,\n  .mat-mdc-paginator-last {\n    border-top: 2px solid $icon-color;\n  }\n\n  .mat-mdc-icon-button[disabled] {\n    .mat-mdc-paginator-decrement,\n    .mat-mdc-paginator-increment,\n    .mat-mdc-paginator-first,\n    .mat-mdc-paginator-last {\n      border-color: $disabled-color;\n    }\n\n    .mat-mdc-paginator-icon {\n      fill: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-paginator {\n      @include mdc-typography.typography(caption, $query: mdc-helpers.$mdc-typography-styles-query);\n    }\n\n    .mat-mdc-paginator .mat-mdc-select-value {\n      font-size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: mdc-density.prop-value(\n      paginator-variables.$density-config, $density-scale, height);\n\n  .mat-mdc-paginator {\n    // We need the form field to be narrower in order to fit into the paginator,\n    // so we set its density to be -4 or denser.\n    @if ((meta.type-of($density-scale) == 'number' and $density-scale >= -4) or\n         $density-scale == maximum) {\n      @include form-field-density.private-form-field-density(-4);\n    }\n    @else {\n      @include form-field-density.private-form-field-density($density-scale);\n    }\n  }\n\n  .mat-mdc-paginator-container {\n    min-height: $height;\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/tab-indicator' as mdc-tab-indicator;\n@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab' as mdc-tab;\n@use '@material/tab/mixins' as mdc-tab-mixins;\n@use '@material/tab-bar' as mdc-tab-bar;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $foreground: map.get($config, foreground);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-tab, .mat-mdc-tab-link {\n      @include mdc-tab-mixins.text-label-color(rgba(mdc-theme-color.$on-surface, 0.6));\n\n      // MDC seems to include a background color on tabs which only stands out on dark themes.\n      // Disable for now for backwards compatibility. These styles are inside the theme in order\n      // to avoid CSS specificity issues.\n      background-color: transparent;\n\n      &.mat-mdc-tab-disabled {\n        .mdc-tab__ripple::before,\n        .mat-ripple-element {\n          background-color: theming.get-color-from-palette($foreground, disabled);\n        }\n      }\n    }\n\n    @include _palette-styles($primary);\n\n    .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n      &.mat-accent {\n        @include _palette-styles($accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($warn);\n      }\n    }\n\n    .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n      &.mat-background-primary {\n        @include _background(primary, on-primary);\n      }\n\n      &.mat-background-accent {\n        @include _background(secondary, on-secondary);\n      }\n\n      &.mat-background-warn {\n        @include _background(error, on-error);\n      }\n    }\n\n    .mat-mdc-tab-header-pagination-chevron {\n      @include mdc-theme.prop(border-color, on-surface);\n    }\n  }\n}\n\n@mixin _background($background-color, $foreground-color) {\n  $background-value: mdc-theme-color.prop-value($background-color);\n  $foreground-value: mdc-theme-color.prop-value($foreground-color);\n  --mat-mdc-tab-header-with-background-background-color: #{$background-value};\n  --mat-mdc-tab-header-with-background-foreground-color: #{$foreground-value};\n}\n\n@mixin _palette-styles($color) {\n  .mat-mdc-tab, .mat-mdc-tab-link {\n    &:not(.mat-mdc-tab-disabled) {\n      @include mdc-tab-mixins.active-text-label-color($color);\n      @include mdc-tab-indicator-theme.theme-styles((active-indicator-color: $color));\n    }\n  }\n\n  .mdc-tab__ripple::before,\n  .mat-mdc-tab .mat-ripple-element,\n  .mat-mdc-tab-header-pagination .mat-ripple-element,\n  .mat-mdc-tab-link .mat-ripple-element {\n    @include mdc-theme.prop(background-color, $color);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-tab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-tab-indicator.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-tab-header {\n    @include mdc-tab-bar.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/rtl/rtl';\n@use '@material/tab-indicator/mixins' as tab-indicator-mixins;\n@use './variables';\n\n// Public mixins\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-tab {\n    @include min-width(variables.$min-width, $query);\n    @include horizontal-padding(variables.$horizontal-padding, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex: 1 0 auto;\n      justify-content: center;\n      box-sizing: border-box;\n      // Explicitly setting margin to 0 is to override safari default margin for button elements.\n      margin: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      border: none;\n      outline: none;\n      text-align: center;\n      white-space: nowrap;\n      cursor: pointer;\n      -webkit-appearance: none;\n      z-index: 1;\n\n      // Firefox still draws a dotted border around focused buttons unless specifically overridden.\n      &::-moz-focus-inner {\n        padding: 0;\n        border: 0;\n      }\n\n      &[hidden] {\n        display: none;\n      }\n    }\n  }\n\n  .mdc-tab--min-width {\n    @include feature-targeting.targets($feat-structure) {\n      flex: 0 1 auto;\n    }\n  }\n\n  .mdc-tab__content {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: inherit;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms color linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      // Setting line-height here overrides the line-height from the typography\n      // mixin above. The line-height needs to be overridden so that the spacing\n      // between the text label and the icon as well as the text label and the\n      // bottom of the tab remain the same.\n      line-height: 1;\n      z-index: 2;\n    }\n  }\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms color linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 2;\n    }\n  }\n\n  .mdc-tab--stacked {\n    @include stacked_($query);\n  }\n\n  .mdc-tab--active {\n    .mdc-tab__text-label,\n    .mdc-tab__icon {\n      @include feature-targeting.targets($feat-animation) {\n        transition-delay: 100ms;\n      }\n    }\n  }\n\n  .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon + .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(padding, left, 8px);\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other tah styles. It is recommended that most users use `mdc-tab-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define tab\n\n  .mdc-tab {\n    @include base_($query);\n  }\n\n  .mdc-tab__content {\n    @include content_($query);\n  }\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: variables.$icon-size;\n      height: variables.$icon-size;\n      font-size: variables.$icon-size;\n    }\n  }\n\n  .mdc-tab--active {\n    @include active_($query);\n  }\n\n  .mdc-tab {\n    @include feature-targeting.targets($feat-structure) {\n      background: none;\n    }\n  }\n\n  @include static-styles($query: $query);\n  // postcss-bem-linter: end\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other tah styles. It is recommended that most users use `mdc-tab-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  @include ripple_($query);\n}\n\n@mixin horizontal-padding($padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-right: $padding;\n    padding-left: $padding;\n  }\n}\n\n@mixin text-label-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n\n      fill: currentColor;\n    }\n  }\n}\n\n@mixin states-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include icon-color($color, $query);\n  @include states-color($color, $query);\n  @include text-label-color($color, $query);\n}\n\n@mixin active-text-label-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include text-label-color($color, $query);\n  }\n}\n\n@mixin active-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include icon-color($color, $query);\n  }\n}\n\n@mixin active-states-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include states-color($color, $query);\n  }\n}\n\n@mixin parent-positioning($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n  }\n}\n\n@mixin fixed-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex: 0 1 $width;\n  }\n}\n\n///\n/// Sets tab height\n///\n/// @param {Number} $height Height value in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets tab text transform\n///\n/// @param {String} $transform The text-transform property to apply.\n///\n@mixin text-transform($transform, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-transform: $transform;\n  }\n}\n\n///\n/// Sets tab min-width.\n///\n/// @param {Number} $min-width Minimum width value in `px`.\n///\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.typography(button, $query);\n  @include text-label-color(variables.$text-label-color-default, $query);\n  @include icon-color(variables.$icon-color-default, $query);\n  @include tab-indicator-mixins.surface($query);\n\n  @include ripple-theme.focus() {\n    &.mdc-tab--active .mdc-tab__focus-ring {\n      @include focus-ring.focus-ring(\n        $query: $query,\n        $ring-radius: 10px,\n        $container-outer-padding-vertical: -6px,\n        $container-outer-padding-horizontal: -4px\n      );\n\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: -2px;\n        // Set z-index to +1 above the .mdc-tab\n        z-index: 2;\n      }\n    }\n\n    .mdc-tab__focus-ring {\n      @include focus-ring.focus-ring(\n        $query: $query,\n        $ring-radius: 10px,\n        $container-outer-padding-vertical: -4px,\n        $container-outer-padding-horizontal: -4px\n      );\n\n      @include feature-targeting.targets($feat-structure) {\n        // Set z-index to +1 above the .mdc-tab\n        z-index: 2;\n      }\n    }\n  }\n}\n\n@mixin ripple_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab {\n    @include ripple.surface(\n      $query,\n      $ripple-target: variables.$ripple-target,\n      $include-will-change: false\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple-theme.states(\n      $color: primary,\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      // TODO(b/151931961): Remove the following line once resolved\n      will-change: transform, opacity;\n    }\n  }\n}\n\n@mixin content_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include tab-indicator-mixins.surface($query);\n}\n\n@mixin stacked_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-tab__content {\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .mdc-tab__text-label {\n      padding-top: 6px;\n      padding-bottom: 4px;\n    }\n  }\n}\n\n@mixin active_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include text-label-color(variables.$text-label-color-active, $query);\n  @include icon-color(variables.$icon-color-active, $query);\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/validate';\n@use '@material/theme/theme-color';\n\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  active-indicator-height: 3px,\n  active-indicator-shape: (\n    3px,\n    3px,\n    0,\n    0,\n  ),\n);\n$custom-property-prefix: 'tab-indicator';\n\n@mixin theme($theme) {\n  $theme: validate.theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  // TODO(b/251881053): Use theme-styles mixin from validate module\n  // all customers are migrated\n  @include theme.validate-theme-styles($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n  @include underline-color(map.get($theme, active-indicator-color));\n  @include _underline-height(map.get($theme, active-indicator-height));\n  @include _underline-shape(map.get($theme, active-indicator-shape));\n}\n\n@mixin underline-color($color) {\n  .mdc-tab-indicator__content--underline {\n    @include theme.property(border-color, $color);\n  }\n}\n\n@mixin _underline-height($height) {\n  .mdc-tab-indicator__content--underline {\n    @include theme.property(border-top-width, $height);\n  }\n}\n\n@mixin _underline-shape($radius) {\n  .mdc-tab-indicator__content--underline {\n    @include theme.property(border-radius, $radius);\n  }\n}\n","@use '@material/checkbox/checkbox' as mdc-checkbox;\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme';\n@use 'sass:map';\n@use 'sass:color';\n@use '../core/ripple/ripple-theme';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use './checkbox-private';\n\n// Apply ripple colors to the MatRipple element and the MDC ripple element when the\n// checkbox is selected.\n@mixin _selected-ripple-colors($theme, $mdc-color) {\n  .mdc-checkbox--selected ~ {\n    .mat-mdc-checkbox-ripple {\n      @include ripple-theme.color((\n          foreground: (\n              base: mdc-theme-color.prop-value($mdc-color)\n          ),\n      ));\n    }\n\n    .mdc-checkbox__ripple {\n      background: $theme;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $foreground: map.get($config, foreground);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-checkbox {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include ripple-theme.color((\n        foreground: (\n          base: mdc-theme-color.prop-value(on-surface)\n        ),\n      ));\n\n      .mdc-checkbox__ripple {\n        background: mdc-theme-color.prop-value(on-surface);\n      }\n\n      // MDC's checkbox doesn't support a `color` property. We add support for it by adding a CSS\n      // class for accent and warn style, and applying the appropriate overrides below. Since we\n      // don't use MDC's ripple, we also need to set the color for our replacement ripple.\n      &.mat-primary {\n        @include checkbox-private.private-checkbox-styles-with-color($config, $primary, primary);\n        @include _selected-ripple-colors($primary, primary);\n      }\n\n      &.mat-accent {\n        @include checkbox-private.private-checkbox-styles-with-color($config, $accent, secondary);\n        @include _selected-ripple-colors($accent, secondary);\n      }\n\n      &.mat-warn {\n        @include checkbox-private.private-checkbox-styles-with-color($config, $warn, error);\n        @include _selected-ripple-colors($warn, error);\n      }\n    }\n\n    .mat-mdc-checkbox-disabled label {\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-checkbox.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include mdc-helpers.disable-mdc-fallback-declarations {\n    .mat-mdc-checkbox .mdc-checkbox {\n      @include mdc-checkbox-theme.density(\n        $density-scale,\n        $query: mdc-helpers.$mdc-base-styles-query\n      );\n    }\n\n    @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n      .mat-mdc-checkbox-touch-target {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/fab/fab' as mdc-fab;\n@use '@material/fab/fab-theme' as mdc-fab-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _fab-variant($foreground, $background) {\n  @include mdc-fab-theme.theme((\n    container-color: $background,\n    icon-color: $foreground,\n  ));\n\n  --mat-mdc-fab-color: #{$foreground};\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $is-dark: map.get($config, is-dark);\n\n    .mat-mdc-fab, .mat-mdc-mini-fab {\n      @include button-theme-private.ripple-theme-styles($config, true);\n\n      &.mat-unthemed {\n        @include _fab-variant($on-surface, mdc-theme-color.prop-value(surface));\n      }\n\n      &.mat-primary {\n        @include _fab-variant(\n          mdc-theme-color.prop-value(on-primary),\n          mdc-theme-color.prop-value(primary)\n        );\n      }\n\n      &.mat-accent {\n        @include _fab-variant(\n          mdc-theme-color.prop-value(on-secondary),\n          mdc-theme-color.prop-value(secondary)\n        );\n      }\n\n      &.mat-warn {\n        @include _fab-variant(\n          mdc-theme-color.prop-value(on-error),\n          mdc-theme-color.prop-value(error)\n        );\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include _fab-variant(\n          rgba($on-surface, if(map.get($config, is-dark), 0.5, 0.38)),\n          rgba($on-surface, 0.12)\n        );\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-fab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-fab') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/snackbar/snackbar-theme' as mdc-snackbar-theme;\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-snack-bar-container {\n      $button-color: if(\n        $is-dark-theme,\n        mdc-theme-color.prop-value(text-primary-on-light),\n        theming.get-color-from-palette($accent, text)\n      );\n      --mat-mdc-snack-bar-button-color: #{$button-color};\n      $on-surface: mdc-theme-color.prop-value(on-surface);\n      $surface: mdc-theme-color.prop-value(surface);\n\n      @include mdc-snackbar-theme.theme((\n        container-color: if(\n          meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n          color.mix($on-surface, $surface, 80%),\n          $on-surface\n        ),\n        supporting-text-color: if(\n          meta.type-of($surface) == color,\n          rgba($surface, mdc-theme-color.text-emphasis(high)),\n          $surface\n        )\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @if ($config) {\n      .mat-mdc-snack-bar-container {\n        @include mdc-snackbar-theme.theme((\n          supporting-text-font: typography-utils.font-family($config, body-2),\n          supporting-text-line-height: typography-utils.line-height($config, body-2),\n          supporting-text-size: typography-utils.font-size($config, body-2),\n          supporting-text-weight: typography-utils.font-weight($config, body-2),\n        ));\n      }\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include table-styles($query: $query);\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  @include data-table-progress-indicator.static-styles($query: $query);\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-header-cell.static-styles($query);\n  @include data-table-cell.static-styles($query);\n  @include data-table-pagination.static-styles($query);\n  @include data-table-progress-indicator.static-styles($query);\n}\n\n// This API includes only the table styles without the sorting, pagination and\n// loading styles. It is intended to be used by frameworks that only need the\n// table styles.\n@mixin table-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n\n  @include static-styles($query);\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/tokens/v0_132' as tokens;\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n$light-theme: tokens.md-comp-data-table-values();\n\n@function remove-unsupported-keys($theme) {\n  $theme: map.remove(\n    $theme,\n    (\n      // TODO(b/254356584): We don't set pagination background-color.\n      'footer-container-color',\n      // TODO(b/254356584): Select doesn't have Theming API support yet.\n      'footer-outlined-select-text-field-container-height',\n      // TODO(b/254356584): We don't add hover styles on header.\n      'header-hover-headline-color',\n      // TODO(b/254356584): We don't add hover styles on header.\n      'header-hover-sorting-icon-button-color',\n      // TODO(b/254356584): We don't support disabled rows.\n      'row-item-disabled-label-text-color',\n      // TODO(b/254356584): We don't support disabled rows.\n      'row-item-disabled-label-text-opacity',\n      // TODO(b/254356584): We don't add hover styles on selected rows.\n      'row-item-selected-hover-state-layer-color',\n      // TODO(b/254356584): We don't add hover styles on selected rows.\n      'row-item-selected-hover-state-layer-opacity',\n      // TODO(b/254356584): We don't have state layers on rows.\n      'row-item-unselected-hover-state-layer-color'\n        // TODO(b/254356584): We don't have state layers on rows.\n      'row-item-unselected-hover-state-layer-opacity'\n    )\n  );\n  @return $theme;\n}\n\n$_validation-theme: remove-unsupported-keys($light-theme);\n\n$custom-property-prefix: 'data-table';\n\n@mixin theme($theme) {\n  @include theme.validate-theme($_validation-theme, $theme);\n  @include keys.declare-custom-properties($theme, $custom-property-prefix);\n}\n\n@mixin theme-styles($theme, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include theme.validate-theme-styles($_validation-theme, $theme);\n  $theme: keys.create-theme-properties($theme, $custom-property-prefix);\n\n  ///////////\n  // Table //\n  ///////////\n\n  @include shape-radius(map.get($theme, 'container-shape'), $query: $query);\n  @include stroke-color(map.get($theme, 'outline-color'), $query: $query);\n  @include stroke-size(map.get($theme, 'outline-width'), $query: $query);\n\n  ////////////\n  // Header //\n  ////////////\n\n  @include header-row-fill-color(\n    map.get($theme, 'header-container-color'),\n    $query: $query\n  );\n  @include header-row-height(\n    map.get($theme, 'header-container-height'),\n    $query: $query\n  );\n  @include header-row-text-color(\n    map.get($theme, 'header-headline-color'),\n    $query: $query\n  );\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-typography) {\n      $font: map.get($theme, 'header-headline-font');\n      $line-height: map.get($theme, 'header-headline-line-height');\n      $size: map.get($theme, 'header-headline-size');\n      $tracking: map.get($theme, 'header-headline-tracking');\n      $weight: map.get($theme, 'header-headline-weight');\n\n      @include theme.property('font-family', $font);\n      @include theme.property('line-height', $line-height);\n      @include theme.property('font-size', $size);\n      @include theme.property('letter-spacing', $tracking);\n      @include theme.property('font-weight', $weight);\n    }\n  }\n\n  //////////\n  // Rows //\n  //////////\n\n  // Separated because row-height() sets min-height on pagination\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        'height',\n        map.get($theme, 'row-item-container-height')\n      );\n    }\n  }\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-typography) {\n      $font: map.get($theme, 'row-item-label-text-font');\n      $line-height: map.get($theme, 'row-item-label-text-line-height');\n      $size: map.get($theme, 'row-item-label-text-size');\n      $tracking: map.get($theme, 'row-item-label-text-tracking');\n      $weight: map.get($theme, 'row-item-label-text-weight');\n\n      @include theme.property('font-family', $font);\n      @include theme.property('line-height', $line-height);\n      @include theme.property('font-size', $size);\n      @include theme.property('letter-spacing', $tracking);\n      @include theme.property('font-weight', $weight);\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      // Separated because row-text-color() also sets color on pagination text\n      @include theme.property(\n        'color',\n        map.get($theme, 'row-item-label-text-color')\n      );\n    }\n  }\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      // Separated because divider-color() also sets color on pagination select\n      @include theme.property(\n        'border-bottom-color',\n        map.get($theme, 'row-item-outline-color')\n      );\n    }\n  }\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      // Separated because divider-color() also sets color on pagination select\n      @include theme.property(\n        'border-top-color',\n        map.get($theme, 'row-item-outline-color')\n      );\n    }\n  }\n  @include divider-size(\n    map.get($theme, 'row-item-outline-width'),\n    $query: $query\n  );\n  @include row-fill-color(\n    map.get($theme, 'row-item-unselected-container-color'),\n    $query: $query\n  );\n  @include selected-row-fill-color(\n    map.get($theme, 'row-item-selected-container-color'),\n    $query: $query\n  );\n\n  ////////////\n  // Footer //\n  ////////////\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-typography) {\n      $font: map.get($theme, 'footer-supporting-text-font');\n      $line-height: map.get($theme, 'footer-supporting-text-line-height');\n      $size: map.get($theme, 'footer-supporting-text-size');\n      $tracking: map.get($theme, 'footer-supporting-text-tracking');\n      $weight: map.get($theme, 'footer-supporting-text-weight');\n\n      @include theme.property('font-family', $font);\n      @include theme.property('line-height', $line-height);\n      @include theme.property('font-size', $size);\n      @include theme.property('letter-spacing', $tracking);\n      @include theme.property('font-weight', $weight);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      // Separated because row-height() also sets height on row\n      @include theme.property(\n        'min-height',\n        map.get($theme, 'footer-container-height')\n      );\n    }\n  }\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-color) {\n      // Separated because row-text-color() also sets color on row text\n      @include theme.property(\n        'color',\n        map.get($theme, 'footer-supporting-text-color')\n      );\n    }\n  }\n}\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select--outlined {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('border-bottom-color', $color);\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('border-top-color', $color);\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('border-bottom-width', $size);\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('border-top-width', $size);\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading/trailing header cells,\n  // and leading/trailing cells of last row.\n  // Cells that have explicit background color applied require border\n  // radius to take the parents' rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n  $bottom-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 3)\n  );\n  $bottom-left-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 4)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-left-radius, $bottom-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-right-radius,\n          if($rtl-reflexive, $bottom-left-radius, $bottom-right-radius)\n        );\n\n        border-bottom-left-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-right-radius, $bottom-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-left-radius,\n          if($rtl-reflexive, $bottom-right-radius, $bottom-left-radius)\n        );\n\n        border-bottom-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property('border-width', $size);\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('border-color', $color);\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('height', $height);\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('height', $height);\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('min-height', $height);\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/data-table/data-table' as mdc-data-table;\n@use '@material/data-table' as mdc-data-table-theme;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  // Save original values of MDC global variables. We need to save these so we can restore the\n  // variables to their original values and prevent unintended side effects from using this mixin.\n  $orig-selected-row-fill-color: mdc-data-table-theme.$selected-row-fill-color;\n  $orig-divider-color: mdc-data-table-theme.$divider-color;\n  $orig-row-hover-fill-color: mdc-data-table-theme.$row-hover-fill-color;\n  $orig-header-row-text-color: mdc-data-table-theme.$header-row-text-color;\n  $orig-row-text-color: mdc-data-table-theme.$row-text-color;\n  $orig-stroke-color: mdc-data-table-theme.$stroke-color;\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    mdc-data-table-theme.$selected-row-fill-color: rgba(mdc-theme-color.prop-value(primary), 0.04);\n    mdc-data-table-theme.$divider-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12);\n    mdc-data-table-theme.$row-hover-fill-color: rgba(mdc-theme-color.prop-value(on-surface), 0.04);\n    mdc-data-table-theme.$header-row-text-color: rgba(mdc-theme-color.prop-value(on-surface), 0.87);\n    mdc-data-table-theme.$row-text-color: rgba(mdc-theme-color.prop-value(on-surface), 0.87);\n    mdc-data-table-theme.$stroke-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12);\n\n    @include mdc-data-table.table-styles($query: mdc-helpers.$mdc-theme-styles-query);\n  }\n\n  // Restore original values of MDC global variables.\n  mdc-data-table-theme.$selected-row-fill-color: $orig-selected-row-fill-color;\n  mdc-data-table-theme.$divider-color: $orig-divider-color;\n  mdc-data-table-theme.$row-hover-fill-color: $orig-row-hover-fill-color;\n  mdc-data-table-theme.$header-row-text-color: $orig-header-row-text-color;\n  mdc-data-table-theme.$row-text-color: $orig-row-text-color;\n  mdc-data-table-theme.$stroke-color: $orig-stroke-color;\n\n  .mat-mdc-table {\n    $background: map.get($config, background);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-data-table.table-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-table {\n    @include mdc-data-table-theme.density($density-scale,\n      $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '@material/circular-progress/circular-progress-theme' as mdc-circular-progress-theme;\n\n\n@mixin _palette-styles($config, $palette) {\n  $color: theming.get-color-from-palette(map.get($config, $palette));\n  @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-progress-spinner {\n      @include _palette-styles($config, primary);\n\n      &.mat-accent {\n        @include _palette-styles($config, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($config, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@angular/material' as mat;\r\n@import '@angular/material/theming';\r\n\r\n// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.\r\n//  The following line adds:\r\n//    1. Default typography styles for all components\r\n//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)\r\n//  If you specify typography styles for the components you use elsewhere, you should delete this line.\r\n//  If you don't need the default component typographies but still want the hierarchy styles,\r\n//  you can delete this line and instead use:\r\n//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`\r\n@include mat.all-legacy-component-typographies();\r\n@include mat.legacy-core();\r\n\r\n$primary-color: #00aeef;\r\n$secondary-color: #ec008c;\r\n$yallow-color: #ffcf35;\r\n$light-color : #f6f8fa;\r\n$light-color-text-bg : #fff;\r\n$light-color-text-bg-hover : #eaf0fb;\r\n$white-color: #fff;\r\n$black-color: #000;\r\n$title-color: #18272c;\r\n$border-color: #e9ebec;\r\n$scrolbar-color: #c5cfda;\r\n\r\n$wamtsol-blue: (\r\n 50: #00aeef,\r\n 100: #dddd,\r\n 200: #eee,\r\n 300: #000,\r\n // ... continues to 900\r\n contrast: (\r\n   50: rgba(255,255,255),\r\n   100: rgba(black, 0.87),\r\n   200: rgba(black, 0.87),\r\n   300: white,\r\n   // ... continues to 900\r\n )\r\n);\r\n$wamtsol-primary: mat.define-palette($wamtsol-blue, 50, 100, 200);\r\n\r\n$wamtsol-pink: (\r\n 50: #ec008c,\r\n 100: #dddd,\r\n 200: #eee,\r\n 300: #000,\r\n // ... continues to 900\r\n contrast: (\r\n   50:rgba(255,255,255),\r\n   100: rgba(black, 0.87),\r\n   200: rgba(black, 0.87),\r\n   300: white,\r\n   // ... continues to 900\r\n )\r\n);\r\n$wamtsol-accent: mat.define-palette($wamtsol-pink, 50, 100, 200);\r\n\r\n$wamtsol-theme: mat.define-light-theme((\r\n color: (\r\n   primary: $wamtsol-primary,\r\n   accent: $wamtsol-accent,\r\n )\r\n));\r\n\r\n@include mat.all-legacy-component-themes($wamtsol-theme);\r\n\r\n// Include the theme mixins for other components you use here.\r\n\r\n$dark-app-theme: mat-dark-theme((\r\n  color: (\r\n    primary: mat-palette($mat-cyan),\r\n    accent: mat-palette($mat-blue-gray, A200, A100, A400),\r\n    warn: mat-palette($mat-amber),\r\n  )\r\n));\r\n\r\n.dark-theme {\r\n  @include angular-material-color($dark-app-theme);\r\n  .logo {\r\n    a{\r\n      h2 {\r\n        color: #fff;\r\n      }\r\n    } \r\n  }\r\n}\r\n.light-theme{\r\n  .logo {\r\n    a{\r\n      h2 {\r\n        color: $black-color;\r\n      }\r\n    } \r\n  }\r\n  .mat-toolbar{\r\n    background-color: $light-color;\r\n    &.mat-topbar{\r\n      background-color: transparent;\r\n      border-bottom: 1px solid #e9ebec;\r\n      .mat-icon{\r\n        color: $black-color;\r\n      }\r\n    }\r\n  }\r\n  .mat-drawer-container {\r\n      background: transparent;\r\n  }\r\n  .sidenav {\r\n    background-color: $light-color;\r\n    border-right: 1px solid $border-color;\r\n  }\r\n  .main-menu{\r\n    a {\r\n      color:#395660 !important;\r\n      height: auto;\r\n      margin: 0px;\r\n      font-weight: 600;\r\n      font-family: 'Roboto', sans-serif;\r\n      //background: $light-color-text-bg;\r\n      border-bottom: 1px solid rgba(0,0,0,6%);\r\n      border-radius: 0px;\r\n      padding: 4px 0px;\r\n      &:first-child{\r\n        border-top: 1px solid rgba(0,0,0,6%);\r\n      }\r\n      &:hover{\r\n        //background: $light-color-text-bg-hover;\r\n      }\r\n      &:focus{\r\n        //background: $light-color-text-bg-hover;\r\n      }\r\n      &.active{\r\n        //background: $light-color-text-bg-hover;\r\n      }\r\n    }\r\n  }\r\n  .content {\r\n    .table-header {\r\n      .brand-title{\r\n        h2 {\r\n          color: $black-color;\r\n          font-weight: 700;\r\n          font-family: 'Roboto', sans-serif;\r\n        }\r\n      }\r\n      .brands-button {\r\n        float: right;\r\n        font-weight: 700;\r\n        .mat-focus-indicator.mat-raised-button.mat-button-base {\r\n          color: $black-color;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .drop-down-menu{\r\n    background-color: $light-color !important;\r\n    .mat-menu-content {\r\n      .mat-raised-button {\r\n        color: $black-color !important;\r\n        &:hover{\r\n          background-color: $light-color !important;\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n  .bashboard-box{\r\n    p {\r\n      color: $title-color;\r\n    } \r\n  }\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    background: $light-color-text-bg-hover; \r\n  }\r\n  \r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: $scrolbar-color; \r\n  }\r\n\r\n  /* Handle on hover */\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: $scrolbar-color; \r\n  }\r\n  .mat-slide-toggle-bar {\r\n    background: #b1c9c9;\r\n  }\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110]}